{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\",\n      type_list: 'products/list',\n      //(это часть URL-list)\n      main_type: 'products',\n      //(это часть URL)\n      list_items: [],\n      title: \"Roles\",\n      items: [{\n        text: \"Главная\",\n        href: \"/\"\n      }, {\n        text: \"roles\",\n        active: true\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      console.log(this.setPage);\n      this.page = numPage;\n      this.retrieveProducts();\n    },\n    retrieveProducts: function retrieveProducts() {\n      var _this = this;\n\n      console.log(\"*******************\");\n      console.log(this.page);\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      ProductsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        console.log(response.data);\n        _this.Products = response.data.List;\n        _this.perPage = response.data.pg_length;\n        _this.page = response.data.pg_number;\n        var i = 0;\n\n        for (i = 0; i < response.data.total_pg; i++) {\n          _this.pages[i] = i + 1;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    refreshList: function refreshList() {\n      this.retrieveProducts();\n      this.currentProducts = null;\n      this.currentIndex = -1;\n    },\n    setActiveProducts: function setActiveProducts(products, index) {\n      this.currentProducts = products;\n      this.currentIndex = products ? index : -1;\n    },\n    removeAllProducts: function removeAllProducts() {\n      var _this2 = this;\n\n      ProductsDataService.deleteAll().then(function (response) {\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getProductByName: function getProductByName() {\n      this.retrieveProducts();\n      this.pages = [];\n    },\n    deleteProduct: function deleteProduct(id) {\n      var _this3 = this;\n\n      ProductsDataService.delete(id).then(function (response) {\n        if (response.data.message = 202) {\n          _this3.retrieveProducts();\n\n          console.log();\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveProducts();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","ProductsDataService","page","title","meta","name","content","description","data","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","jsonFields","value","search","type_list","main_type","list_items","items","text","href","active","components","methods","setPage","numPage","console","log","retrieveProducts","pg_number","pg_length","field","getAll","then","response","Products","List","i","total_pg","catch","e","refreshList","currentProducts","currentIndex","setActiveProducts","products","index","removeAllProducts","deleteAll","getProductByName","deleteProduct","id","delete","message","mounted"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\products\\list.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  \n data() {\n    return {\n\n\n      PageRequest: {\n                        Fields: [{\n                        Name :'',\n                        Value:'',\n                        Operation:'',\n                        Order:'',\n                        }],\n                        PageNumber:0,\n                        PageLenght:0,\n                        TotalRecords:0,\n                        TotalPage:0,\n                    },\n                page: 1,\n                perPage: 7,\n                pages: [],\n                jsonPages: {\n                            PageNumber: 0,\n                            TotalRecords:0,\n                },\n                jsonFields: [{\n                            name:'',\n                            value: ''\n                }],\n\n                search:\"\",\n\n                type_list:'products/list',//(это часть URL-list)\n                main_type:'products',//(это часть URL)\n                list_items:[],\n                title: \"Roles\",\n                items: [\n                    {\n                        text: \"Главная\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"roles\",\n                        active: true,\n                    },\n   \n                ]}; \n       \n  },\n\n  components: {\n    Layout,\n    PageHeader,\n  },\n   methods: {\n    setPage(numPage){\n console.log(this.setPage)\n        this.page = numPage;\n         this.retrieveProducts();\n        \n    },\n    retrieveProducts() {\n         console.log(\"*******************\")\n          console.log(this.page)\n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       ProductsDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n         console.log(response.data)\n          this.Products = response.data.List;\n           \n          this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n          \n          let i=0;\n          for(i=0; i<response.data.total_pg;i++){\n              this.pages[i]=i+1;\n           \n          }\n\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    refreshList() {\n      this.retrieveProducts();\n      this.currentProducts = null;\n      this.currentIndex = -1;\n    },\n\n    setActiveProducts(products, index) {\n      this.currentProducts = products;\n      this.currentIndex = products ? index : -1;\n    },\n\n    removeAllProducts() {\n       ProductsDataService.deleteAll()\n        .then(response => {\n     \n          this.refreshList();\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n\n    getProductByName(){\n         this.retrieveProducts();\n         this.pages = [];\n      \n    },\n\n     deleteProduct(id) {\n     \n      ProductsDataService.delete(id)\n        .then(response => {\n        \n         \n        if (response.data.message = 202){\n        this.retrieveProducts();\n        console.log()\n        }\n        else{\n        return response.data.message}\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    }\n  },\n  mounted() {\n    this.retrieveProducts();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n    <div>\n    <h4>Products</h4>\n    </div>\n\n<div>\n    <div class=\"col-lg-6\">\n         <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getProductByName\" key=\"enter\">search</button>\n        \n         </div>\n    </div>\n</div>\n<p></p>\n  \n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Slug</th>\n            <th scope=\"col\">Brand</th>\n            <th scope=\"col\">SKU</th>\n            <th scope=\"col\">Short_description</th>\n            <th scope=\"col\"></th>\n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"(Product, index) in Products\" :key=\"index\">\n    \n           \n            <td>{{ Product.Id }}</td>\n            <td>{{ Product.Name }}</td>\n            <td>{{ Product.Slug }}</td>\n            <td>{{ Product.Brand.Name}}</td>\n            <td>{{ Product.SKU}}</td>\n            <td>{{ Product.short_description}}</td>\n           \n            \n            <td>\n                <div class=\"hstack gap-3 flex-wrap\">\n                    <router-link :to=\"{name: 'ProductEdit', params: { id: Product.Id }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteProduct(Product.Id)\"></i></a>\n                </div>\n            </td>\n        </tr>\n       \n    </tbody>\n    <p></p>\n</table>\n\n<div class=\"pagination-wrap hstack gap-2\">\n              <a\n                class=\"page-item pagination-prev disabled\"\n                href=\"#\"\n                v-if=\"page != 1\"\n                @click=\"setPage((--page))\"\n              >\n                Previous\n              </a>\n              <ul class=\"pagination listjs-pagination mb-0\">\n                <li\n                 :class=\"{\n                              active: pageNumber == page,\n                              disabled: pageNumber == '...',\n                            }\"\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\n                  :key=\"index\"\n                  @click=\"setPage(page = pageNumber)\"\n                >\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pageNumber)\">{{ pageNumber }}</a>\n                </li>\n              </ul>\n              <a\n                class=\"page-item pagination-next\"\n                href=\"#\"\n                @click=\"setPage(++page)\"\n                v-if=\"page < pages.length\"\n              >\n                Next\n              </a>\n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}