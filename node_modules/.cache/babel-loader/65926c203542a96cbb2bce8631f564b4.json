{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      currentGTD: {\n        Id: -1,\n        NumId: \"\",\n        Country: {\n          Id: -1,\n          Name: \"\"\n        }\n      },\n      message: '',\n      Countries: [{\n        id: -1,\n        text: \"\"\n      }],\n      selectCountry: {\n        id: -1,\n        text: \"\"\n      }\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    getGTD: function getGTD(id) {\n      var _this = this;\n\n      GTDDataService.get(id).then(function (response) {\n        console.log(response.data);\n\n        if (response.status == 200) {\n          _this.currentGTD = response.data;\n        } else {\n          _this.$router.push({\n            path: \"/GTDs\"\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateGTD: function updateGTD() {\n      var _this2 = this;\n\n      this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.Id);\n      GTDDataService.update(this.currentGTD.Id, this.currentGTD).then(function (response) {\n        _this2.message = 'The GTD was updated successfully!';\n\n        if (response.data.status_code == 200) {\n          _this2.$router.push({\n            path: \"/GTDs\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deleteGTD: function deleteGTD() {\n      var _this3 = this;\n\n      GTDDataService.delete(this.currentGTD.Id).then(function (response) {\n        _this3.$router.push({\n          name: \"GTD\"\n        });\n\n        if (response.status == 202) {\n          _this3.$router.push({\n            path: \"/GTDs\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    retrieveCountries: function retrieveCountries() {\n      var _this4 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CountryDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        console.log(response.data);\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          console.log(\"<<<<<<<<<<>>>>>>>>>>>>\");\n          console.log(response.data.List);\n          var currentCountry = response.data.List[i];\n\n          if (currentCountry.Id == _this4.currentGTD.Country.Id) {\n            _this4.selectCountry.id = currentCountry.id;\n            _this4.selectCountry.text = currentCountry.name;\n          }\n\n          _this4.Countries[i] = {\n            id: currentCountry.id,\n            text: currentCountry.name\n          };\n        } //this.Countries = response.data.Countries;\n\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    mySelectEvent: function mySelectEvent(_ref) {\n      var id = _ref.id,\n          text = _ref.text;\n      this.currentGTD.Country.Id = id;\n      this.currentGTD.Country.Name = text;\n    }\n  },\n  mounted: function mounted() {\n    this.message = '';\n    this.getGTD(this.$route.params.id);\n    this.retrieveCountries();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","GTDDataService","CountryDataService","Select2","page","title","meta","name","content","description","data","currentGTD","Id","NumId","Country","Name","message","Countries","id","text","selectCountry","components","methods","getGTD","get","then","console","log","response","status","$router","push","path","catch","e","updateGTD","parseInt","update","status_code","deleteGTD","delete","retrieveCountries","jsonPages","pg_number","pg_length","search","jsonFields","field","value","getAll","i","List","length","currentCountry","mySelectEvent","mounted","$route","params"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport GTDDataService from \"/src/services/GTDDataService\";\r\nimport CountryDataService from \"/src/services/CountryDataService\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  data() {\r\n   return {\r\n      currentGTD:{\r\n          Id:-1,\r\n          NumId:\"\",\r\n         Country:{\r\n            Id:-1,\r\n            Name:\"\"\r\n         },\r\n      },\r\n      message: '',\r\n        Countries:[\r\n          {\r\n            id:-1,\r\n            text:\"\"\r\n          }\r\n        ],\r\n        selectCountry:\r\n          {\r\n            id:-1,\r\n            text:\"\"\r\n          }\r\n        ,\r\n    };\r\n    \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    Select2\r\n  },\r\n    methods: {\r\n    getGTD(id) {\r\n       \r\n       GTDDataService.get(id)\r\n        .then(response => {\r\n         \r\n            console.log(response.data)\r\n            if (response.status == 200){\r\n              this.currentGTD = response.data;\r\n            }else{\r\n              this.$router.push({path: \"/GTDs\"});\r\n              \r\n            }\r\n          \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    updateGTD() {\r\n        \r\n        this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.Id);\r\n       GTDDataService.update(this.currentGTD.Id, this.currentGTD)\r\n       \r\n        .then(response => {\r\n         \r\n          this.message = 'The GTD was updated successfully!';\r\n        if (response.data.status_code == 200){\r\n        this.$router.push({path: \"/GTDs\"})}\r\n        else{\r\n        return response.data.message}\r\n        })\r\n        \r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n\r\n    deleteGTD() {\r\n      \r\n      GTDDataService.delete(this.currentGTD.Id)\r\n        .then(response => {\r\n         \r\n          this.$router.push({ name: \"GTD\" });\r\n        if (response.status == 202){\r\n        this.$router.push({path: \"/GTDs\"})}\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n    \r\n       retrieveCountries(){\r\n        \r\n      this. jsonPages = {\r\n               pg_number:1,\r\n                  pg_length: 1000\r\n            };\r\n         \r\n            if (this.search!=\"\"){\r\n            this.jsonFields = [{\r\n                field:\"name\",\r\n                value: this.search\r\n            }];\r\n            }else{\r\n                this.jsonFields = [];\r\n            }\r\n\r\n\r\n       CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          for(let i = 0; i < response.data.List.length; i++){\r\n            console.log(\"<<<<<<<<<<>>>>>>>>>>>>\")\r\n            console.log(response.data.List)\r\n              let currentCountry = response.data.List[i];\r\n            if (currentCountry.Id == this.currentGTD.Country.Id){\r\n                this.selectCountry.id = currentCountry.id;\r\n                this.selectCountry.text = currentCountry.name;\r\n            }\r\n              this.Countries[i]={\r\n                id:currentCountry.id, \r\n                text:currentCountry.name\r\n              };\r\n              \r\n          }\r\n          //this.Countries = response.data.Countries;\r\n        \r\n         \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n     mySelectEvent({id, text}){\r\n            this.currentGTD.Country.Id = id;\r\n            this.currentGTD.Country.Name = text;\r\n     }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    \r\n    this.getGTD(this.$route.params.id);\r\n     this.retrieveCountries();\r\n     \r\n    \r\n  }\r\n\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n     <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\r\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model.number=\"currentGTD.num_id\" >\r\n          </div>                     \r\n     </div> \r\n\r\n  \r\n\r\n<div class=\"col-xxl-3 col-md-6\">\r\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-countries\") }}</label>\r\n    <Select2 v-model=\"currentGTD.Country.id\" :options=\"this.Countries\" @select=\"mySelectEvent($event)\"/>\r\n</div>\r\n\r\n      \r\n<p>\r\n \r\n    </p>\r\n  \r\n    \r\n            <div class=\"row\">\r\n                <div>\r\n                    <b-button @click=\"updateGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \r\n                              \r\n                </div> \r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}