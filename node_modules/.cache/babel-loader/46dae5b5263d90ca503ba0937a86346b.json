{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport DocumentsDataService from \"../../services/DocumentsDataService\";\nimport UniversalDataService from \"../../services/UniversalDataService\";\nimport router from \"../../router\";\nexport default {\n  page: {\n    title: \"Documents\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0,\n        Fields: [{\n          name: '',\n          value: '',\n          operation: ''\n        }]\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\",\n      type_list: 'documents/list',\n      main_type: 'documents',\n      list_items: [],\n      title: \"Documents\",\n      items: [{\n        text: \"Главная\",\n        href: \"/\"\n      }, {\n        text: \"Documents\",\n        active: true\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    list: function list() {\n      var _this = this;\n\n      this.jsonPages.Fields = [{\n        name: 'CompanySender',\n        order: false,\n        operation: 'LIKE',\n        value: ''\n      }];\n      UniversalDataService.setPath(this.type_list);\n      UniversalDataService.list(this.jsonPages).then(function (response) {\n        console.log(_this.jsonPages); //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n\n        _this.list_items = response.data.List;\n        console.log(response);\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    HoldDocument: function HoldDocument(id) {\n      var _this2 = this;\n\n      DocumentsDataService.holddocument(id).then(function (response) {\n        if (response.data.status_code == 200) {\n          _this2.list();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    UnholdDocument: function UnholdDocument(id) {\n      var _this3 = this;\n\n      DocumentsDataService.unholddocument(id).then(function (response) {\n        if (response.data.status_code == 200) {\n          _this3.list();\n        }\n\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    remove: function remove(id) {\n      var _this4 = this;\n\n      UniversalDataService.setPath(this.main_type);\n      UniversalDataService.delete(id).then(function () {\n        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n        _this4.list();\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    edit: function edit(id) {\n      router.push('/' + this.main_type + '/' + id);\n    },\n    getDocumentByName: function getDocumentByName() {\n      this.retrieveDocuments();\n      this.pages = [];\n    }\n  },\n  computed: {\n    localeDate: function localeDate() {\n      // Конвертируем число в строку. Для этого существуют специальные методы\n      // toLocaleDateString() или toLocaleString() или toLocaleTimeString()\n      // Итоговая строка будет зависеть от локализации системы пользователя. \n      // Для русской локали это будет \"01.02.2020\", \n      // для американской \"2/1/2020\", \n      // для немецкой — \"1.2.2020\"\n      // Вы НЕ должны устанавливать формат даты самостоятельно\n      return new Date(this.creation_date).toLocaleDateString();\n    },\n    sortedCompanyname: function sortedCompanyname() {\n      return _toConsumableArray(this.item.CompanySender.name).sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.list();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","DocumentsDataService","UniversalDataService","router","page","title","meta","name","content","description","data","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","value","operation","jsonFields","search","type_list","main_type","list_items","items","text","href","active","components","methods","list","order","setPath","then","console","log","response","List","catch","error","HoldDocument","id","holddocument","status_code","e","UnholdDocument","unholddocument","remove","delete","edit","push","getDocumentByName","retrieveDocuments","computed","localeDate","Date","creation_date","toLocaleDateString","sortedCompanyname","item","CompanySender","sort","a","b","localeCompare","mounted"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\documents\\list.vue"],"sourcesContent":["<style>\n   .filter{\n    margin: 10px   \n   }\n   .col-lg-6{\n    display:  inline-block;\n   }\n   .btn-group{\n    display:  inline-block;\n   }\n   .form-check{\n    margin-left:10px ;\n   }\n    </style>\n\n<script>\n    import Layout from \"../../layouts/main.vue\";\n    import PageHeader from \"@/components/page-header\";\n    import appConfig from \"../../../app.config\";\n\n    import \"prismjs\";\n    import \"prismjs/themes/prism.css\";\n\n    import DocumentsDataService from \"../../services/DocumentsDataService\";\n    import UniversalDataService from \"../../services/UniversalDataService\";\n    import router from \"../../router\";\n    \n    export default {\n        page: {\n            title: \"Documents\",\n            meta: [{ name: \"description\", content: appConfig.description }],\n        },\n        data() {\n            return {\n                PageRequest: {\n                        Fields: [{\n                        Name :'',\n                        Value:'',\n                        Operation:'',\n                        Order:'',\n                        }],\n                        PageNumber:0,\n                        PageLenght:0,\n                        TotalRecords:0,\n                        TotalPage:0,\n                    },\n                page: 1,\n                perPage: 7,\n                pages: [],\n                jsonPages: {\n                            PageNumber: 0,\n                            TotalRecords:0,\n                            Fields:[{\n                                name:'',\n                                value: '',\n                                operation: ''\n                        }],\n                },\n                jsonFields: [{\n                            name:'',\n                            value: ''\n                }],\n\n                search:\"\",\n\n                type_list:'documents/list',\n                main_type:'documents',\n                list_items:[],\n                title: \"Documents\",\n                \n                items: [\n                    {\n                        text: \"Главная\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"Documents\",\n                        active: true,\n                    },\n                    \n                ],\n                \n            };\n        },\n        components: {\n            Layout,\n            PageHeader,\n        },\n\n\n\n        methods:{\n   \n            list(){\n                this.jsonPages.Fields=[{\n                    name:'CompanySender',\n                    order: false,\n                    operation:'LIKE',\n                    value:''\n                }];       \n                UniversalDataService.setPath(this.type_list);\n                UniversalDataService.list(this.jsonPages)\n                    .then(response => {\n                        console.log(this.jsonPages)\n                        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n                        this.list_items = response.data.List;\n                        console.log(response)\n                        \n                    })\n                    .catch(error => {\n                        //dispatch('notification/error', error, { root: true });\n                        console.log(error);\n                    });\n\n                    \n            },\n   \n\n  HoldDocument(id){\n\n\n   DocumentsDataService.holddocument(id)\n    \n        \n        .then(response => {\n\n            if (response.data.status_code == 200){\n               this.list();\n             }\n        \n       \n      \n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n\n  },\n\n  UnholdDocument(id){\n\n\n   DocumentsDataService.unholddocument(id)\n    \n        \n        .then(response => {\n\n          \n             if (response.data.status_code == 200){\n               this.list();\n             }\n            console.log(response.data)\n      \n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n\n  },\n\n\n   remove(id){\n                UniversalDataService.setPath(this.main_type);\n                UniversalDataService.delete(id)\n                    .then(() => {\n                        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n                        this.list();\n                    })\n                    .catch(error => {\n                        //dispatch('notification/error', error, { root: true });\n                        console.log(error);\n                    });\n\n            },\n            edit(id){\n                router.push('/'+this.main_type+'/'+id);\n\n            },\n\n  \n\n   \n    \n\n    getDocumentByName(){\n         this.retrieveDocuments();\n         this.pages = [];\n      \n    },\n \n   \n  },\n   computed: {\n        localeDate() {\n            // Конвертируем число в строку. Для этого существуют специальные методы\n            // toLocaleDateString() или toLocaleString() или toLocaleTimeString()\n            // Итоговая строка будет зависеть от локализации системы пользователя. \n            // Для русской локали это будет \"01.02.2020\", \n            // для американской \"2/1/2020\", \n            // для немецкой — \"1.2.2020\"\n            // Вы НЕ должны устанавливать формат даты самостоятельно\n            return (new Date(this.creation_date)).toLocaleDateString() \n        },\n\n        sortedCompanyname() {\n    return [...this.item.CompanySender.name].sort((a, b) => a.name.localeCompare(b.name));\n  },\n\n\n\n    },\n mounted() {\n            this.list();\n        },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n    <div>\n    <h4>Documents</h4>\n    </div>\n\n<div>\n    <div class=\"col-lg-6\">\n         <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getDocumentByName\" key=\"enter\">search</button>   \n        </div>\n    </div>\n       \n            <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-first dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><i class=\"bx bx-filter-alt\"></i></button>\n            <div class=\"dropdown-menu dropdownmenu-success\">\n            \n            \n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    проведен\n                    </label>\n                </div>\n                <b-dropdown-divider></b-dropdown-divider>\n\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Приход\n                    </label>\n                </div>\n            \n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Расход\n                    </label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Переоценка\n                    </label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Офромление заказа\n                    </label>\n                </div>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Передача\n                    </label>\n                </div>\n            \n                <b-dropdown-divider></b-dropdown-divider>\n\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck2\" uncheked>                                                            \n                    <label class=\"form-check-label\" for=\"formCheck2\">\n                    Передача\n                    </label>\n                </div>\n\n            <a class=\"dropdown-item\" href=\"#\"></a>\n        \n        \n        </div>\n            </div><!-- btn-group -->\n</div>\n\n<p></p>\n  \n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id\n               \n            </th>\n\n\n            <th scope=\"col\">Дата создания\n                <i class=\"ri-arrow-up-down-line\"></i>\n            </th>\n\n\n            <th scope=\"col\">от кого\n                <i class=\"ri-arrow-up-down-line\" @click=\"sortedCompanyname\"></i>\n            </th>\n\n\n            <th scope=\"col\">кому\n                <i class=\"ri-arrow-up-down-line\" @click=\"sortbyname\"></i>\n            </th>\n\n\n            <th scope=\"col\">тип документа\n                <i class=\"ri-arrow-up-down-line\"></i>\n            </th>\n\n\n            <th scope=\"col\">сумма\n                <i class=\"ri-arrow-up-down-line\"></i>\n            </th>\n\n\n            <th scope=\"col\">статус\n                <i class=\"ri-arrow-up-down-line\"></i>\n            </th>\n\n\n            <th scope=\"col\">\n\n            </th>\n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n         <tr v-for=\"item in list_items\" :key=\"item.id\">\n\n        <td><a href=\"#\" class=\"fw-medium\">{{item.id}}</a></td>\n    \n            \n           <td>{{ item.creation_date }}</td>\n            <td>{{ item.CompanySender.name}}</td>\n            <td>{{ item.CompanyRecipient.name}}</td>\n            <td>{{ item.DocumentType.name}}</td>\n            <td>{{ item.sum}}</td>\n            <td>{{ item.Status.name}}</td>\n           \n            \n            <td>\n                <div class=\"hstack gap-3 flex-wrap\">\n\n                  <template  v-if=\"item.Status.id == 1\">\n                  <a href=\"javascript:void(0);\" class=\"link-warning fs-15\"><i class=\" ri-arrow-right-line\" @click=\"UnholdDocument(item.id)\" ></i></a>\n                  </template>\n                  \n                  <template  v-else>\n                   <a href=\"javascript:void(0);\" class=\" link-warning fs-15\"><i class=\"ri-arrow-left-line\" @click=\"HoldDocument(item.id)\"></i></a>\n                  </template>\n                   \n\n\n                   \n                   \n                   \n                   <template v-if=\"item.Status.id == 1\">\n                    <a @click=\"edit(item.id)\" href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a>\n\n                    <a href=\"javascript:void(0);\" class=\"link-danger fs-15\"><i class=\"ri-delete-bin-line\" @click=\"remove(item.id)\"></i></a>\n\n                    \n                   </template>\n\n                   <template v-else>\n                     </template>\n\n                 \n                  \n                  \n                    \n                   \n                \n                \n                </div>\n            </td>\n        </tr>\n       \n    </tbody>\n    <p></p>\n</table>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}