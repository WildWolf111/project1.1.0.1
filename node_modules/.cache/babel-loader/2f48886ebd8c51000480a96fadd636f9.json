{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      currentCountry: {\n        Id: -1,\n        Name: \"\",\n        Code: \"\"\n      },\n      message: ''\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    getCountry: function getCountry(id) {\n      var _this = this;\n\n      CountryDataService.get(id).then(function (response) {\n        if (response.status == 200) {\n          _this.currentCountry = response.data;\n        } else {\n          _this.$router.push({\n            path: \"/countries\"\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateCountry: function updateCountry() {\n      var _this2 = this;\n\n      CountryDataService.update(this.currentCountry.id, this.currentCountry).then(function (response) {\n        _this2.message = 'The Country was updated successfully!';\n\n        if (response.data.status_code == 200) {\n          _this2.$router.push({\n            path: \"/countries\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deleteCountry: function deleteCountry() {\n      var _this3 = this;\n\n      CountryDataService.delete(this.currentCountry.id).then(function (response) {\n        _this3.$router.push({\n          name: \"country\"\n        });\n\n        if (response.status == 202) {\n          _this3.$router.push({\n            path: \"/countries\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.message = '';\n    this.getCountry(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA,eAAe;AAEbC,MAAI,EAAE;AACJC,SAAK,EAAE,gBADH;AAEJC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEN,SAAS,CAACO;AAA1C,KAAD;AAFF,GAFO;AAMbC,MANa,kBAMN;AACN,WAAO;AACJC,oBAAc,EAAC;AACXC,UAAE,EAAC,CAAC,CADO;AAEXC,YAAI,EAAC,EAFM;AAGXC,YAAI,EAAC;AAHM,OADX;AAMJC,aAAO,EAAE;AANL,KAAP;AASA,GAhBY;AAiBbC,YAAU,EAAE;AACVhB,UAAM,EAANA,MADU;AAEVC,cAAU,EAAVA;AAFU,GAjBC;AAqBXgB,SAAO,EAAE;AACTC,cADS,sBACEC,EADF,EACM;AAAA;;AAEZhB,wBAAkB,CAACiB,GAAnB,CAAuBD,EAAvB,EACEE,IADF,CACO,kBAAO,EAAK;AAEd,YAAIC,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA2B;AACzB,eAAI,CAACZ,cAAL,GAAsBW,QAAQ,CAACZ,IAA/B;AACD,SAFD,MAEK;AACH,eAAI,CAACc,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAEF;AAEH,OAVF,EAWEC,KAXF,CAWQ,aAAK;AACVC,eAAO,CAACC,GAAR,CAAYC,CAAZ;AACD,OAbF;AAcF,KAjBQ;AAmBTC,iBAnBS,2BAmBO;AAAA;;AAEb5B,wBAAkB,CAAC6B,MAAnB,CAA0B,KAAKrB,cAAL,CAAoBQ,EAA9C,EAAkD,KAAKR,cAAvD,EAEEU,IAFF,CAEO,kBAAO,EAAK;AAEhB,cAAI,CAACN,OAAL,GAAe,uCAAf;;AACF,YAAIO,QAAQ,CAACZ,IAAT,CAAcuB,WAAd,IAA6B,GAAjC,EAAqC;AACrC,gBAAI,CAACT,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAAuC,SADvC,MAEI;AACJ,iBAAOJ,QAAQ,CAACZ,IAAT,CAAcK,OAArB;AAA4B;AAC3B,OATF,EAWEY,KAXF,CAWQ,aAAK;AACVC,eAAO,CAACC,GAAR,CAAYC,CAAZ;AACD,OAbF;AAeF,KApCQ;AAsCTI,iBAtCS,2BAsCO;AAAA;;AAEd/B,wBAAkB,CAACgC,MAAnB,CAA0B,KAAKxB,cAAL,CAAoBQ,EAA9C,EACGE,IADH,CACQ,kBAAO,EAAK;AAEhB,cAAI,CAACG,OAAL,CAAaC,IAAb,CAAkB;AAAElB,cAAI,EAAE;AAAR,SAAlB;;AACF,YAAIe,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA2B;AAC3B,gBAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAAuC,SADvC,MAEI;AACJ,iBAAOJ,QAAQ,CAACZ,IAAT,CAAcK,OAArB;AAA4B;AAE3B,OATH,EAUGY,KAVH,CAUS,aAAK;AACVC,eAAO,CAACC,GAAR,CAAYC,CAAZ;AACD,OAZH;AAcF;AAtDS,GArBE;AA6EbM,SA7Ea,qBA6EH;AACR,SAAKrB,OAAL,GAAe,EAAf;AAEA,SAAKG,UAAL,CAAgB,KAAKmB,MAAL,CAAYC,MAAZ,CAAmBnB,EAAnC;AACF;AAjFa,CAAf","names":["Layout","PageHeader","appConfig","CountryDataService","page","title","meta","name","content","description","data","currentCountry","Id","Name","Code","message","components","methods","getCountry","id","get","then","response","status","$router","push","path","catch","console","log","e","updateCountry","update","status_code","deleteCountry","delete","mounted","$route","params"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\countries\\edit.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport CountryDataService from \"/src/services/CountryDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  data() {\r\n   return {\r\n      currentCountry:{\r\n          Id:-1,\r\n          Name:\"\",\r\n          Code:\"\"\r\n      },\r\n      message: ''\r\n    };\r\n    \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n    methods: {\r\n    getCountry(id) {\r\n       \r\n       CountryDataService.get(id)\r\n        .then(response => {\r\n            \r\n            if (response.status == 200){\r\n              this.currentCountry = response.data;\r\n            }else{\r\n              this.$router.push({path: \"/countries\"});\r\n              \r\n            }\r\n          \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    updateCountry() {\r\n       \r\n       CountryDataService.update(this.currentCountry.id, this.currentCountry)\r\n       \r\n        .then(response => {\r\n          \r\n          this.message = 'The Country was updated successfully!';\r\n        if (response.data.status_code == 200){\r\n        this.$router.push({path: \"/countries\"})}\r\n        else{\r\n        return response.data.message}\r\n        })\r\n        \r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n\r\n    deleteCountry() {\r\n      \r\n      CountryDataService.delete(this.currentCountry.id)\r\n        .then(response => {\r\n        \r\n          this.$router.push({ name: \"country\" });\r\n        if (response.status == 202){\r\n        this.$router.push({path: \"/countries\"})}\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    \r\n    this.getCountry(this.$route.params.id);\r\n  }\r\n\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n     <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\r\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentCountry.Name\" >\r\n          </div>                     \r\n     </div> \r\n\r\n      <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\r\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentCountry.Code\" >\r\n          </div>                     \r\n     </div>\r\n\r\n      \r\n<p>\r\n \r\n    </p>\r\n  \r\n    \r\n            <div class=\"row\">\r\n                <div>\r\n                    <b-button @click=\"updateCountry\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \r\n                              \r\n                </div> \r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}