{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      title: \"Добавление нового продукта\",\n      Product: {\n        Id: '',\n        Name: \"\",\n        Slug: \"\",\n        SKU: \"\",\n        Short_description: \"\",\n        Full_description: \"\",\n        Brand: {\n          Id: -1\n        },\n        Sort: 0\n      },\n      Brands: [{\n        id: -1,\n        text: \"\"\n      }],\n      jsonPages: {\n        PageNumber: 1,\n        TotalRecords: 100\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    addedProduct: function addedProduct() {\n      var _this = this;\n\n      var data = {\n        \"Name\": this.Product.Name,\n        \"Slug\": this.Product.Slug,\n        \"SKU\": this.Product.SKU,\n        \"short_description\": this.Product.Short_description,\n        \"full_description\": this.Product.Full_description,\n        \"Brand\": {\n          \"Id\": parseInt(this.Product.Brand.Id)\n        },\n        \"sort\": this.Product.Sort\n      };\n      ProductsDataService.create(data).then(function (response) {\n        _this.Product.id = response.data.id;\n        console.log(\"***********************S\");\n        console.log(response.data);\n        _this.submitted = true;\n\n        if (response.data.message = 200) {\n          _this.Product.name = \"\";\n          _this.Product.slug = \"\";\n          _this.Product.SKU = \"\";\n          _this.Product.short_description = \"\";\n          _this.Product.full_description = \"\";\n          _this.Product.Brand = \"\";\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    newCompany: function newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands: function retrieveBrands() {\n      var _this2 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      BrandsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        _this2.perPage = response.data.pg_length;\n        _this2.page = response.data.pg_number;\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          var currentBrand = response.data.List[i];\n          _this2.Brands[i] = {\n            id: currentBrand.Id,\n            text: currentBrand.Name\n          };\n        } //this.Brands = response.data.Brands;\n\n\n        console.log(\"<<<<<<<<<<<>>>>>>>>>>>>>>>\");\n        console.log(_this2.Brands);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","ProductsDataService","BrandsDataService","Select2","page","title","meta","name","content","description","data","Product","Id","Name","Slug","SKU","Short_description","Full_description","Brand","Sort","Brands","id","text","jsonPages","PageNumber","TotalRecords","jsonFields","value","components","methods","addedProduct","parseInt","create","then","response","console","log","submitted","message","slug","short_description","full_description","catch","e","newCompany","retrieveBrands","pg_number","pg_length","search","field","getAll","perPage","i","List","length","currentBrand","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\products\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового продукта\",\n        Product:{\n        Id: '',\n        Name:\"\",\n        Slug:\"\",\n        SKU:\"\",\n        Short_description:\"\",\n        Full_description:\"\",\n        Brand:{\n          Id:-1,\n        },\n        Sort:0,\n        },\n        Brands:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    addedProduct() {\n      var data = {\n        \"Name\":this.Product.Name,\n        \"Slug\":this.Product.Slug,\n        \"SKU\":this.Product.SKU,\n        \"short_description\":this.Product.Short_description,\n        \"full_description\":this.Product.Full_description,\n        \"Brand\": {\n          \"Id\":parseInt(this.Product.Brand.Id)\n          },\n        \"sort\":this.Product.Sort,\n      };\n       \n      ProductsDataService.create(data)\n      \n        .then(response => {\n          this.Product.id = response.data.id;\n              console.log(\"***********************S\")\n                console.log(response.data)\n          this.submitted = true;\n             if (response.data.message = 200){\n        \n                this.Product.name = \"\"\n                this.Product.slug = \"\"\n                this.Product.SKU = \"\"\n                this.Product.short_description = \"\"\n                this.Product.full_description = \"\"\n                this.Product.Brand = \"\"\n             \n\n        }\n        else{\n        return response.data.message}\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n            BrandsDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n        \n    \n           \n          this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n                \n                \n               \n           for(let i = 0; i < response.data.List.length; i++){\n        \n              let currentBrand = response.data.List[i];\n           \n              this.Brands[i]={\n                \n                id:currentBrand.Id,\n\n                text:currentBrand.Name\n\n              };\n\n           \n\n\n          }\n          //this.Brands = response.data.Brands;\nconsole.log(\"<<<<<<<<<<<>>>>>>>>>>>>>>>\")\n\n              console.log(this.Brands)\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     \n  },\n   mounted() {\n    this.retrieveBrands();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.slug\" >\n          </div>                     \n     </div>\n\n    \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-SKU\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.SKU\" >\n          </div>                     \n     </div>\n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\"> {{ $t(\"t-short_description\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.short_description\" >\n          </div>                     \n     </div>  \n\n <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-full_description\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.full_description\" >\n          </div>                     \n  </div>\n<p>\n \n    </p>\n\n \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-brands\") }}</label>\n    <Select2 v-model=\"Product.Brand.Id\" :options=\"this.Brands\" />\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedProduct\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}