{"ast":null,"code":"import _defineProperty from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport Select2 from 'vue3-select2-component';\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nimport DocumentsDataService from \"/src/services/DocumentsDataService\";\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\nimport Warehouse_cellDataService from \"/src/services/Warehouse_cellDataService\";\nimport WarehouseDataService from \"/src/services/WarehouseDataService\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nexport default {\n  jsonpage: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      fields: [{\n        first: '',\n        last: ''\n      }],\n      title: \"Добавление нового документа\",\n      Document: {\n        Id: 0,\n        Document_type: {\n          id: '',\n          text: ''\n        },\n        CompanySender: {\n          Id: ''\n        },\n        CompanyRecipient: {\n          Id: ''\n        },\n        Status: {\n          Id: ''\n        },\n        Items: [{\n          Id: 0,\n          TrustedSignId: '',\n          Product: {\n            Id: ''\n          },\n          Quantity: '',\n          Price: '',\n          GTD: {\n            Id: ''\n          },\n          Warehouse: {\n            Id: ''\n          },\n          Warehousecell: {\n            Id: ''\n          }\n        }],\n        Comment: '',\n        PriceType: {\n          Id: '',\n          Name: ''\n        },\n        DeadLine: '',\n        Sum: ''\n      },\n      jsonItems: [{\n        Id: 0,\n        trusted_sign_id: '',\n        Product: {\n          id: ''\n        },\n        quantity: '',\n        price: '',\n        GTD: {\n          id: \"\"\n        },\n        Warehouse: {\n          id: ''\n        },\n        Warehousecell: {\n          id: ''\n        }\n      }],\n      Document_type: [{\n        id: -1,\n        text: \"\"\n      }],\n      Companies: [{\n        id: -1,\n        text: \"\"\n      }],\n      GTDs: [{\n        id: -1,\n        text: \"\"\n      }],\n      Products: [{\n        id: -1,\n        text: \"\"\n      }],\n      Warehouses: [{\n        id: -1,\n        text: \"\"\n      }],\n      Warehouse_cells: [{\n        id: -1,\n        text: \"\"\n      }],\n      Statuses: [{\n        id: -1,\n        text: \"\"\n      }],\n      jsonPages: {\n        PageNumber: 1,\n        TotalRecords: 100\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: _defineProperty({\n    //добавление новой строки\n    AddField: function AddField() {\n      this.submitted = false;\n      this.Document.Items.push({\n        Id: '',\n        TrustedSignId: '',\n        Product: {\n          Id: '',\n          Name: ''\n        },\n        Quantity: '',\n        Price: '',\n        GTD: {\n          Id: '',\n          NumId: ''\n        },\n        Warehouse: {\n          Id: '',\n          Name: ''\n        },\n        Warehousecell: {\n          Id: '',\n          Name: ''\n        },\n        Document_type: {\n          Id: '',\n          Name: ''\n        }\n      });\n    },\n    //добавление новой строки(конец)\n    //удаление строки\n    RemoveField: function RemoveField(index) {\n      this.Document.Items.splice(index, 1);\n    },\n    //удаление строки конец\n    AddIncome: function AddIncome() {\n      var _this = this;\n\n      var i = 0;\n\n      for (i = 0; i < this.Document.Items.length; i++) {\n        var customItem = this.Document.Items[i];\n        this.jsonItems[i] = {\n          'id': 0,\n          'trusted_sign_id': customItem.TrustedSignId,\n          'Product': {\n            'id': customItem.Product.Id\n          },\n          'quantity': customItem.Quantity,\n          'price': customItem.Price,\n          'GTD': {\n            'Id': customItem.GTD.Id\n          },\n          'Warehouse': {\n            'id': customItem.Warehouse.Id\n          },\n          'Warehousecell': {\n            'id': customItem.Warehousecell.Id\n          }\n        };\n      }\n\n      var date = new Date(this.Document.DeadLine);\n      var data = {\n        'id': this.Document.Id,\n        'DocumentType': {\n          'id': this.Document_type.Id,\n          'name': this.Document_type.Name\n        },\n        'CompanySender': {\n          'Id': this.Document.CompanySender.Id\n        },\n        'CompanyRecipient': {\n          'Id': this.Document.CompanyRecipient.Id\n        },\n        'Items': this.jsonItems,\n        'comment': this.Document.Comment,\n        'PriceType': {\n          'id': 0 //расхардкодить как прикрчу\n\n        },\n        'DeadLine': date.toISOString(),\n        'sum': parseInt(this.Document.Sum)\n      };\n      DocumentsDataService.create(data).then(function (response) {\n        _this.Document.Id = response.data.id;\n        _this.submitted = true;\n      }); //.catch(e => {\n      // console.log(e);\n      //});\n    },\n    newDocument: function newDocument() {\n      this.submitted = false;\n      this.Document = {};\n    },\n    //полчение продукта (start)\n    retrieveProducts: function retrieveProducts() {\n      var _this2 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      ProductsDataService.getAll(this.jsonPages).then(function (response) {\n        console.log('----------1111-------------');\n        console.log(response.data.List);\n        var i = 0;\n\n        for (i = 0; i < response.data.total_rec; i++) {\n          var currentProduct = response.data.List[i];\n          _this2.Products[i] = {\n            id: currentProduct.Id,\n            text: currentProduct.Name\n          };\n        } //this.Brands = response.data.Brands;\n\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    //конец блока (end)\n    retrieveDocType: function retrieveDocType() {\n      var _this3 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      DocumentsDataService.DocType_list(this.jsonFields, [], this.jsonPages).then(function (response) {\n        var i = 0;\n\n        for (i = 0; i < response.data.total_rec; i++) {\n          var currentType = response.data.List[i];\n          _this3.Products[i] = {\n            id: currentType.Id,\n            text: currentType.Name\n          };\n        } //this.Brands = response.data.Brands;\n\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    //конец блока (end)\n    //получение компаний\n    retrieveCompanies: function retrieveCompanies() {\n      var _this4 = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CompaniesDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        var i = 0;\n\n        for (i = 0; i < response.data.total_rec; i++) {\n          var currentCompany = response.data.List[i];\n          _this4.Companies[i] = {\n            id: currentCompany.id,\n            text: currentCompany.name\n          };\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    //конец\n    //получение складских ячеек\n    retrieveWarehouse_cells: function retrieveWarehouse_cells() {\n      var _this5 = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      Warehouse_cellDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        var i = 0;\n\n        for (i = 0; i < response.data.pg_length; i++) {\n          var currentWarehouse_cell = response.data.List[i];\n          _this5.Warehouse_cells[i] = {\n            id: currentWarehouse_cell.id,\n            text: currentWarehouse_cell.name\n          };\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    retrieveWarehouses: function retrieveWarehouses() {\n      var _this6 = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      WarehouseDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        var i = 0;\n\n        for (i = 0; i < response.data.total_rec; i++) {\n          var currentWarehouse = response.data.List[i];\n          _this6.Warehouses[i] = {\n            id: currentWarehouse.id,\n            text: currentWarehouse.name\n          };\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    ///////////////////   GTD   ///////////////////\n    retrieveGTDs: function retrieveGTDs() {\n      var _this7 = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      GTDDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        _this7.perPage = response.data.pg_length;\n        _this7.page = response.data.pg_number;\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          var currentGTD = response.data.List[i];\n          _this7.GTDs[i] = {\n            id: currentGTD.id,\n            text: currentGTD.num_id\n          };\n        }\n\n        console.log('=-===-==-=-=-=-=-=-=-');\n        console.log(_this7.GTDs);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, \"retrieveDocType\", function retrieveDocType() {\n    var _this8 = this;\n\n    this.jsonPages = {\n      pg_number: 1,\n      pg_length: 1000\n    };\n\n    if (this.search != \"\") {\n      this.jsonFields = [{\n        field: \"name\",\n        value: this.search\n      }];\n    } else {\n      this.jsonFields = [];\n    }\n\n    DocumentsDataService.DocType_list(this.jsonPages).then(function (response) {\n      var i = 0;\n\n      for (i = 0; i < response.data.total_rec; i++) {\n        var Document_type = response.data.List[i];\n        _this8.Document_type[i] = {\n          id: Document_type.Id,\n          text: Document_type.Name\n        };\n      } //this.Brands = response.data.Brands;\n\n    }).catch(function (e) {\n      console.log(e);\n    });\n  }),\n  mounted: function mounted() {\n    this.retrieveWarehouse_cells();\n    this.retrieveCompanies();\n    this.retrieveWarehouses();\n    this.retrieveProducts();\n    this.retrieveGTDs(); //this.retrieveWarehouse_cells();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","Select2","ProductsDataService","DocumentsDataService","CompaniesDataService","Warehouse_cellDataService","WarehouseDataService","GTDDataService","jsonpage","title","meta","name","content","description","data","fields","first","last","Document","Id","Document_type","id","text","CompanySender","CompanyRecipient","Status","Items","TrustedSignId","Product","Quantity","Price","GTD","Warehouse","Warehousecell","Comment","PriceType","Name","DeadLine","Sum","jsonItems","trusted_sign_id","quantity","price","Companies","GTDs","Products","Warehouses","Warehouse_cells","Statuses","jsonPages","PageNumber","TotalRecords","jsonFields","value","components","methods","AddField","submitted","push","NumId","RemoveField","index","splice","AddIncome","i","length","customItem","date","Date","toISOString","parseInt","create","then","response","newDocument","retrieveProducts","pg_number","pg_length","search","field","getAll","console","log","List","total_rec","currentProduct","catch","e","retrieveDocType","DocType_list","currentType","retrieveCompanies","page","perPage","currentCompany","retrieveWarehouse_cells","currentWarehouse_cell","retrieveWarehouses","currentWarehouse","retrieveGTDs","currentGTD","num_id","mounted"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\documents\\add.vue"],"sourcesContent":["<style>\n.select2 {\n    width: 150px !important;\n}\n</style>\n<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport Select2 from 'vue3-select2-component';\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nimport DocumentsDataService from \"/src/services/DocumentsDataService\";\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\nimport Warehouse_cellDataService from \"/src/services/Warehouse_cellDataService\";\nimport WarehouseDataService from \"/src/services/WarehouseDataService\";\nimport GTDDataService from \"/src/services/GTDDataService\";\n\n\nexport default {\n  jsonpage: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    \n    return {\n      fields: [{ first: '',last: '' }],\n      title: \"Добавление нового документа\",\n      \n      \n      \n      \n      Document:{\n      \n    Id:0,\n    Document_type:{\n      id:'',\n      text:''\n    },\n    CompanySender:{\n          Id:'',\n      },\n    CompanyRecipient:{\n          Id:'',\n      },\n        Status:{\n          Id:'',\n        },\n    Items:[{\n        Id:0,\n        TrustedSignId:'',\n        Product:{\n          Id:'',\n        } ,\n        Quantity:'',\n        Price:'',\n        GTD:{\n          Id:'',\n        },\n        Warehouse:{\n          Id:'',\n        },\n        Warehousecell:{\n          Id:'',\n        },       \n        }],\n    Comment:'',\n  \n    PriceType:{\n        Id:'',\n        Name:'',\n      },\n    DeadLine:'',\n    Sum:'',\n      },\n\n jsonItems:[{\n        Id:0,\n        trusted_sign_id:'',\n        Product:{\n          id:'',\n        } ,\n        quantity:'',\n        price:'',\n        GTD:{\n          id:\"\",\n        },\n        Warehouse:{\n          id:'',\n        },\n        Warehousecell:{\n          id:'',\n        },       \n        }],\n\n\n        Document_type:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n\n  Companies:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n  GTDs:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n  Products:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n  Warehouses:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n  Warehouse_cells:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n\n  Statuses:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n\n    jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n      //добавление новой строки\n       AddField: function () {\n\n          this.submitted = false;\n \n          \n      this.Document.Items.push({\n        Id:'',\n        TrustedSignId:'',\n        Product:{\n          Id:'',\n          Name:'',\n        } ,\n        Quantity:'',\n        Price:'',\n        GTD:{\n          Id:'',\n          NumId:''\n        },\n        Warehouse:{\n          Id:'',\n          Name:'',\n        },\n        Warehousecell:{\n          Id:'',\n          Name:'',\n        },\n        Document_type:{\n          Id:'',\n          Name:'',\n        },\n        });\n      \n    }, //добавление новой строки(конец)\n      \n      \n            //удаление строки\n      RemoveField: function(index){\n\n        this.Document.Items.splice(index,1);\n\n      },//удаление строки конец\n      \n\n     \n\n\n\n\n\n    AddIncome() {\n    \n  \n      let i=0;\n        for(i=0; i<this.Document.Items.length;i++){\n          let customItem = this.Document.Items[i];\n \n\n         \n        this.jsonItems[i]={\n        'id':0,\n\n        'trusted_sign_id':customItem.TrustedSignId,\n        'Product':{\n           'id':customItem.Product.Id,\n        } ,\n        'quantity':customItem.Quantity,\n        'price':customItem.Price,\n        'GTD':{\n          'Id':customItem.GTD.Id,\n        },\n         'Warehouse':{\n           'id':customItem.Warehouse.Id,\n\n         },\n     'Warehousecell':{\n           'id':customItem.Warehousecell.Id,\n         }    \n        };\n        \n\n      }\n    \n\n      var date = new Date(this.Document.DeadLine);\n\n\n      var data = {\n      'id':this.Document.Id,\n      'DocumentType':{\n        'id':this.Document_type.Id,\n        'name':this.Document_type.Name\n      },\n    'CompanySender':{\n          'Id':this.Document.CompanySender.Id,\n      },\n    'CompanyRecipient':{\n          'Id':this.Document.CompanyRecipient.Id,\n      },\n    'Items':this.jsonItems,\n    'comment':this.Document.Comment,\n  \n    'PriceType':{\n        'id':0,//расхардкодить как прикрчу\n      },\n    'DeadLine':date.toISOString(),\n    'sum':parseInt(this.Document.Sum),\n\n\n      };\n      \n\n      DocumentsDataService.create(data)\n        .then(response => {\n\n\n\n          \n          this.Document.Id = response.data.id;\n       \n          this.submitted = true;\n        })\n        //.catch(e => {\n         // console.log(e);\n        //});\n       \n    },\n    \n    newDocument() {\n      this.submitted = false;\n      this.Document = {};\n    },\n\n\n     //полчение продукта (start)\n        retrieveProducts(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n\n            ProductsDataService.getAll(this.jsonPages)\n        .then(response => {\n          console.log('----------1111-------------')\n          console.log(response.data.List)\n         let i=0;\n          for(i=0; i<response.data.total_rec;i++){\n               let currentProduct = response.data.List[i];\n                this.Products[i]={\n        \n                id:currentProduct.Id,\n                text:currentProduct.Name  \n\n              };\n }\n          //this.Brands = response.data.Brands;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },//конец блока (end)\n\n\n\n    retrieveDocType(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n\n            DocumentsDataService.DocType_list(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n\n         let i=0;\n          for(i=0; i<response.data.total_rec;i++){\n               let currentType = response.data.List[i];\n                this.Products[i]={\n        \n                id:currentType.Id,\n                text:currentType.Name  \n\n              };\n }\n          //this.Brands = response.data.Brands;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },//конец блока (end)\n\n//получение компаний\nretrieveCompanies() {\n      \n         \n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       CompaniesDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n       \n           \n           \n          let i=0;\n          for(i=0; i<response.data.total_rec;i++){\n               let currentCompany = response.data.List[i];\n              \n               this.Companies[i]={\n        \n                id:currentCompany.id,\n                text:currentCompany.name  \n\n              };\n          }\n\n        })\n        .catch(e => {\n          console.log(e);\n        });\n\n        \n    },//конец\n\n//получение складских ячеек\n    retrieveWarehouse_cells() {\n\n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       Warehouse_cellDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n     \n         \n         let i=0;\n          for(i=0; i<response.data.pg_length;i++){\n               let currentWarehouse_cell = response.data.List[i];\n              \n               this.Warehouse_cells[i]={\n        \n                id:currentWarehouse_cell.id,\n                text:currentWarehouse_cell.name  \n\n              };\n          }\n  \n\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n\n\n\n\n retrieveWarehouses() {\n     \n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       WarehouseDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n     \n\n         let i=0;\n          for(i=0; i<response.data.total_rec;i++){\n               let currentWarehouse = response.data.List[i];\n         \n               this.Warehouses[i]={\n        \n                id:currentWarehouse.id,\n                text:currentWarehouse.name  \n\n              };\n          }\n      \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n\n\n///////////////////   GTD   ///////////////////\n\n  retrieveGTDs() {\n     \n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       GTDDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n   \n        this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n                \n               \n               \n              \n           for(let i = 0; i < response.data.List.length; i++){\n\n              let currentGTD = response.data.List[i];\n           \n              this.GTDs[i]={\n                \n                id:currentGTD.id,\n\n                text:currentGTD.num_id \n\n              };\n\n      }\n     \n          console.log('=-===-==-=-=-=-=-=-=-')\n       console.log(this.GTDs)  \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    retrieveDocType(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n\n            DocumentsDataService.DocType_list(this.jsonPages)\n        .then(response => {\n\n         let i=0;\n          for(i=0; i<response.data.total_rec;i++){\n               let Document_type = response.data.List[i];\n                this.Document_type[i]={\n        \n                id:Document_type.Id,\n                text:Document_type.Name  \n\n              };\n }\n          //this.Brands = response.data.Brands;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },//конец блока (end)\n  },\n\n   mounted() {\n   this.retrieveWarehouse_cells();\n   this.retrieveCompanies();\n   this.retrieveWarehouses();\n   this.retrieveProducts();\n   this.retrieveGTDs();\n   //this.retrieveWarehouse_cells();\n\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n      <div class=\"live-preview\">\n                            <form class=\"row g-3 needs-validation\" novalidate>\n                                <div class=\"col-md-4 position-relative\">\n                                <label for=\"exampleDataList\" class=\"form-label\" >От кого</label>\n                                <Select2 v-model.number=\"Document.CompanySender.Id\" :options=\"this.Companies\"/>\n\n                            </div>\n\n\n\n                                <div class=\"col-md-4 position-relative\">\n                                    <label for=\"exampleDataList\" class=\"form-label\" >Кому</label>\n                                     <Select2 v-model.number=\"Document.CompanyRecipient.Id\" :options=\"this.Companies\"/>\n\n                                </div>\n                                \n                                \n                                \n                                <div class=\"col-md-4 position-relative\">\n                                    <label for=\"exampleDataList\" class=\"form-label\" >Кому</label>\n                                     <Select2 v-model.number=\"Document.Document_type.Id\" :options=\"this.Documents\"/>\n\n                                </div>\n\n\n\n\n\n                                <div class=\"col-md-6 position-relative\">\n                                    <label for=\"validationTooltip03\" class=\"form-label\">Коментарий</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"validationTooltip03\"  v-model=\"Document.Comment\">\n                                   \n                                </div>\n\n                               \n\n                            <div class=\"col-xxl-3 col-md-6\">\n                                    <div>\n                                        <label for=\"exampleInputdate\" class=\"form-label\">Дата исполнения</label>\n                                        <input type=\"date\" class=\"form-control\" id=\"exampleInputdate\" v-model=\"Document.DeadLine\">\n                                    </div>\n                            </div>\n\n\n\n\n                              \n<p>\n \n    </p>\n\n\n\n\n\n <div>\n\n   <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n              <!-- items -->\n            <th scope=\"row2\">Product</th>\n            <th scope=\"row2\">Warehouse</th>\n            <th scope=\"row2\">Warehousecell</th>\n            <th scope=\"row2\">GTD</th>\n            <th scope=\"row2\">Quantity</th>\n            <th scope=\"row2\">Price</th>\n            <th scope=\"row2\">TrustedSignId</th>\n            <th scope=\"row2\"></th>\n            \n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"(Item, index) in Document.Items\" :key=\"index\" >\n    \n           \n            <td  scope=\"row2\"><Select2 v-model.number=\"Item.Product.Id\" :options='this.Products'/></td>\n            <td  scope=\"row2\"><Select2 v-model.number=\"Item.Warehouse.Id\" :options='this.Warehouses'/></td>\n            <td  scope=\"row2\"><Select2 v-model.number=\"Item.Warehousecell.Id\" :options='this.Warehouse_cells'/></td>\n            <td  scope=\"row2\"><Select2 v-model.number=\"Item.GTD.Id\" :options='this.GTDs'/></td>\n            <td  scope=\"row2\"><input type=\"text\" v-model.number=\"Item.Quantity\"></td>\n            <td  scope=\"row2\"><input type=\"text\" v-model.number=\"Item.Price\"></td>\n            <td  scope=\"row2\"><input type=\"text\" v-model.number=\"Item.TrustedSignId\"></td>\n           \n              <!-- delete Button -->\n            <td>\n                <a href=\"javascript:void(0);\" class=\"link-danger fs-15\"><i class=\"ri-delete-bin-line\" @click=\"RemoveField(index)\"></i></a>\n            </td>\n        \n        </tr>\n       \n    </tbody>\n    <p></p>\n    \n</table>\n\n </div>\n\n    <p>\n \n    </p>\n  \n    <div class=\"col-12\">\n                  <button class=\"btn btn-success\" type=\"button\" @click=\"AddIncome\">Added</button>\n                 <font color=\"white\">|||</font>\n                   <input type=\"button\" value=\"add new row\"  class=\"btn btn-warning\" @click=\"AddField\">\n    </div>\n         <p>\n \n    </p>\n  \n                    \n                           \n                           \n                           \n                           \n                           \n                            </form>\n                        </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}