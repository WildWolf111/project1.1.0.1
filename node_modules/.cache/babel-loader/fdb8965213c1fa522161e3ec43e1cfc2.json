{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      Brands: [],\n      currentBrands: null,\n      currentIndex: -1,\n      title: \"\",\n      Filter: {\n        Fields: [],\n        Sorts: [],\n        Pages: {\n          curentpage: 0,\n          allpages: 0,\n          countsrecordonpage: 0,\n          allrecords: 0,\n          remainedrecords: 0\n        }\n      },\n      page: 1,\n      perPage: 10,\n      pages: [],\n      jsonPages: {\n        curentpage: -1,\n        countsrecordonpage: 10\n      }\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    retrieveBrands: function retrieveBrands() {\n      var _this = this;\n\n      this.jsonPages = {\n        curentpage: this.page,\n        countsrecordonpage: this.perPage\n      };\n      BrandsDataService.getAll([], [], this.jsonPages).then(function (response) {\n        _this.Brands = response.data.Brands;\n        _this.perPage = response.data.Filter.Pages.countsrecordonpage;\n        _this.page = response.data.Filter.Pages.curentpage;\n        var i = 0;\n\n        for (i = 0; i <= response.data.Filter.Pages.allpages; i++) {\n          _this.pages[i] = i + 1;\n        }\n\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    refreshList: function refreshList() {\n      this.retrieveBrands();\n      this.currentBrands = null;\n      this.currentIndex = -1;\n    },\n    setActiveBrands: function setActiveBrands(brands, index) {\n      this.currentBrands = brands;\n      this.currentIndex = brands ? index : -1;\n    },\n    removeAllBrands: function removeAllBrands() {\n      var _this2 = this;\n\n      BrandsDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    searchBrands: function searchBrands() {\n      var _this3 = this;\n\n      BrandsDataService.findByName(this.name).then(function (response) {\n        _this3.brands = response.data;\n\n        _this3.setActiveBrands(null);\n\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","BrandsDataService","page","title","meta","name","content","description","data","Brands","currentBrands","currentIndex","Filter","Fields","Sorts","Pages","curentpage","allpages","countsrecordonpage","allrecords","remainedrecords","perPage","pages","jsonPages","components","methods","retrieveBrands","getAll","then","response","i","console","log","catch","e","refreshList","setActiveBrands","brands","index","removeAllBrands","deleteAll","searchBrands","findByName","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\brands\\list.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport BrandsDataService from \"/src/services/BrandsDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  \r\n data() {\r\n    return {\r\n      Brands: [],\r\n      currentBrands: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n\r\n \r\n        Filter: {\r\n            Fields: [],\r\n            Sorts: [],\r\n            Pages: {\r\n                curentpage: 0,\r\n                allpages: 0,\r\n                countsrecordonpage: 0,\r\n                allrecords: 0,\r\n                remainedrecords: 0\r\n            }\r\n        },\r\n      page: 1,\r\n      perPage: 10,\r\n      pages: [],\r\n      jsonPages: {\r\n                curentpage: -1,\r\n                countsrecordonpage: 10\r\n      },\r\n    \r\n    }; \r\n       \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n   methods: {\r\n    retrieveBrands() {\r\n      this.jsonPages = {\r\n          curentpage:this.page,\r\n          countsrecordonpage: this.perPage\r\n      }\r\n       BrandsDataService.getAll([],[],this.jsonPages)\r\n        .then(response => {\r\n          this.Brands = response.data.Brands;\r\n          this.perPage = response.data.Filter.Pages.countsrecordonpage;\r\n          this.page = response.data.Filter.Pages.curentpage;\r\n          let i=0;\r\n          for(i=0; i<=response.data.Filter.Pages.allpages;i++){\r\n              this.pages[i]=i+1;\r\n          }\r\n\r\n          console.log( response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveBrands();\r\n      this.currentBrands = null;\r\n      this.currentIndex = -1;\r\n    },\r\n\r\n    setActiveBrands(brands, index) {\r\n      this.currentBrands = brands;\r\n      this.currentIndex = brands ? index : -1;\r\n    },\r\n\r\n    removeAllBrands() {\r\n       BrandsDataService.deleteAll()\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.refreshList();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    \r\n    searchBrands() {\r\n       BrandsDataService.findByName(this.name)\r\n        .then(response => {\r\n          this.brands = response.data;\r\n         \r\n          this.setActiveBrands(null);\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.retrieveBrands();\r\n  },\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n    <h4>Brands</h4>\r\n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Slug</th>\r\n            <th scope=\"col\"></th>\r\n            \r\n            \r\n        \r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr v-for=\"(Brand, index) in Brands\" :key=\"index\">\r\n    \r\n           \r\n            <td>{{ Brand.Id }}</td>\r\n            <td>{{ Brand.Name }}</td>\r\n            <td>{{ Brand.Slug }}</td>\r\n            <td>\r\n                <div class=\"hstack gap-3 flex-wrap\">\r\n                    <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a>\r\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\"></i></a>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n    <p></p>\r\n</table>\r\n<div class=\"pagination-wrap hstack gap-2\">\r\n              <a\r\n                class=\"page-item pagination-prev disabled\"\r\n                href=\"#\"\r\n                v-if=\"page != 1\"\r\n                @click=\"page--\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <ul class=\"pagination listjs-pagination mb-0\">\r\n                <li\r\n                 :class=\"{\r\n                              active: pageNumber == page,\r\n                              disabled: pageNumber == '...',\r\n                            }\"\r\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\r\n                  :key=\"index\"\r\n                  @click=\"page = pageNumber\"\r\n                >\r\n                  <a class=\"page\" href=\"#\">{{ pageNumber }}</a>\r\n                </li>\r\n              </ul>\r\n              <a\r\n                class=\"page-item pagination-next\"\r\n                href=\"#\"\r\n                @click=\"page++\"\r\n                v-if=\"page < pages.length\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}