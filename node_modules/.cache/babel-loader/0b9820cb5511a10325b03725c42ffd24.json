{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport { createI18n } from 'vue-i18n';\n/**\n * Load locale messages\n *\n * The loaded `JSON` locale messages is pre-compiled by `@intlify/vue-i18n-loader`, which is integrated into `vue-cli-plugin-i18n`.\n * See: https://github.com/intlify/vue-i18n-loader#rocket-i18n-resource-pre-compilation\n */\n\nfunction loadLocaleMessages() {\n  var locales = require.context('./lang', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n\n  var messages = {};\n  locales.keys().forEach(function (key) {\n    var matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n\n    if (matched && matched.length > 1) {\n      var locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nvar setDateTimeFormats = {\n  short: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  },\n  long: {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric'\n  }\n};\nvar dateTimeFormats = {\n  en: setDateTimeFormats,\n  es: setDateTimeFormats,\n  de: setDateTimeFormats,\n  'en-GB': setDateTimeFormats\n};\nexport default createI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages(),\n  dateTimeFormats: dateTimeFormats\n});","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/src/i18n.js"],"names":["createI18n","loadLocaleMessages","locales","require","context","messages","keys","forEach","key","matched","match","length","locale","setDateTimeFormats","short","year","month","day","long","weekday","hour","minute","dateTimeFormats","en","es","de","process","env","VUE_APP_I18N_LOCALE","fallbackLocale","VUE_APP_I18N_FALLBACK_LOCALE"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,GAA8B;AAC5B,MAAMC,OAAO,GAAGC,OAAO,CAACC,OAAR,CAAgB,QAAhB,EAA0B,IAA1B,EAAgC,2BAAhC,CAAhB;;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACAH,EAAAA,OAAO,CAACI,IAAR,GAAeC,OAAf,CAAuB,UAACC,GAAD,EAAS;AAC9B,QAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,qBAAV,CAAhB;;AACA,QAAID,OAAO,IAAIA,OAAO,CAACE,MAAR,GAAiB,CAAhC,EAAmC;AACjC,UAAMC,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAtB;AACAJ,MAAAA,QAAQ,CAACO,MAAD,CAAR,GAAmBV,OAAO,CAACM,GAAD,CAA1B;AACD;AACF,GAND;AAOA,SAAOH,QAAP;AACD;;AAED,IAAMQ,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,KAAK,EAAE,OAFF;AAGLC,IAAAA,GAAG,EAAE;AAHA,GADkB;AAMzBC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,SADF;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,GAAG,EAAE,SAHD;AAIJE,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,IAAI,EAAE,SALF;AAMJC,IAAAA,MAAM,EAAE;AANJ;AANmB,CAA3B;AAgBA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,EAAE,EAAEV,kBADkB;AAEtBW,EAAAA,EAAE,EAAEX,kBAFkB;AAGtBY,EAAAA,EAAE,EAAEZ,kBAHkB;AAItB,WAASA;AAJa,CAAxB;AAOA,eAAeb,UAAU,CAAC;AACxBY,EAAAA,MAAM,EAAEc,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,IADnB;AAExBC,EAAAA,cAAc,EAAEH,OAAO,CAACC,GAAR,CAAYG,4BAAZ,IAA4C,IAFpC;AAGxBzB,EAAAA,QAAQ,EAAEJ,kBAAkB,EAHJ;AAIxBqB,EAAAA,eAAe,EAAfA;AAJwB,CAAD,CAAzB","sourcesContent":["import { createI18n } from 'vue-i18n';\n\n/**\n * Load locale messages\n *\n * The loaded `JSON` locale messages is pre-compiled by `@intlify/vue-i18n-loader`, which is integrated into `vue-cli-plugin-i18n`.\n * See: https://github.com/intlify/vue-i18n-loader#rocket-i18n-resource-pre-compilation\n */\nfunction loadLocaleMessages() {\n  const locales = require.context('./lang', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n  const messages = {};\n  locales.keys().forEach((key) => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nconst setDateTimeFormats = {\n  short: {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  },\n  long: {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n  },\n};\n\nconst dateTimeFormats = {\n  en: setDateTimeFormats,\n  es: setDateTimeFormats,\n  de: setDateTimeFormats,\n  'en-GB': setDateTimeFormats,\n};\n\nexport default createI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages(),\n  dateTimeFormats,\n});"]},"metadata":{},"sourceType":"module"}