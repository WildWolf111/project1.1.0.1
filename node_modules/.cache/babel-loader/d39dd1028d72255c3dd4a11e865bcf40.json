{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\n/**\n * SimpleBar.js - v5.3.6\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\nimport 'core-js/modules/es.array.for-each';\nimport 'core-js/modules/web.dom-collections.for-each';\nimport canUseDOM from 'can-use-dom';\nimport 'core-js/modules/es.array.filter';\nimport 'core-js/modules/es.array.iterator';\nimport 'core-js/modules/es.object.assign';\nimport 'core-js/modules/es.object.to-string';\nimport 'core-js/modules/es.parse-int';\nimport 'core-js/modules/es.string.iterator';\nimport 'core-js/modules/es.weak-map';\nimport 'core-js/modules/web.dom-collections.iterator';\nimport throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport 'core-js/modules/es.array.reduce';\nimport 'core-js/modules/es.function.name';\nimport 'core-js/modules/es.regexp.exec';\nimport 'core-js/modules/es.string.match';\nimport 'core-js/modules/es.string.replace'; // Helper function to retrieve options from element attributes\n\nvar getOptions = function getOptions(obj) {\n  var options = Array.prototype.reduce.call(obj, function (acc, attribute) {\n    var option = attribute.name.match(/data-simplebar-(.+)/);\n\n    if (option) {\n      var key = option[1].replace(/\\W+(.)/g, function (x, chr) {\n        return chr.toUpperCase();\n      });\n\n      switch (attribute.value) {\n        case 'true':\n          acc[key] = true;\n          break;\n\n        case 'false':\n          acc[key] = false;\n          break;\n\n        case undefined:\n          acc[key] = true;\n          break;\n\n        default:\n          acc[key] = attribute.value;\n      }\n    }\n\n    return acc;\n  }, {});\n  return options;\n};\n\nfunction getElementWindow(element) {\n  if (!element || !element.ownerDocument || !element.ownerDocument.defaultView) {\n    return window;\n  }\n\n  return element.ownerDocument.defaultView;\n}\n\nfunction getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n\n  return element.ownerDocument;\n}\n\nvar cachedScrollbarWidth = null;\nvar cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', function () {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nfunction scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    var document = getElementDocument(el);\n\n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n\n    var body = document.body;\n    var box = document.createElement('div');\n    box.classList.add('simplebar-hide-scrollbar');\n    body.appendChild(box);\n    var width = box.getBoundingClientRect().right;\n    body.removeChild(box);\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n\nvar SimpleBar = /*#__PURE__*/function () {\n  function SimpleBar(element, options) {\n    var _this = this;\n\n    this.onScroll = function () {\n      var elWindow = getElementWindow(_this.el);\n\n      if (!_this.scrollXTicking) {\n        elWindow.requestAnimationFrame(_this.scrollX);\n        _this.scrollXTicking = true;\n      }\n\n      if (!_this.scrollYTicking) {\n        elWindow.requestAnimationFrame(_this.scrollY);\n        _this.scrollYTicking = true;\n      }\n    };\n\n    this.scrollX = function () {\n      if (_this.axis.x.isOverflowing) {\n        _this.showScrollbar('x');\n\n        _this.positionScrollbar('x');\n      }\n\n      _this.scrollXTicking = false;\n    };\n\n    this.scrollY = function () {\n      if (_this.axis.y.isOverflowing) {\n        _this.showScrollbar('y');\n\n        _this.positionScrollbar('y');\n      }\n\n      _this.scrollYTicking = false;\n    };\n\n    this.onMouseEnter = function () {\n      _this.showScrollbar('x');\n\n      _this.showScrollbar('y');\n    };\n\n    this.onMouseMove = function (e) {\n      _this.mouseX = e.clientX;\n      _this.mouseY = e.clientY;\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseMoveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseMoveForAxis('y');\n      }\n    };\n\n    this.onMouseLeave = function () {\n      _this.onMouseMove.cancel();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        _this.onMouseLeaveForAxis('x');\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        _this.onMouseLeaveForAxis('y');\n      }\n\n      _this.mouseX = -1;\n      _this.mouseY = -1;\n    };\n\n    this.onWindowResize = function () {\n      // Recalculate scrollbarWidth in case it's a zoom\n      _this.scrollbarWidth = _this.getScrollbarWidth();\n\n      _this.hideNativeScrollbar();\n    };\n\n    this.hideScrollbars = function () {\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (!_this.isWithinBounds(_this.axis.y.track.rect)) {\n        _this.axis.y.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.y.isVisible = false;\n      }\n\n      if (!_this.isWithinBounds(_this.axis.x.track.rect)) {\n        _this.axis.x.scrollbar.el.classList.remove(_this.classNames.visible);\n\n        _this.axis.x.isVisible = false;\n      }\n    };\n\n    this.onPointerEvent = function (e) {\n      var isWithinTrackXBounds, isWithinTrackYBounds;\n      _this.axis.x.track.rect = _this.axis.x.track.el.getBoundingClientRect();\n      _this.axis.y.track.rect = _this.axis.y.track.el.getBoundingClientRect();\n\n      if (_this.axis.x.isOverflowing || _this.axis.x.forceVisible) {\n        isWithinTrackXBounds = _this.isWithinBounds(_this.axis.x.track.rect);\n      }\n\n      if (_this.axis.y.isOverflowing || _this.axis.y.forceVisible) {\n        isWithinTrackYBounds = _this.isWithinBounds(_this.axis.y.track.rect);\n      } // If any pointer event is called on the scrollbar\n\n\n      if (isWithinTrackXBounds || isWithinTrackYBounds) {\n        // Preventing the event's default action stops text being\n        // selectable during the drag.\n        e.preventDefault(); // Prevent event leaking\n\n        e.stopPropagation();\n\n        if (e.type === 'mousedown') {\n          if (isWithinTrackXBounds) {\n            _this.axis.x.scrollbar.rect = _this.axis.x.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.x.scrollbar.rect)) {\n              _this.onDragStart(e, 'x');\n            } else {\n              _this.onTrackClick(e, 'x');\n            }\n          }\n\n          if (isWithinTrackYBounds) {\n            _this.axis.y.scrollbar.rect = _this.axis.y.scrollbar.el.getBoundingClientRect();\n\n            if (_this.isWithinBounds(_this.axis.y.scrollbar.rect)) {\n              _this.onDragStart(e, 'y');\n            } else {\n              _this.onTrackClick(e, 'y');\n            }\n          }\n        }\n      }\n    };\n\n    this.drag = function (e) {\n      var eventOffset;\n      var track = _this.axis[_this.draggedAxis].track;\n      var trackSize = track.rect[_this.axis[_this.draggedAxis].sizeAttr];\n      var scrollbar = _this.axis[_this.draggedAxis].scrollbar;\n      var contentSize = _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollSizeAttr];\n      var hostSize = parseInt(_this.elStyles[_this.axis[_this.draggedAxis].sizeAttr], 10);\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (_this.draggedAxis === 'y') {\n        eventOffset = e.pageY;\n      } else {\n        eventOffset = e.pageX;\n      } // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n\n\n      var dragPos = eventOffset - track.rect[_this.axis[_this.draggedAxis].offsetAttr] - _this.axis[_this.draggedAxis].dragOffset; // Convert the mouse position into a percentage of the scrollbar height/width.\n\n      var dragPerc = dragPos / (trackSize - scrollbar.size); // Scroll the content by the same percentage.\n\n      var scrollPos = dragPerc * (contentSize - hostSize); // Fix browsers inconsistency on RTL\n\n      if (_this.draggedAxis === 'x') {\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? scrollPos - (trackSize + scrollbar.size) : scrollPos;\n        scrollPos = _this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollPos : scrollPos;\n      }\n\n      _this.contentWrapperEl[_this.axis[_this.draggedAxis].scrollOffsetAttr] = scrollPos;\n    };\n\n    this.onEndDrag = function (e) {\n      var elDocument = getElementDocument(_this.el);\n      var elWindow = getElementWindow(_this.el);\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.el.classList.remove(_this.classNames.dragging);\n\n      elDocument.removeEventListener('mousemove', _this.drag, true);\n      elDocument.removeEventListener('mouseup', _this.onEndDrag, true);\n      _this.removePreventClickId = elWindow.setTimeout(function () {\n        // Remove these asynchronously so we still suppress click events\n        // generated simultaneously with mouseup.\n        elDocument.removeEventListener('click', _this.preventClick, true);\n        elDocument.removeEventListener('dblclick', _this.preventClick, true);\n        _this.removePreventClickId = null;\n      });\n    };\n\n    this.preventClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = Object.assign({}, SimpleBar.defaultOptions, {}, options);\n    this.classNames = Object.assign({}, SimpleBar.defaultOptions.classNames, {}, this.options.classNames);\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null; // Don't re-instantiate over an existing one\n\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(this.hideScrollbars.bind(this), this.options.timeout);\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n    this.init();\n  }\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n\n\n  SimpleBar.getRtlHelpers = function getRtlHelpers() {\n    var dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML = '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    var scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    var dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    var dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    var dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    var dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(dummyContainerChild);\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left && dummyContainerChildOffset.left - dummyContainerScrollOffsetAfterScroll.left !== 0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted: dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  };\n\n  SimpleBar.getOffset = function getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    var elDocument = getElementDocument(el);\n    var elWindow = getElementWindow(el);\n    return {\n      top: rect.top + (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left: rect.left + (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  };\n\n  var _proto = SimpleBar.prototype;\n\n  _proto.init = function init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this); // We stop here on server-side\n\n    if (canUseDOM) {\n      this.initDOM();\n      this.setAccessibilityAttributes();\n      this.scrollbarWidth = this.getScrollbarWidth();\n      this.recalculate();\n      this.initListeners();\n    }\n  };\n\n  _proto.initDOM = function initDOM() {\n    var _this2 = this; // make sure this element doesn't have the elements yet\n\n\n    if (Array.prototype.filter.call(this.el.children, function (child) {\n      return child.classList.contains(_this2.classNames.wrapper);\n    }).length) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(\".\" + this.classNames.wrapper);\n      this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(\".\" + this.classNames.contentWrapper);\n      this.contentEl = this.options.contentNode || this.el.querySelector(\".\" + this.classNames.contentEl);\n      this.offsetEl = this.el.querySelector(\".\" + this.classNames.offset);\n      this.maskEl = this.el.querySelector(\".\" + this.classNames.mask);\n      this.placeholderEl = this.findChild(this.wrapperEl, \".\" + this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl = this.el.querySelector(\".\" + this.classNames.heightAutoObserverEl);\n      this.axis.x.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.horizontal);\n      this.axis.y.track.el = this.findChild(this.el, \".\" + this.classNames.track + \".\" + this.classNames.vertical);\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl);\n      this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      var track = document.createElement('div');\n      var scrollbar = document.createElement('div');\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n      track.appendChild(scrollbar);\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\".\" + this.classNames.scrollbar);\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\".\" + this.classNames.scrollbar);\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  };\n\n  _proto.setAccessibilityAttributes = function setAccessibilityAttributes() {\n    var ariaLabel = this.options.ariaLabel || 'scrollable content';\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  };\n\n  _proto.initListeners = function initListeners() {\n    var _this3 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this3.el.addEventListener(e, _this3.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll); // Browser zoom triggers a window resize\n\n    elWindow.addEventListener('resize', this.onWindowResize); // Hack for https://github.com/WICG/ResizeObserver/issues/38\n\n    var resizeObserverStarted = false;\n    var resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(function () {\n      if (!resizeObserverStarted) return;\n\n      _this3.recalculate();\n    });\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n    elWindow.requestAnimationFrame(function () {\n      resizeObserverStarted = true;\n    }); // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  };\n\n  _proto.recalculate = function recalculate() {\n    var elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n    var isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    var isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    var contentElOffsetWidth = this.contentEl.offsetWidth;\n    var contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n    var elOverflowX = this.elStyles.overflowX;\n    var elOverflowY = this.elStyles.overflowY;\n    this.contentEl.style.padding = this.elStyles.paddingTop + \" \" + this.elStyles.paddingRight + \" \" + this.elStyles.paddingBottom + \" \" + this.elStyles.paddingLeft;\n    this.wrapperEl.style.margin = \"-\" + this.elStyles.paddingTop + \" -\" + this.elStyles.paddingRight + \" -\" + this.elStyles.paddingBottom + \" -\" + this.elStyles.paddingLeft;\n    var contentElScrollHeight = this.contentEl.scrollHeight;\n    var contentElScrollWidth = this.contentEl.scrollWidth;\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%'; // Determine placeholder size\n\n    this.placeholderEl.style.width = isWidthAuto ? contentElOffsetWidth + \"px\" : 'auto';\n    this.placeholderEl.style.height = contentElScrollHeight + \"px\";\n    var contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing = contentElScrollHeight > contentWrapperElOffsetHeight; // Set isOverflowing to false if user explicitely set hidden overflow\n\n    this.axis.x.isOverflowing = elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing = elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n    this.axis.x.forceVisible = this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible = this.options.forceVisible === 'y' || this.options.forceVisible === true;\n    this.hideNativeScrollbar(); // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n\n    var offsetForXScrollbar = this.axis.x.isOverflowing ? this.scrollbarWidth : 0;\n    var offsetForYScrollbar = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;\n    this.axis.x.isOverflowing = this.axis.x.isOverflowing && contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing = this.axis.y.isOverflowing && contentElScrollHeight > contentWrapperElOffsetHeight - offsetForXScrollbar;\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n    this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + \"px\";\n    this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + \"px\";\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n  /**\n   * Calculate scrollbar size\n   */\n  ;\n\n  _proto.getScrollbarSize = function getScrollbarSize(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    var contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var scrollbarSize;\n    var scrollbarRatio = trackSize / contentSize; // Calculate new height/position of drag handle.\n\n    scrollbarSize = Math.max(~~(scrollbarRatio * trackSize), this.options.scrollbarMinSize);\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  };\n\n  _proto.positionScrollbar = function positionScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    var contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    var trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted ? -scrollOffset : scrollOffset;\n    var scrollPourcent = scrollOffset / (contentSize - hostSize);\n    var handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset = axis === 'x' && this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted ? handleOffset + (trackSize - scrollbar.size) : handleOffset;\n    scrollbar.el.style.transform = axis === 'x' ? \"translate3d(\" + handleOffset + \"px, 0, 0)\" : \"translate3d(0, \" + handleOffset + \"px, 0)\";\n  };\n\n  _proto.toggleTrackVisibility = function toggleTrackVisibility(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var track = this.axis[axis].track.el;\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    } // Even if forceVisible is enabled, scrollbar itself should be hidden\n\n\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  };\n\n  _proto.hideNativeScrollbar = function hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n    this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? \"-\" + this.scrollbarWidth + \"px\" : 0;\n  }\n  /**\n   * On scroll event handling\n   */\n  ;\n\n  _proto.onMouseMoveForAxis = function onMouseMoveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.rect = this.axis[axis].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var isWithinScrollbarBoundsX = this.isWithinBounds(this.axis[axis].scrollbar.rect);\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  };\n\n  _proto.onMouseLeaveForAxis = function onMouseLeaveForAxis(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  };\n  /**\n   * Show scrollbar\n   */\n\n\n  _proto.showScrollbar = function showScrollbar(axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n  /**\n   * Hide Scrollbar\n   */\n  ;\n  /**\n   * on scrollbar handle drag movement starts\n   */\n\n\n  _proto.onDragStart = function onDragStart(e, axis) {\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    var elDocument = getElementDocument(this.el);\n    var elWindow = getElementWindow(this.el);\n    var scrollbar = this.axis[axis].scrollbar; // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n\n    var eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset = eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n    this.el.classList.add(this.classNames.dragging);\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n  /**\n   * Drag scrollbar handle\n   */\n  ;\n\n  _proto.onTrackClick = function onTrackClick(e, axis) {\n    var _this4 = this;\n\n    if (axis === void 0) {\n      axis = 'y';\n    }\n\n    if (!this.options.clickOnTrack) return;\n    var elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[axis].scrollbar.el.getBoundingClientRect();\n    var scrollbar = this.axis[axis].scrollbar;\n    var scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    var hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    var scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    var t = axis === 'y' ? this.mouseY - scrollbarOffset : this.mouseX - scrollbarOffset;\n    var dir = t < 0 ? -1 : 1;\n    var scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    var scrollTo = function scrollTo() {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          var _this4$contentWrapper;\n\n          scrolled -= _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper = {}, _this4$contentWrapper[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          var _this4$contentWrapper2;\n\n          scrolled += _this4.options.clickOnTrackSpeed;\n\n          _this4.contentWrapperEl.scrollTo((_this4$contentWrapper2 = {}, _this4$contentWrapper2[_this4.axis[axis].offsetAttr] = scrolled, _this4$contentWrapper2));\n\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n  /**\n   * Getter for content element\n   */\n  ;\n\n  _proto.getContentElement = function getContentElement() {\n    return this.contentEl;\n  }\n  /**\n   * Getter for original scrolling element\n   */\n  ;\n\n  _proto.getScrollElement = function getScrollElement() {\n    return this.contentWrapperEl;\n  };\n\n  _proto.getScrollbarWidth = function getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar').display === 'none' || 'scrollbarWidth' in document.documentElement.style || '-ms-overflow-style' in document.documentElement.style) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  };\n\n  _proto.removeListeners = function removeListeners() {\n    var _this5 = this;\n\n    var elWindow = getElementWindow(this.el); // Event listeners\n\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, true);\n    });\n    ['touchstart', 'touchend', 'touchmove'].forEach(function (e) {\n      _this5.el.removeEventListener(e, _this5.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    } // Cancel all debounced functions\n\n\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  ;\n\n  _proto.unMount = function unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n  /**\n   * Check if mouse is within bounds\n   */\n  ;\n\n  _proto.isWithinBounds = function isWithinBounds(bbox) {\n    return this.mouseX >= bbox.left && this.mouseX <= bbox.left + bbox.width && this.mouseY >= bbox.top && this.mouseY <= bbox.top + bbox.height;\n  }\n  /**\n   * Find element children matches query\n   */\n  ;\n\n  _proto.findChild = function findChild(el, query) {\n    var matches = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, function (child) {\n      return matches.call(child, query);\n    })[0];\n  };\n\n  return SimpleBar;\n}();\n\nSimpleBar.defaultOptions = {\n  autoHide: true,\n  forceVisible: false,\n  clickOnTrack: true,\n  clickOnTrackSpeed: 40,\n  classNames: {\n    contentEl: 'simplebar-content',\n    contentWrapper: 'simplebar-content-wrapper',\n    offset: 'simplebar-offset',\n    mask: 'simplebar-mask',\n    wrapper: 'simplebar-wrapper',\n    placeholder: 'simplebar-placeholder',\n    scrollbar: 'simplebar-scrollbar',\n    track: 'simplebar-track',\n    heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n    heightAutoObserverEl: 'simplebar-height-auto-observer',\n    visible: 'simplebar-visible',\n    horizontal: 'simplebar-horizontal',\n    vertical: 'simplebar-vertical',\n    hover: 'simplebar-hover',\n    dragging: 'simplebar-dragging'\n  },\n  scrollbarMinSize: 25,\n  scrollbarMaxSize: 0,\n  timeout: 1000\n};\nSimpleBar.instances = new WeakMap();\n\nSimpleBar.initDOMLoadedElements = function () {\n  document.removeEventListener('DOMContentLoaded', this.initDOMLoadedElements);\n  window.removeEventListener('load', this.initDOMLoadedElements);\n  Array.prototype.forEach.call(document.querySelectorAll('[data-simplebar]'), function (el) {\n    if (el.getAttribute('data-simplebar') !== 'init' && !SimpleBar.instances.has(el)) new SimpleBar(el, getOptions(el.attributes));\n  });\n};\n\nSimpleBar.removeObserver = function () {\n  this.globalObserver.disconnect();\n};\n\nSimpleBar.initHtmlApi = function () {\n  this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this); // MutationObserver is IE11+\n\n  if (typeof MutationObserver !== 'undefined') {\n    // Mutation observer to observe dynamically added elements\n    this.globalObserver = new MutationObserver(SimpleBar.handleMutations);\n    this.globalObserver.observe(document, {\n      childList: true,\n      subtree: true\n    });\n  } // Taken from jQuery `ready` function\n  // Instantiate elements already present on the page\n\n\n  if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay init\n    window.setTimeout(this.initDOMLoadedElements);\n  } else {\n    document.addEventListener('DOMContentLoaded', this.initDOMLoadedElements);\n    window.addEventListener('load', this.initDOMLoadedElements);\n  }\n};\n\nSimpleBar.handleMutations = function (mutations) {\n  mutations.forEach(function (mutation) {\n    Array.prototype.forEach.call(mutation.addedNodes, function (addedNode) {\n      if (addedNode.nodeType === 1) {\n        if (addedNode.hasAttribute('data-simplebar')) {\n          !SimpleBar.instances.has(addedNode) && document.documentElement.contains(addedNode) && new SimpleBar(addedNode, getOptions(addedNode.attributes));\n        } else {\n          Array.prototype.forEach.call(addedNode.querySelectorAll('[data-simplebar]'), function (el) {\n            if (el.getAttribute('data-simplebar') !== 'init' && !SimpleBar.instances.has(el) && document.documentElement.contains(el)) new SimpleBar(el, getOptions(el.attributes));\n          });\n        }\n      }\n    });\n    Array.prototype.forEach.call(mutation.removedNodes, function (removedNode) {\n      if (removedNode.nodeType === 1) {\n        if (removedNode.getAttribute('data-simplebar') === 'init') {\n          SimpleBar.instances.has(removedNode) && !document.documentElement.contains(removedNode) && SimpleBar.instances.get(removedNode).unMount();\n        } else {\n          Array.prototype.forEach.call(removedNode.querySelectorAll('[data-simplebar=\"init\"]'), function (el) {\n            SimpleBar.instances.has(el) && !document.documentElement.contains(el) && SimpleBar.instances.get(el).unMount();\n          });\n        }\n      }\n    });\n  });\n};\n\nSimpleBar.getOptions = getOptions;\n/**\n * HTML API\n * Called only in a browser env.\n */\n\nif (canUseDOM) {\n  SimpleBar.initHtmlApi();\n}\n\nexport default SimpleBar;","map":{"version":3,"mappings":"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","names":["getOptions","obj","options","Array","prototype","reduce","call","acc","attribute","option","name","match","key","replace","x","chr","toUpperCase","value","undefined","getElementWindow","element","ownerDocument","defaultView","window","getElementDocument","document","cachedScrollbarWidth","cachedDevicePixelRatio","canUseDOM","addEventListener","devicePixelRatio","scrollbarWidth","el","body","box","createElement","classList","add","appendChild","width","getBoundingClientRect","right","removeChild","SimpleBar","onScroll","elWindow","_this","scrollXTicking","requestAnimationFrame","scrollX","scrollYTicking","scrollY","axis","isOverflowing","showScrollbar","positionScrollbar","y","onMouseEnter","onMouseMove","mouseX","e","clientX","mouseY","clientY","forceVisible","onMouseMoveForAxis","onMouseLeave","cancel","onMouseLeaveForAxis","onWindowResize","getScrollbarWidth","hideNativeScrollbar","hideScrollbars","track","rect","isWithinBounds","scrollbar","remove","classNames","visible","isVisible","onPointerEvent","isWithinTrackXBounds","isWithinTrackYBounds","preventDefault","stopPropagation","type","onDragStart","onTrackClick","drag","eventOffset","draggedAxis","trackSize","sizeAttr","contentSize","contentWrapperEl","scrollSizeAttr","hostSize","parseInt","elStyles","pageY","pageX","dragPos","offsetAttr","dragOffset","dragPerc","size","scrollPos","isRtl","getRtlHelpers","isRtlScrollbarInverted","isRtlScrollingInverted","scrollOffsetAttr","onEndDrag","elDocument","dragging","removeEventListener","removePreventClickId","setTimeout","preventClick","minScrollbarWidth","Object","defaultOptions","offsetSizeAttr","overflowAttr","instances","has","recalculate","throttle","bind","debounce","timeout","leading","memoize","init","dummyDiv","innerHTML","scrollbarDummyEl","firstElementChild","dummyContainerChild","scrollLeft","dummyContainerOffset","getOffset","dummyContainerChildOffset","dummyContainerScrollOffsetAfterScroll","left","top","pageYOffset","documentElement","scrollTop","pageXOffset","set","initDOM","setAccessibilityAttributes","initListeners","filter","children","child","contains","_this2","wrapper","length","wrapperEl","querySelector","scrollableNode","contentWrapper","contentEl","contentNode","offsetEl","offset","maskEl","mask","placeholderEl","findChild","placeholder","heightAutoObserverWrapperEl","heightAutoObserverEl","horizontal","vertical","firstChild","cloneNode","autoHide","setAttribute","ariaLabel","forEach","_this3","capture","passive","resizeObserverStarted","resizeObserver","ResizeObserver","observe","mutationObserver","MutationObserver","childList","subtree","characterData","getComputedStyle","direction","isHeightAuto","offsetHeight","isWidthAuto","offsetWidth","contentElOffsetWidth","contentWrapperElOffsetWidth","elOverflowX","overflowX","elOverflowY","overflowY","style","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","contentElScrollHeight","scrollHeight","contentElScrollWidth","scrollWidth","height","contentWrapperElOffsetHeight","offsetForXScrollbar","offsetForYScrollbar","getScrollbarSize","toggleTrackVisibility","scrollbarSize","scrollbarRatio","Math","max","scrollbarMinSize","scrollbarMaxSize","min","scrollOffset","scrollPourcent","handleOffset","transform","visibility","display","bottom","isWithinScrollbarBoundsX","hover","clearTimeout","clickOnTrack","scrollbarOffset","scrolled","t","dir","scrollSize","scrollTo","_this4","clickOnTrackSpeed","getContentElement","getScrollElement","removeListeners","_this5","disconnect","unMount","delete","bbox","query","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","WeakMap","initDOMLoadedElements","querySelectorAll","getAttribute","attributes","removeObserver","globalObserver","initHtmlApi","handleMutations","readyState","doScroll","mutations","mutation","addedNodes","addedNode","nodeType","hasAttribute","removedNodes","removedNode","get"],"sources":["../src/helpers.js","../src/scrollbar-width.js","../src/simplebar.js","../src/index.js"],"sourcesContent":["// Helper function to retrieve options from element attributes\nexport const getOptions = function(obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case 'true':\n            acc[key] = true;\n            break;\n          case 'false':\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nexport function getElementWindow(element) {\n  if (\n    !element ||\n    !element.ownerDocument ||\n    !element.ownerDocument.defaultView\n  ) {\n    return window;\n  }\n  return element.ownerDocument.defaultView;\n}\n\nexport function getElementDocument(element) {\n  if (!element || !element.ownerDocument) {\n    return document;\n  }\n  return element.ownerDocument;\n}\n","import canUseDOM from 'can-use-dom';\nimport { getElementDocument } from \"./helpers\";\n\nlet cachedScrollbarWidth = null;\nlet cachedDevicePixelRatio = null;\n\nif (canUseDOM) {\n  window.addEventListener('resize', () => {\n    if (cachedDevicePixelRatio !== window.devicePixelRatio) {\n      cachedDevicePixelRatio = window.devicePixelRatio;\n      cachedScrollbarWidth = null;\n    }\n  });\n}\n\nexport default function scrollbarWidth(el) {\n  if (cachedScrollbarWidth === null) {\n    \n    const document = getElementDocument(el);\n    \n    if (typeof document === 'undefined') {\n      cachedScrollbarWidth = 0;\n      return cachedScrollbarWidth;\n    }\n    const body = document.body;\n    const box = document.createElement('div');\n\n    box.classList.add('simplebar-hide-scrollbar');\n\n    body.appendChild(box);\n\n    const width = box.getBoundingClientRect().right;\n\n    body.removeChild(box);\n\n    cachedScrollbarWidth = width;\n  }\n\n  return cachedScrollbarWidth;\n}\n","import throttle from 'lodash.throttle';\nimport debounce from 'lodash.debounce';\nimport memoize from 'lodash.memoize';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport canUseDOM from 'can-use-dom';\nimport scrollbarWidth from './scrollbar-width';\nimport { getElementWindow, getElementDocument } from './helpers';\n\nexport default class SimpleBar {\n  constructor(element, options) {\n    this.el = element;\n    this.minScrollbarWidth = 20;\n    this.options = { ...SimpleBar.defaultOptions, ...options };\n    this.classNames = {\n      ...SimpleBar.defaultOptions.classNames,\n      ...this.options.classNames\n    };\n    this.axis = {\n      x: {\n        scrollOffsetAttr: 'scrollLeft',\n        sizeAttr: 'width',\n        scrollSizeAttr: 'scrollWidth',\n        offsetSizeAttr: 'offsetWidth',\n        offsetAttr: 'left',\n        overflowAttr: 'overflowX',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      },\n      y: {\n        scrollOffsetAttr: 'scrollTop',\n        sizeAttr: 'height',\n        scrollSizeAttr: 'scrollHeight',\n        offsetSizeAttr: 'offsetHeight',\n        offsetAttr: 'top',\n        overflowAttr: 'overflowY',\n        dragOffset: 0,\n        isOverflowing: true,\n        isVisible: false,\n        forceVisible: false,\n        track: {},\n        scrollbar: {}\n      }\n    };\n    this.removePreventClickId = null;\n\n    // Don't re-instantiate over an existing one\n    if (SimpleBar.instances.has(this.el)) {\n      return;\n    }\n\n    this.recalculate = throttle(this.recalculate.bind(this), 64);\n    this.onMouseMove = throttle(this.onMouseMove.bind(this), 64);\n    this.hideScrollbars = debounce(\n      this.hideScrollbars.bind(this),\n      this.options.timeout\n    );\n    this.onWindowResize = debounce(this.onWindowResize.bind(this), 64, {\n      leading: true\n    });\n\n    SimpleBar.getRtlHelpers = memoize(SimpleBar.getRtlHelpers);\n\n    this.init();\n  }\n\n  /**\n   * Static properties\n   */\n\n  /**\n   * Helper to fix browsers inconsistency on RTL:\n   *  - Firefox inverts the scrollbar initial position\n   *  - IE11 inverts both scrollbar position and scrolling offset\n   * Directly inspired by @KingSora's OverlayScrollbars https://github.com/KingSora/OverlayScrollbars/blob/master/js/OverlayScrollbars.js#L1634\n   */\n  static getRtlHelpers() {\n    const dummyDiv = document.createElement('div');\n    dummyDiv.innerHTML =\n      '<div class=\"hs-dummy-scrollbar-size\"><div style=\"height: 200%; width: 200%; margin: 10px 0;\"></div></div>';\n    const scrollbarDummyEl = dummyDiv.firstElementChild;\n    document.body.appendChild(scrollbarDummyEl);\n    const dummyContainerChild = scrollbarDummyEl.firstElementChild;\n    scrollbarDummyEl.scrollLeft = 0;\n    const dummyContainerOffset = SimpleBar.getOffset(scrollbarDummyEl);\n    const dummyContainerChildOffset = SimpleBar.getOffset(dummyContainerChild);\n    scrollbarDummyEl.scrollLeft = 999;\n    const dummyContainerScrollOffsetAfterScroll = SimpleBar.getOffset(\n      dummyContainerChild\n    );\n\n    return {\n      // determines if the scrolling is responding with negative values\n      isRtlScrollingInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left &&\n        dummyContainerChildOffset.left -\n          dummyContainerScrollOffsetAfterScroll.left !==\n          0,\n      // determines if the origin scrollbar position is inverted or not (positioned on left or right)\n      isRtlScrollbarInverted:\n        dummyContainerOffset.left !== dummyContainerChildOffset.left\n    };\n  }\n\n  static defaultOptions = {\n    autoHide: true,\n    forceVisible: false,\n    clickOnTrack: true,\n    clickOnTrackSpeed: 40,\n    classNames: {\n      contentEl: 'simplebar-content',\n      contentWrapper: 'simplebar-content-wrapper',\n      offset: 'simplebar-offset',\n      mask: 'simplebar-mask',\n      wrapper: 'simplebar-wrapper',\n      placeholder: 'simplebar-placeholder',\n      scrollbar: 'simplebar-scrollbar',\n      track: 'simplebar-track',\n      heightAutoObserverWrapperEl: 'simplebar-height-auto-observer-wrapper',\n      heightAutoObserverEl: 'simplebar-height-auto-observer',\n      visible: 'simplebar-visible',\n      horizontal: 'simplebar-horizontal',\n      vertical: 'simplebar-vertical',\n      hover: 'simplebar-hover',\n      dragging: 'simplebar-dragging'\n    },\n    scrollbarMinSize: 25,\n    scrollbarMaxSize: 0,\n    timeout: 1000\n  };\n\n  static getOffset(el) {\n    const rect = el.getBoundingClientRect();\n    const elDocument = getElementDocument(el);\n    const elWindow = getElementWindow(el);\n\n    return {\n      top:\n        rect.top +\n        (elWindow.pageYOffset || elDocument.documentElement.scrollTop),\n      left:\n        rect.left +\n        (elWindow.pageXOffset || elDocument.documentElement.scrollLeft)\n    };\n  }\n\n  static instances = new WeakMap();\n\n  init() {\n    // Save a reference to the instance, so we know this DOM node has already been instancied\n    SimpleBar.instances.set(this.el, this);\n\n    // We stop here on server-side\n    if (canUseDOM) {\n      this.initDOM();\n\n      this.setAccessibilityAttributes();\n\n      this.scrollbarWidth = this.getScrollbarWidth();\n\n      this.recalculate();\n\n      this.initListeners();\n    }\n  }\n\n  initDOM() {\n    // make sure this element doesn't have the elements yet\n    if (\n      Array.prototype.filter.call(this.el.children, child =>\n        child.classList.contains(this.classNames.wrapper)\n      ).length\n    ) {\n      // assume that element has his DOM already initiated\n      this.wrapperEl = this.el.querySelector(`.${this.classNames.wrapper}`);\n      this.contentWrapperEl =\n        this.options.scrollableNode ||\n        this.el.querySelector(`.${this.classNames.contentWrapper}`);\n      this.contentEl =\n        this.options.contentNode ||\n        this.el.querySelector(`.${this.classNames.contentEl}`);\n\n      this.offsetEl = this.el.querySelector(`.${this.classNames.offset}`);\n      this.maskEl = this.el.querySelector(`.${this.classNames.mask}`);\n\n      this.placeholderEl = this.findChild(\n        this.wrapperEl,\n        `.${this.classNames.placeholder}`\n      );\n      this.heightAutoObserverWrapperEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverWrapperEl}`\n      );\n      this.heightAutoObserverEl = this.el.querySelector(\n        `.${this.classNames.heightAutoObserverEl}`\n      );\n      this.axis.x.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.horizontal}`\n      );\n      this.axis.y.track.el = this.findChild(\n        this.el,\n        `.${this.classNames.track}.${this.classNames.vertical}`\n      );\n    } else {\n      // Prepare DOM\n      this.wrapperEl = document.createElement('div');\n      this.contentWrapperEl = document.createElement('div');\n      this.offsetEl = document.createElement('div');\n      this.maskEl = document.createElement('div');\n      this.contentEl = document.createElement('div');\n      this.placeholderEl = document.createElement('div');\n      this.heightAutoObserverWrapperEl = document.createElement('div');\n      this.heightAutoObserverEl = document.createElement('div');\n\n      this.wrapperEl.classList.add(this.classNames.wrapper);\n      this.contentWrapperEl.classList.add(this.classNames.contentWrapper);\n      this.offsetEl.classList.add(this.classNames.offset);\n      this.maskEl.classList.add(this.classNames.mask);\n      this.contentEl.classList.add(this.classNames.contentEl);\n      this.placeholderEl.classList.add(this.classNames.placeholder);\n      this.heightAutoObserverWrapperEl.classList.add(\n        this.classNames.heightAutoObserverWrapperEl\n      );\n      this.heightAutoObserverEl.classList.add(\n        this.classNames.heightAutoObserverEl\n      );\n\n      while (this.el.firstChild) {\n        this.contentEl.appendChild(this.el.firstChild);\n      }\n\n      this.contentWrapperEl.appendChild(this.contentEl);\n      this.offsetEl.appendChild(this.contentWrapperEl);\n      this.maskEl.appendChild(this.offsetEl);\n      this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl);\n      this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl);\n      this.wrapperEl.appendChild(this.maskEl);\n      this.wrapperEl.appendChild(this.placeholderEl);\n      this.el.appendChild(this.wrapperEl);\n    }\n\n    if (!this.axis.x.track.el || !this.axis.y.track.el) {\n      const track = document.createElement('div');\n      const scrollbar = document.createElement('div');\n\n      track.classList.add(this.classNames.track);\n      scrollbar.classList.add(this.classNames.scrollbar);\n\n      track.appendChild(scrollbar);\n\n      this.axis.x.track.el = track.cloneNode(true);\n      this.axis.x.track.el.classList.add(this.classNames.horizontal);\n\n      this.axis.y.track.el = track.cloneNode(true);\n      this.axis.y.track.el.classList.add(this.classNames.vertical);\n\n      this.el.appendChild(this.axis.x.track.el);\n      this.el.appendChild(this.axis.y.track.el);\n    }\n\n    this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n    this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector(\n      `.${this.classNames.scrollbar}`\n    );\n\n    if (!this.options.autoHide) {\n      this.axis.x.scrollbar.el.classList.add(this.classNames.visible);\n      this.axis.y.scrollbar.el.classList.add(this.classNames.visible);\n    }\n\n    this.el.setAttribute('data-simplebar', 'init');\n  }\n\n  setAccessibilityAttributes() {\n    const ariaLabel = this.options.ariaLabel || 'scrollable content';\n\n    this.contentWrapperEl.setAttribute('tabindex', '0');\n    this.contentWrapperEl.setAttribute('role', 'region');\n    this.contentWrapperEl.setAttribute('aria-label', ariaLabel);\n  }\n\n  initListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.addEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.addEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.addEventListener('mousemove', this.onMouseMove);\n    this.el.addEventListener('mouseleave', this.onMouseLeave);\n\n    this.contentWrapperEl.addEventListener('scroll', this.onScroll);\n\n    // Browser zoom triggers a window resize\n    elWindow.addEventListener('resize', this.onWindowResize);\n\n    // Hack for https://github.com/WICG/ResizeObserver/issues/38\n    let resizeObserverStarted = false;\n    const resizeObserver = elWindow.ResizeObserver || ResizeObserver;\n    this.resizeObserver = new resizeObserver(() => {\n      if (!resizeObserverStarted) return;\n      this.recalculate();\n    });\n\n    this.resizeObserver.observe(this.el);\n    this.resizeObserver.observe(this.contentEl);\n\n    elWindow.requestAnimationFrame(() => {\n      resizeObserverStarted = true;\n    });\n\n    // This is required to detect horizontal scroll. Vertical scroll only needs the resizeObserver.\n    this.mutationObserver = new elWindow.MutationObserver(this.recalculate);\n\n    this.mutationObserver.observe(this.contentEl, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  recalculate() {\n    const elWindow = getElementWindow(this.el);\n    this.elStyles = elWindow.getComputedStyle(this.el);\n    this.isRtl = this.elStyles.direction === 'rtl';\n\n    const isHeightAuto = this.heightAutoObserverEl.offsetHeight <= 1;\n    const isWidthAuto = this.heightAutoObserverEl.offsetWidth <= 1;\n    const contentElOffsetWidth = this.contentEl.offsetWidth;\n\n    const contentWrapperElOffsetWidth = this.contentWrapperEl.offsetWidth;\n\n    const elOverflowX = this.elStyles.overflowX;\n    const elOverflowY = this.elStyles.overflowY;\n\n    this.contentEl.style.padding = `${this.elStyles.paddingTop} ${this.elStyles.paddingRight} ${this.elStyles.paddingBottom} ${this.elStyles.paddingLeft}`;\n    this.wrapperEl.style.margin = `-${this.elStyles.paddingTop} -${this.elStyles.paddingRight} -${this.elStyles.paddingBottom} -${this.elStyles.paddingLeft}`;\n\n    const contentElScrollHeight = this.contentEl.scrollHeight;\n    const contentElScrollWidth = this.contentEl.scrollWidth;\n\n    this.contentWrapperEl.style.height = isHeightAuto ? 'auto' : '100%';\n\n    // Determine placeholder size\n    this.placeholderEl.style.width = isWidthAuto\n      ? `${contentElOffsetWidth}px`\n      : 'auto';\n    this.placeholderEl.style.height = `${contentElScrollHeight}px`;\n\n    const contentWrapperElOffsetHeight = this.contentWrapperEl.offsetHeight;\n\n    this.axis.x.isOverflowing = contentElScrollWidth > contentElOffsetWidth;\n    this.axis.y.isOverflowing =\n      contentElScrollHeight > contentWrapperElOffsetHeight;\n\n    // Set isOverflowing to false if user explicitely set hidden overflow\n    this.axis.x.isOverflowing =\n      elOverflowX === 'hidden' ? false : this.axis.x.isOverflowing;\n    this.axis.y.isOverflowing =\n      elOverflowY === 'hidden' ? false : this.axis.y.isOverflowing;\n\n    this.axis.x.forceVisible =\n      this.options.forceVisible === 'x' || this.options.forceVisible === true;\n    this.axis.y.forceVisible =\n      this.options.forceVisible === 'y' || this.options.forceVisible === true;\n\n    this.hideNativeScrollbar();\n\n    // Set isOverflowing to false if scrollbar is not necessary (content is shorter than offset)\n    let offsetForXScrollbar = this.axis.x.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n    let offsetForYScrollbar = this.axis.y.isOverflowing\n      ? this.scrollbarWidth\n      : 0;\n\n    this.axis.x.isOverflowing =\n      this.axis.x.isOverflowing &&\n      contentElScrollWidth > contentWrapperElOffsetWidth - offsetForYScrollbar;\n    this.axis.y.isOverflowing =\n      this.axis.y.isOverflowing &&\n      contentElScrollHeight >\n        contentWrapperElOffsetHeight - offsetForXScrollbar;\n\n    this.axis.x.scrollbar.size = this.getScrollbarSize('x');\n    this.axis.y.scrollbar.size = this.getScrollbarSize('y');\n\n    this.axis.x.scrollbar.el.style.width = `${this.axis.x.scrollbar.size}px`;\n    this.axis.y.scrollbar.el.style.height = `${this.axis.y.scrollbar.size}px`;\n\n    this.positionScrollbar('x');\n    this.positionScrollbar('y');\n\n    this.toggleTrackVisibility('x');\n    this.toggleTrackVisibility('y');\n  }\n\n  /**\n   * Calculate scrollbar size\n   */\n  getScrollbarSize(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return 0;\n    }\n\n    const contentSize = this.contentEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    let scrollbarSize;\n\n    let scrollbarRatio = trackSize / contentSize;\n\n    // Calculate new height/position of drag handle.\n    scrollbarSize = Math.max(\n      ~~(scrollbarRatio * trackSize),\n      this.options.scrollbarMinSize\n    );\n\n    if (this.options.scrollbarMaxSize) {\n      scrollbarSize = Math.min(scrollbarSize, this.options.scrollbarMaxSize);\n    }\n\n    return scrollbarSize;\n  }\n\n  positionScrollbar(axis = 'y') {\n    if (!this.axis[axis].isOverflowing) {\n      return;\n    }\n\n    const contentSize = this.contentWrapperEl[this.axis[axis].scrollSizeAttr];\n    const trackSize = this.axis[axis].track.el[this.axis[axis].offsetSizeAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    let scrollOffset = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    scrollOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollingInverted\n        ? -scrollOffset\n        : scrollOffset;\n    let scrollPourcent = scrollOffset / (contentSize - hostSize);\n\n    let handleOffset = ~~((trackSize - scrollbar.size) * scrollPourcent);\n    handleOffset =\n      axis === 'x' &&\n      this.isRtl &&\n      SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n        ? handleOffset + (trackSize - scrollbar.size)\n        : handleOffset;\n\n    scrollbar.el.style.transform =\n      axis === 'x'\n        ? `translate3d(${handleOffset}px, 0, 0)`\n        : `translate3d(0, ${handleOffset}px, 0)`;\n  }\n\n  toggleTrackVisibility(axis = 'y') {\n    const track = this.axis[axis].track.el;\n    const scrollbar = this.axis[axis].scrollbar.el;\n\n    if (this.axis[axis].isOverflowing || this.axis[axis].forceVisible) {\n      track.style.visibility = 'visible';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'scroll';\n    } else {\n      track.style.visibility = 'hidden';\n      this.contentWrapperEl.style[this.axis[axis].overflowAttr] = 'hidden';\n    }\n\n    // Even if forceVisible is enabled, scrollbar itself should be hidden\n    if (this.axis[axis].isOverflowing) {\n      scrollbar.style.display = 'block';\n    } else {\n      scrollbar.style.display = 'none';\n    }\n  }\n\n  hideNativeScrollbar() {\n    this.offsetEl.style[this.isRtl ? 'left' : 'right'] =\n      this.axis.y.isOverflowing || this.axis.y.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n    this.offsetEl.style.bottom =\n      this.axis.x.isOverflowing || this.axis.x.forceVisible\n        ? `-${this.scrollbarWidth}px`\n        : 0;\n  }\n\n  /**\n   * On scroll event handling\n   */\n  onScroll = () => {\n    const elWindow = getElementWindow(this.el);\n    if (!this.scrollXTicking) {\n      elWindow.requestAnimationFrame(this.scrollX);\n      this.scrollXTicking = true;\n    }\n\n    if (!this.scrollYTicking) {\n      elWindow.requestAnimationFrame(this.scrollY);\n      this.scrollYTicking = true;\n    }\n  };\n\n  scrollX = () => {\n    if (this.axis.x.isOverflowing) {\n      this.showScrollbar('x');\n      this.positionScrollbar('x');\n    }\n\n    this.scrollXTicking = false;\n  };\n\n  scrollY = () => {\n    if (this.axis.y.isOverflowing) {\n      this.showScrollbar('y');\n      this.positionScrollbar('y');\n    }\n\n    this.scrollYTicking = false;\n  };\n\n  onMouseEnter = () => {\n    this.showScrollbar('x');\n    this.showScrollbar('y');\n  };\n\n  onMouseMove = e => {\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseMoveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseMoveForAxis('y');\n    }\n  };\n\n  onMouseMoveForAxis(axis = 'y') {\n    this.axis[axis].track.rect = this.axis[\n      axis\n    ].track.el.getBoundingClientRect();\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n\n    const isWithinScrollbarBoundsX = this.isWithinBounds(\n      this.axis[axis].scrollbar.rect\n    );\n\n    if (isWithinScrollbarBoundsX) {\n      this.axis[axis].scrollbar.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n    }\n\n    if (this.isWithinBounds(this.axis[axis].track.rect)) {\n      this.showScrollbar(axis);\n      this.axis[axis].track.el.classList.add(this.classNames.hover);\n    } else {\n      this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    }\n  }\n\n  onMouseLeave = () => {\n    this.onMouseMove.cancel();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      this.onMouseLeaveForAxis('x');\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      this.onMouseLeaveForAxis('y');\n    }\n\n    this.mouseX = -1;\n    this.mouseY = -1;\n  };\n\n  onMouseLeaveForAxis(axis = 'y') {\n    this.axis[axis].track.el.classList.remove(this.classNames.hover);\n    this.axis[axis].scrollbar.el.classList.remove(this.classNames.hover);\n  }\n\n  onWindowResize = () => {\n    // Recalculate scrollbarWidth in case it's a zoom\n    this.scrollbarWidth = this.getScrollbarWidth();\n\n    this.hideNativeScrollbar();\n  };\n\n  /**\n   * Show scrollbar\n   */\n  showScrollbar(axis = 'y') {\n    let scrollbar = this.axis[axis].scrollbar.el;\n\n    if (!this.axis[axis].isVisible) {\n      scrollbar.classList.add(this.classNames.visible);\n      this.axis[axis].isVisible = true;\n    }\n\n    if (this.options.autoHide) {\n      this.hideScrollbars();\n    }\n  }\n\n  /**\n   * Hide Scrollbar\n   */\n  hideScrollbars = () => {\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (!this.isWithinBounds(this.axis.y.track.rect)) {\n      this.axis.y.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.y.isVisible = false;\n    }\n\n    if (!this.isWithinBounds(this.axis.x.track.rect)) {\n      this.axis.x.scrollbar.el.classList.remove(this.classNames.visible);\n      this.axis.x.isVisible = false;\n    }\n  };\n\n  onPointerEvent = e => {\n    let isWithinTrackXBounds, isWithinTrackYBounds;\n\n    this.axis.x.track.rect = this.axis.x.track.el.getBoundingClientRect();\n    this.axis.y.track.rect = this.axis.y.track.el.getBoundingClientRect();\n\n    if (this.axis.x.isOverflowing || this.axis.x.forceVisible) {\n      isWithinTrackXBounds = this.isWithinBounds(this.axis.x.track.rect);\n    }\n\n    if (this.axis.y.isOverflowing || this.axis.y.forceVisible) {\n      isWithinTrackYBounds = this.isWithinBounds(this.axis.y.track.rect);\n    }\n\n    // If any pointer event is called on the scrollbar\n    if (isWithinTrackXBounds || isWithinTrackYBounds) {\n      // Preventing the event's default action stops text being\n      // selectable during the drag.\n      e.preventDefault();\n      // Prevent event leaking\n      e.stopPropagation();\n\n      if (e.type === 'mousedown') {\n        if (isWithinTrackXBounds) {\n          this.axis.x.scrollbar.rect = this.axis.x.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.x.scrollbar.rect)) {\n            this.onDragStart(e, 'x');\n          } else {\n            this.onTrackClick(e, 'x');\n          }\n        }\n\n        if (isWithinTrackYBounds) {\n          this.axis.y.scrollbar.rect = this.axis.y.scrollbar.el.getBoundingClientRect();\n\n          if (this.isWithinBounds(this.axis.y.scrollbar.rect)) {\n            this.onDragStart(e, 'y');\n          } else {\n            this.onTrackClick(e, 'y');\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * on scrollbar handle drag movement starts\n   */\n  onDragStart(e, axis = 'y') {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    const scrollbar = this.axis[axis].scrollbar;\n\n    // Measure how far the user's mouse is from the top of the scrollbar drag handle.\n    const eventOffset = axis === 'y' ? e.pageY : e.pageX;\n    this.axis[axis].dragOffset =\n      eventOffset - scrollbar.rect[this.axis[axis].offsetAttr];\n    this.draggedAxis = axis;\n\n    this.el.classList.add(this.classNames.dragging);\n\n    elDocument.addEventListener('mousemove', this.drag, true);\n    elDocument.addEventListener('mouseup', this.onEndDrag, true);\n    if (this.removePreventClickId === null) {\n      elDocument.addEventListener('click', this.preventClick, true);\n      elDocument.addEventListener('dblclick', this.preventClick, true);\n    } else {\n      elWindow.clearTimeout(this.removePreventClickId);\n      this.removePreventClickId = null;\n    }\n  }\n\n  /**\n   * Drag scrollbar handle\n   */\n  drag = e => {\n    let eventOffset;\n    const track = this.axis[this.draggedAxis].track;\n    const trackSize = track.rect[this.axis[this.draggedAxis].sizeAttr];\n    const scrollbar = this.axis[this.draggedAxis].scrollbar;\n    const contentSize = this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollSizeAttr\n    ];\n    const hostSize = parseInt(\n      this.elStyles[this.axis[this.draggedAxis].sizeAttr],\n      10\n    );\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (this.draggedAxis === 'y') {\n      eventOffset = e.pageY;\n    } else {\n      eventOffset = e.pageX;\n    }\n\n    // Calculate how far the user's mouse is from the top/left of the scrollbar (minus the dragOffset).\n    let dragPos =\n      eventOffset -\n      track.rect[this.axis[this.draggedAxis].offsetAttr] -\n      this.axis[this.draggedAxis].dragOffset;\n    // Convert the mouse position into a percentage of the scrollbar height/width.\n    let dragPerc = dragPos / (trackSize - scrollbar.size);\n\n    // Scroll the content by the same percentage.\n    let scrollPos = dragPerc * (contentSize - hostSize);\n\n    // Fix browsers inconsistency on RTL\n    if (this.draggedAxis === 'x') {\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollbarInverted\n          ? scrollPos - (trackSize + scrollbar.size)\n          : scrollPos;\n      scrollPos =\n        this.isRtl && SimpleBar.getRtlHelpers().isRtlScrollingInverted\n          ? -scrollPos\n          : scrollPos;\n    }\n\n    this.contentWrapperEl[\n      this.axis[this.draggedAxis].scrollOffsetAttr\n    ] = scrollPos;\n  };\n\n  /**\n   * End scroll handle drag\n   */\n  onEndDrag = e => {\n    const elDocument = getElementDocument(this.el);\n    const elWindow = getElementWindow(this.el);\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.el.classList.remove(this.classNames.dragging);\n\n    elDocument.removeEventListener('mousemove', this.drag, true);\n    elDocument.removeEventListener('mouseup', this.onEndDrag, true);\n    this.removePreventClickId = elWindow.setTimeout(() => {\n      // Remove these asynchronously so we still suppress click events\n      // generated simultaneously with mouseup.\n      elDocument.removeEventListener('click', this.preventClick, true);\n      elDocument.removeEventListener('dblclick', this.preventClick, true);\n      this.removePreventClickId = null;\n    });\n  };\n\n  /**\n   * Handler to ignore click events during drag\n   */\n  preventClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  onTrackClick(e, axis = 'y') {\n    if (!this.options.clickOnTrack) return;\n\n    const elWindow = getElementWindow(this.el);\n    this.axis[axis].scrollbar.rect = this.axis[\n      axis\n    ].scrollbar.el.getBoundingClientRect();\n    const scrollbar = this.axis[axis].scrollbar;\n    const scrollbarOffset = scrollbar.rect[this.axis[axis].offsetAttr];\n    const hostSize = parseInt(this.elStyles[this.axis[axis].sizeAttr], 10);\n    let scrolled = this.contentWrapperEl[this.axis[axis].scrollOffsetAttr];\n    const t =\n      axis === 'y'\n        ? this.mouseY - scrollbarOffset\n        : this.mouseX - scrollbarOffset;\n    const dir = t < 0 ? -1 : 1;\n    const scrollSize = dir === -1 ? scrolled - hostSize : scrolled + hostSize;\n\n    const scrollTo = () => {\n      if (dir === -1) {\n        if (scrolled > scrollSize) {\n          scrolled -= this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      } else {\n        if (scrolled < scrollSize) {\n          scrolled += this.options.clickOnTrackSpeed;\n          this.contentWrapperEl.scrollTo({\n            [this.axis[axis].offsetAttr]: scrolled\n          });\n          elWindow.requestAnimationFrame(scrollTo);\n        }\n      }\n    };\n\n    scrollTo();\n  }\n\n  /**\n   * Getter for content element\n   */\n  getContentElement() {\n    return this.contentEl;\n  }\n\n  /**\n   * Getter for original scrolling element\n   */\n  getScrollElement() {\n    return this.contentWrapperEl;\n  }\n\n  getScrollbarWidth() {\n    // Try/catch for FF 56 throwing on undefined computedStyles\n    try {\n      // Detect browsers supporting CSS scrollbar styling and do not calculate\n      if (\n        getComputedStyle(this.contentWrapperEl, '::-webkit-scrollbar')\n          .display === 'none' ||\n        'scrollbarWidth' in document.documentElement.style ||\n        '-ms-overflow-style' in document.documentElement.style\n      ) {\n        return 0;\n      } else {\n        return scrollbarWidth(this.el);\n      }\n    } catch (e) {\n      return scrollbarWidth(this.el);\n    }\n  }\n\n  removeListeners() {\n    const elWindow = getElementWindow(this.el);\n    // Event listeners\n    if (this.options.autoHide) {\n      this.el.removeEventListener('mouseenter', this.onMouseEnter);\n    }\n\n    ['mousedown', 'click', 'dblclick'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, true);\n    });\n\n    ['touchstart', 'touchend', 'touchmove'].forEach(e => {\n      this.el.removeEventListener(e, this.onPointerEvent, {\n        capture: true,\n        passive: true\n      });\n    });\n\n    this.el.removeEventListener('mousemove', this.onMouseMove);\n    this.el.removeEventListener('mouseleave', this.onMouseLeave);\n\n    if (this.contentWrapperEl) {\n      this.contentWrapperEl.removeEventListener('scroll', this.onScroll);\n    }\n\n    elWindow.removeEventListener('resize', this.onWindowResize);\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    // Cancel all debounced functions\n    this.recalculate.cancel();\n    this.onMouseMove.cancel();\n    this.hideScrollbars.cancel();\n    this.onWindowResize.cancel();\n  }\n\n  /**\n   * UnMount mutation observer and delete SimpleBar instance from DOM element\n   */\n  unMount() {\n    this.removeListeners();\n    SimpleBar.instances.delete(this.el);\n  }\n\n  /**\n   * Check if mouse is within bounds\n   */\n  isWithinBounds(bbox) {\n    return (\n      this.mouseX >= bbox.left &&\n      this.mouseX <= bbox.left + bbox.width &&\n      this.mouseY >= bbox.top &&\n      this.mouseY <= bbox.top + bbox.height\n    );\n  }\n\n  /**\n   * Find element children matches query\n   */\n  findChild(el, query) {\n    const matches =\n      el.matches ||\n      el.webkitMatchesSelector ||\n      el.mozMatchesSelector ||\n      el.msMatchesSelector;\n    return Array.prototype.filter.call(el.children, child =>\n      matches.call(child, query)\n    )[0];\n  }\n}\n","import canUseDOM from 'can-use-dom';\n\nimport SimpleBar from './simplebar';\nimport { getOptions } from './helpers';\n\nSimpleBar.initDOMLoadedElements = function() {\n  document.removeEventListener('DOMContentLoaded', this.initDOMLoadedElements);\n  window.removeEventListener('load', this.initDOMLoadedElements);\n\n  Array.prototype.forEach.call(\n    document.querySelectorAll('[data-simplebar]'),\n    el => {\n      if (\n        el.getAttribute('data-simplebar') !== 'init' &&\n        !SimpleBar.instances.has(el)\n      )\n        new SimpleBar(el, getOptions(el.attributes));\n    }\n  );\n};\n\nSimpleBar.removeObserver = function() {\n  this.globalObserver.disconnect();\n};\n\nSimpleBar.initHtmlApi = function() {\n  this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this);\n\n  // MutationObserver is IE11+\n  if (typeof MutationObserver !== 'undefined') {\n    // Mutation observer to observe dynamically added elements\n    this.globalObserver = new MutationObserver(SimpleBar.handleMutations);\n\n    this.globalObserver.observe(document, { childList: true, subtree: true });\n  }\n\n  // Taken from jQuery `ready` function\n  // Instantiate elements already present on the page\n  if (\n    document.readyState === 'complete' ||\n    (document.readyState !== 'loading' && !document.documentElement.doScroll)\n  ) {\n    // Handle it asynchronously to allow scripts the opportunity to delay init\n    window.setTimeout(this.initDOMLoadedElements);\n  } else {\n    document.addEventListener('DOMContentLoaded', this.initDOMLoadedElements);\n    window.addEventListener('load', this.initDOMLoadedElements);\n  }\n};\n\nSimpleBar.handleMutations = mutations => {\n  mutations.forEach(mutation => {\n    Array.prototype.forEach.call(mutation.addedNodes, addedNode => {\n      if (addedNode.nodeType === 1) {\n        if (addedNode.hasAttribute('data-simplebar')) {\n          !SimpleBar.instances.has(addedNode) &&\n            document.documentElement.contains(addedNode) &&\n            new SimpleBar(addedNode, getOptions(addedNode.attributes));\n        } else {\n          Array.prototype.forEach.call(\n            addedNode.querySelectorAll('[data-simplebar]'),\n            function(el) {\n              if (\n                el.getAttribute('data-simplebar') !== 'init' &&\n                !SimpleBar.instances.has(el) &&\n                document.documentElement.contains(el)\n              )\n                new SimpleBar(el, getOptions(el.attributes));\n            }\n          );\n        }\n      }\n    });\n\n    Array.prototype.forEach.call(mutation.removedNodes, removedNode => {\n      if (removedNode.nodeType === 1) {\n        if (removedNode.getAttribute('data-simplebar') === 'init') {\n          SimpleBar.instances.has(removedNode) &&\n            !document.documentElement.contains(removedNode) &&\n            SimpleBar.instances.get(removedNode).unMount();\n        } else {\n          Array.prototype.forEach.call(\n            removedNode.querySelectorAll('[data-simplebar=\"init\"]'),\n            el => {\n              SimpleBar.instances.has(el) &&\n                !document.documentElement.contains(el) &&\n                SimpleBar.instances.get(el).unMount();\n            }\n          );\n        }\n      }\n    });\n  });\n};\n\nSimpleBar.getOptions = getOptions;\n\n/**\n * HTML API\n * Called only in a browser env.\n */\nif (canUseDOM) {\n  SimpleBar.initHtmlApi();\n}\n\nexport default SimpleBar;\n"]},"metadata":{},"sourceType":"module"}