{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_3 = {\n  class: \"row\"\n};\nvar _hoisted_4 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_5 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_6 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_8 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: $data.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-name\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.currentWarehouse_cell.name = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, _ctx.currentWarehouse_cell.name]])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t(\"t-slug\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return _ctx.currentWarehouse_cell.slug = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, _ctx.currentWarehouse_cell.slug]])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t(\"t-warehouses\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: _ctx.currentWarehouse_cell.Warehouse.Id,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return _ctx.currentWarehouse_cell.Warehouse.Id = $event;\n        }),\n        options: _this.Warehouses,\n        onSelect: _cache[3] || (_cache[3] = function ($event) {\n          return $options.mySelectEvent($event);\n        })\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: _ctx.updateWarehouse_cell,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Save\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;AA2KUA,OAAK,EAAC;;;AAEKC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;AAKjCA,OAAK,EAAC;;;AAEIC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;AAMvCA,OAAK,EAAC;;;AACAC,KAAG,EAAC;AAAkBD,OAAK,EAAC;;;8BAKvCE,oBAEQ,GAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;;AAKiBF,OAAK,EAAC;;;;;;;;;;;;;uBA7BrBG,aAuCWC,iBAvCX,EAuCW,IAvCX,EAuCW;sBAtCT;AAAA,aAA4C,CAA5CC,aAA4CC,qBAA5C,EAA4C;AAA/BC,aAAK,EAAEC,WAAwB;AAAhBC,aAAK,EAAEC;AAAS,OAA5C;;AAAA,2BAA4C,EAE3CR,oBAKM,KALN,cAKM,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAqE,OAArE,cAAqES,iBAAvBD,QAAE,QAAF,CAAuB,CAArE,EAAgD;AAAA;AAAhD,OAEE,kBADHR,oBAAwG,OAAxG,EAAwG;AAAjGU,YAAI,EAAC,MAA4F;AAArFZ,aAAK,EAAC,cAA+E;AAAhEa,UAAE,EAAC,YAA6D;AAAhDC,gBAAQ,EAAR,EAAgD;;iBAA7BJ,2BAAsBK,OAAIC;;AAAG,OAAxG;;AAAA,wBAA2EN,2BAAsBK,OAC9F,CAHN,CAIC,CALN,CAF2C,EAS1Cb,oBAKK,KALL,cAKK,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAwE,OAAxE,cAAwES,iBAAvBD,QAAE,QAAF,CAAuB,CAAxE,EAAmD;AAAA;AAAnD,OAEE,kBADFR,oBAAuG,OAAvG,EAAuG;AAAhGU,YAAI,EAAC,MAA2F;AAApFZ,aAAK,EAAC,cAA8E;AAA/Da,UAAE,EAAC,YAA4D;AAA/CC,gBAAQ,EAAR,EAA+C;;iBAA7BJ,2BAAsBO,OAAID;;AAAG,OAAvG;;AAAA,wBAA0EN,2BAAsBO,OAC9F,CAHN,CAIC,CALL,CAT0C,EAiBhDf,oBAGM,KAHN,cAGM,CAFFA,oBAAgF,OAAhF,cAAgFS,iBAA7BD,QAAE,cAAF,CAA6B,CAAhF,EAAqD;AAAA;AAArD,OAEE,EADFL,aAAkHa,kBAAlH,EAAkH;oBAAhGR,2BAAsBS,SAAtB,CAAgCC,EAAgE;;iBAAhGV,2BAAsBS,SAAtB,CAAgCC,KAAEJ;UAA8D;AAA3DK,eAAO,QAAOC,UAA6C;AAAhCC,gBAAM;AAAA,iBAAEC,uBAAcR,MAAd,CAAF;AAAA;AAA0B,OAAlH;;AAAA,kCACE,CAHN,CAjBgD,EAuBhDS,UAvBgD,EA4BpCvB,oBAKM,KALN,cAKM,CAJFA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFG,aAAyHqB,mBAAzH,EAAyH;AAA9GC,eAAK,EAAEjB,yBAAuG;AAAjFkB,eAAO,EAAC,SAAyE;AAA/D5B,aAAK,EAAC;AAAyD,OAAzH;0BAA4F;AAAA,iBAAkB,mCAAfU,QAAE,QAAF,IAAE;AAAA;WAAa,CAAlB;AAAA;;;;OAA5F;;AAAA,oBAEE,CAHN,CAIE,CALN,CA5BoC,CAA5C;AAAA,MAsCS;;;;AAAA,GAvCX","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_ctx","_toDisplayString","type","id","required","name","$event","slug","_component_Select2","Warehouse","Id","options","Warehouses","onSelect","$options","_hoisted_7","_component_b_button","onClick","variant"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового GTD\",\n        GTD:{\n        \n        NumId:\"\",\n      \n        Country:{\n          Id:-1,\n          Name:'',\n        },\n        },\n        Countries:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    getWarehouse_cell(id) {\n       \n       Warehouse_cellDataService.get(id)\n        .then(response => {\n         \n            console.log(response.data)\n            if (response.status == 200){\n              this.currentWarehouse_cell = response.data;\n            }else{\n              this.$router.push({path: \"/warehouse_cell\"});\n              \n            }\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    updateGTD() {\n        \n        this.currentWarehouse_cell.Warehouse.Id = parseInt(this.currentWarehouse_cell.Warehouse.Id);\n       Warehouse_cellDataService.update(this.currentWarehouse_cell.id, this.currentWarehouse_cell)\n       \n        .then(response => {\n         \n          this.message = 'The Warehouse_cell was updated successfully!';\n        if (response.data.status_code == 200){\n        this.$router.push({path: \"/warehouse_cell\"})}\n        else{\n        return response.data.message}\n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n\n    deleteWarehouse_cell() {\n      \n      Warehouse_cellDataService.delete(this.currentWarehouse_cell.Id)\n        .then(response => {\n         \n          this.$router.push({ name: \"warehouse_cell\" });\n        if (response.status == 202){\n        this.$router.push({path: \"/warehouse_cell\"})}\n        else{\n        return response.data.message}\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n    \n       retrieveWarehouses(){\n        \n      this. jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       WarehouseDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n          console.log(response.data);\n          for(let i = 0; i < response.data.List.length; i++){\n            console.log(\"<<<<<<<<<<>>>>>>>>>>>>\")\n            console.log(response.data.List.length)\n              let currentWarehouse = response.data.List[i];\n            if (currentWarehouse.id == this.currentWarehouse_cell.Warehouse.Id){\n                this.selectWarehouse.id = currentWarehouse.id;\n                this.selectWarehouse.text = currentWarehouse.Name;\n            }\n              this.Warehouses[i]={\n                id:currentWarehouse.id, \n                text:currentWarehouse.name\n              };\n              \n          }\n          //this.Warehouses = response.data.Warehouses;\n        \n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     mySelectEvent({id, text}){\n            this.currentWarehouse_cell.Warehouse.Id = id;\n            this.currentWarehouse_cell.Warehouse.Name = text;\n     }\n  },\n  mounted() {\n    this.message = '';\n    \n    this.getWarehouse_cell(this.$route.params.id);\n     this.retrieveWarehouses();\n     \n    \n  }\n\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentWarehouse_cell.name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentWarehouse_cell.slug\" >\n          </div>                     \n     </div>\n       \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-warehouses\") }}</label>\n    <Select2 v-model=\"currentWarehouse_cell.Warehouse.Id\" :options=\"this.Warehouses\" @select=\"mySelectEvent($event)\"/>\n</div>\n\n      \n<p>\n \n    </p>\n  \n    \n            <div class=\"row\">\n                <div>\n                    <b-button @click=\"updateWarehouse_cell\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \n                              \n                </div> \n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}