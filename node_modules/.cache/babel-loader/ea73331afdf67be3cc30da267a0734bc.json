{"ast":null,"code":"import _classCallCheck from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport axios from 'axios';\nimport { authHeader } from '../helpers/authservice/auth-header'; // eslint-disable-next-line no-unused-vars\n\nvar UniversalDataService = /*#__PURE__*/function () {\n  function UniversalDataService() {\n    _classCallCheck(this, UniversalDataService);\n\n    _defineProperty(this, \"path\", '/api/v2/data');\n\n    _defineProperty(this, \"mpath\", '');\n  }\n\n  _createClass(UniversalDataService, [{\n    key: \"setPath\",\n    value: function setPath(pth) {\n      this.mpath = this.path + '/' + pth;\n    }\n  }, {\n    key: \"list\",\n    value: function list(params) {\n      var config = {\n        headers: authHeader()\n      };\n      return axios.post(this.mpath, params, config);\n    }\n  }, {\n    key: \"create\",\n    value: function create(id, params) {\n      var config = {\n        headers: authHeader()\n      };\n      return axios.post(this.mpath, params, config);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, params) {\n      var config = {\n        headers: authHeader()\n      };\n      return axios.put(this.mpath + '/' + id, params, config);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var config = {\n        headers: authHeader()\n      };\n      return axios.delete(this.mpath + '/' + id, config);\n    }\n  }]);\n\n  return UniversalDataService;\n}();\n\nexport default new UniversalDataService();","map":{"version":3,"sources":["C:/Users/Max/Desktop/project1.0.0-main/src/services/UniversalDataService.js"],"names":["axios","authHeader","UniversalDataService","pth","mpath","path","params","config","headers","post","id","put","delete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oCAA3B,C,CAIA;;IACMC,oB;;;;kCAEK,c;;mCACC,E;;;;;WACR,iBAAQC,GAAR,EAAa;AACT,WAAKC,KAAL,GAAa,KAAKC,IAAL,GAAY,GAAZ,GAAkBF,GAA/B;AACH;;;WACD,cAAKG,MAAL,EAAa;AAIT,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAEP,UAAU;AADV,OAAb;AAOA,aAAOD,KAAK,CAACS,IAAN,CAAW,KAAKL,KAAhB,EAAuBE,MAAvB,EAA+BC,MAA/B,CAAP;AAEH;;;WACD,gBAAOG,EAAP,EAAWJ,MAAX,EAAmB;AACf,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAEP,UAAU;AADV,OAAb;AAGA,aAAOD,KAAK,CAACS,IAAN,CAAW,KAAKL,KAAhB,EAAuBE,MAAvB,EAA+BC,MAA/B,CAAP;AACH;;;WAED,gBAAOG,EAAP,EAAWJ,MAAX,EAAmB;AACf,UAAIC,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAEP,UAAU;AADV,OAAb;AAGA,aAAOD,KAAK,CAACW,GAAN,CAAU,KAAKP,KAAL,GAAa,GAAb,GAAmBM,EAA7B,EAAiCJ,MAAjC,EAAyCC,MAAzC,CAAP;AACH;;;WAED,iBAAOG,EAAP,EAAW;AACP,UAAIH,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAEP,UAAU;AADV,OAAb;AAGA,aAAOD,KAAK,CAACY,MAAN,CAAa,KAAKR,KAAL,GAAa,GAAb,GAAmBM,EAAhC,EAAoCH,MAApC,CAAP;AACH;;;;;;AAGL,eAAe,IAAIL,oBAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport { authHeader } from '../helpers/authservice/auth-header';\r\n\r\n\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nclass UniversalDataService {\r\n\r\n    path = '/api/v2/data'\r\n    mpath = '';\r\n    setPath(pth) {\r\n        this.mpath = this.path + '/' + pth;\r\n    }\r\n    list(params) {\r\n\r\n\r\n\r\n        let config = {\r\n            headers: authHeader(),\r\n\r\n\r\n        }\r\n\r\n\r\n        return axios.post(this.mpath, params, config)\r\n\r\n    }\r\n    create(id, params) {\r\n        let config = {\r\n            headers: authHeader(),\r\n        }\r\n        return axios.post(this.mpath, params, config)\r\n    }\r\n\r\n    update(id, params) {\r\n        let config = {\r\n            headers: authHeader(),\r\n        }\r\n        return axios.put(this.mpath + '/' + id, params, config)\r\n    }\r\n\r\n    delete(id) {\r\n        let config = {\r\n            headers: authHeader(),\r\n        }\r\n        return axios.delete(this.mpath + '/' + id, config)\r\n    }\r\n\r\n}\r\nexport default new UniversalDataService();"]},"metadata":{},"sourceType":"module"}