{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      currentGTD: {\n        NumId: \"\",\n        Country: {\n          Id: -1,\n          Name: ''\n        }\n      },\n      Countries: [{\n        id: -1,\n        text: \"\"\n      }],\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\"\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    getGTD: function getGTD(id) {\n      var _this = this;\n\n      GTDDataService.get(id).then(function (response) {\n        console.log(response.data);\n\n        if (response.status == 200) {\n          _this.currentWarehouse_cell = response.data;\n        } else {\n          _this.$router.push({\n            path: \"/gtd\"\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateGTD: function updateGTD() {\n      var _this2 = this;\n\n      this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.Id);\n      GTDDataService.update(this.currentGTD.id, this.currentGTD).then(function (response) {\n        _this2.message = 'The Warehouse_cell was updated successfully!';\n\n        if (response.data.status_code == 200) {\n          _this2.$router.push({\n            path: \"/gtd\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    retrieveCountries: function retrieveCountries() {\n      var _this3 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CountryDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        console.log(response.data);\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          var currentCountry = response.data.List[i];\n\n          if (currentCountry.id == _this3.currentGTD.Country.id) {\n            _this3.selecCountry.id = currentCountry.id;\n            _this3.selectCountry.text = currentCountry.name;\n          }\n\n          _this3.Countries[i] = {\n            id: currentCountry.id,\n            text: currentCountry.name\n          };\n        } //this.Warehouses = response.data.Warehouses;\n\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    mySelectEvent: function mySelectEvent(_ref) {\n      var id = _ref.id,\n          text = _ref.text;\n      this.currentGTD.Country.id = id;\n      this.currentGTD.Country.name = text;\n    }\n  },\n  mounted: function mounted() {\n    this.message = '';\n    this.getGTD(this.$route.params.id);\n    this.retrieveCountries();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","GTDDataService","CountryDataService","Select2","page","title","meta","name","content","description","data","currentGTD","NumId","Country","Id","Name","Countries","id","text","PageRequest","Fields","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","jsonFields","value","search","components","methods","getGTD","get","then","console","log","response","status","currentWarehouse_cell","$router","push","path","catch","e","updateGTD","parseInt","update","message","status_code","retrieveCountries","pg_number","pg_length","field","getAll","i","List","length","currentCountry","selecCountry","selectCountry","mySelectEvent","mounted","$route","params"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport GTDDataService from \"/src/services/GTDDataService\";\r\nimport CountryDataService from \"/src/services/CountryDataService\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  data() {\r\n   return {\r\n   currentGTD:{\r\n        \r\n        NumId:\"\",\r\n      \r\n        Country:{\r\n          Id:-1,\r\n          Name:'',\r\n        },\r\n        },\r\n        Countries:[\r\n          {\r\n            id:-1,\r\n            text:\"\"\r\n          }\r\n        ],\r\n         PageRequest: {\r\n            Fields: [{\r\n               Name :'',\r\n               Value:'',\r\n               Operation:'',\r\n               Order:'',\r\n            }],\r\n            PageNumber:0,\r\n            PageLenght:0,\r\n            TotalRecords:0,\r\n            TotalPage:0,\r\n        },\r\n       page: 1,\r\n      perPage: 7,\r\n      pages: [],\r\n      jsonPages: {\r\n                PageNumber: 0,\r\n                TotalRecords:0,\r\n      },\r\n       jsonFields: [{\r\n                name:'',\r\n                value: ''\r\n      }],\r\n      search:\"\",\r\n    \r\n    }; \r\n       \r\n    \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    Select2\r\n  },\r\n    methods: {\r\n    getGTD(id) {\r\n       \r\n      GTDDataService.get(id)\r\n        .then(response => {\r\n         \r\n            console.log(response.data)\r\n            if (response.status == 200){\r\n              this.currentWarehouse_cell = response.data;\r\n            }else{\r\n              this.$router.push({path: \"/gtd\"});\r\n              \r\n            }\r\n          \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    updateGTD() {\r\n        \r\n        this.currentGTD.Country.Id = parseInt( this.currentGTD.Country.Id);\r\n      GTDDataService.update(this.currentGTD.id, this.currentGTD)\r\n       \r\n        .then(response => {\r\n         \r\n          this.message = 'The Warehouse_cell was updated successfully!';\r\n        if (response.data.status_code == 200){\r\n        this.$router.push({path: \"/gtd\"})}\r\n        else{\r\n        return response.data.message}\r\n        })\r\n        \r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n\r\n   \r\n    \r\n       retrieveCountries(){\r\n        \r\n      this. jsonPages = {\r\n               pg_number:1,\r\n                  pg_length: 1000\r\n            };\r\n         \r\n            if (this.search!=\"\"){\r\n            this.jsonFields = [{\r\n                field:\"name\",\r\n                value: this.search\r\n            }];\r\n            }else{\r\n                this.jsonFields = [];\r\n            }\r\n\r\n\r\n      CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          for(let i = 0; i < response.data.List.length; i++){\r\n         \r\n              let currentCountry = response.data.List[i];\r\n            if (currentCountry.id == this.currentGTD.Country.id){\r\n                this.selecCountry.id = currentCountry.id;\r\n                this.selectCountry.text = currentCountry.name;\r\n            }\r\n              this.Countries[i]={\r\n                id:currentCountry.id, \r\n                text:currentCountry.name\r\n              };\r\n              \r\n          }\r\n          //this.Warehouses = response.data.Warehouses;\r\n        \r\n         \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n     mySelectEvent({id, text}){\r\n            this.currentGTD.Country.id = id;\r\n            this.currentGTD.Country.name = text;\r\n     }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    \r\n    this.getGTD(this.$route.params.id);\r\n     this.retrieveCountries();\r\n     \r\n    \r\n  }\r\n\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n     <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\r\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentGTD.num_id\" >\r\n          </div>                     \r\n     </div> \r\n\r\n  \r\n       \r\n\r\n<div class=\"col-xxl-3 col-md-6\">\r\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-warehouses\") }}</label>\r\n    <Select2 v-model=\"currentGTD.Country.id\" :options=\"this.Counties\" @select=\"mySelectEvent($event)\"/>\r\n</div>\r\n\r\n      \r\n<p>\r\n \r\n    </p>\r\n  \r\n    \r\n            <div class=\"row\">\r\n                <div>\r\n                    <b-button @click=\"updateWarehouse_cell\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \r\n                              \r\n                </div> \r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}