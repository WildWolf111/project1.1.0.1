{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      title: \"Добавление нового GTD\",\n      GTD: {\n        NumId: \"\",\n        Country: {\n          Id: -1,\n          Name: ''\n        }\n      },\n      Countries: [{\n        id: -1,\n        text: \"\"\n      }],\n      jsonPages: {\n        PageNumber: 1,\n        TotalRecords: 100\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    addedGTD: function addedGTD() {\n      var _this = this;\n\n      var data = {\n        \"num_id\": parseInt(this.GTD.NumId),\n        \"Country\": {\n          \"Id\": parseInt(this.GTD.Country.Id),\n          \"Name\": this.GTD.Country.Name\n        }\n      };\n      GTDDataService.create(data).then(function (response) {\n        _this.GTD.Id = response.data.id;\n        console.log(\"***********************S\");\n        console.log(response.data);\n        _this.submitted = true;\n\n        if (response.data.message = 200) {\n          _this.GTD.NumId = \"\";\n          _this.GTD.Country = {\n            Id: -1,\n            Name: ''\n          };\n          console.log(\"***********************S\");\n          console.log(response.data);\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    newCompany: function newCompany() {\n      this.submitted = false;\n      this.GTD = {};\n    },\n    retrieveGTDs: function retrieveGTDs() {\n      var _this2 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CountryDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        console.log('111111111111111111111111111111');\n        console.log(response.data);\n        _this2.perPage = response.data.pg_length;\n        _this2.page = response.data.pg_number;\n        console.log(\"========================\");\n        console.log(response.data.List);\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          var currentCountries = response.data.List[i];\n          _this2.Countries[i] = {\n            id: currentCountries.id,\n            text: currentCountries.name\n          };\n        } //this.GTDs = response.data.GTDs;\n\n\n        console.log(\"<<<<<<<<<<<>>>>>>>>>>>>>>>\");\n        console.log(_this2.Countries);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveGTDs();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","GTDDataService","CountryDataService","Select2","page","title","meta","name","content","description","data","GTD","NumId","Country","Id","Name","Countries","id","text","jsonPages","PageNumber","TotalRecords","jsonFields","value","components","methods","addedGTD","parseInt","create","then","response","console","log","submitted","message","catch","e","newCompany","retrieveGTDs","pg_number","pg_length","search","field","getAll","perPage","List","i","length","currentCountries","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового GTD\",\n        GTD:{\n        \n        NumId:\"\",\n      \n        Country:{\n          Id:-1,\n          Name:'',\n        },\n        },\n        Countries:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    addedGTD() {\n      var data = {\n        \"num_id\":parseInt(this.GTD.NumId),\n        \n        \"Country\":{\n          \"Id\":parseInt(this.GTD.Country.Id),\n          \"Name\":this.GTD.Country.Name,\n        },\n      };\n       \n      GTDDataService.create(data)\n      \n        .then(response => {\n          this.GTD.Id = response.data.id;\n              console.log(\"***********************S\")\n                console.log(response.data)\n          this.submitted = true;\n             if (response.data.message = 200){\n        \n                this.GTD.NumId = \"\"\n                \n                this.GTD.Country = {\n          Id:-1,\n          Name:'',\n        };\n              \n               console.log(\"***********************S\")\n                console.log(response.data)\n\n        }\n        else{\n        return response.data.message}\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.GTD = {};\n    },\n    retrieveGTDs(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n            CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n        console.log('111111111111111111111111111111')\n    console.log(response.data)\n           \n          this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n                \n                console.log(\"========================\")\n                console.log(response.data.List)\n              \n           for(let i = 0; i < response.data.List.length; i++){\n        \n              let currentCountries = response.data.List[i];\n           \n              this.Countries[i]={\n                \n                id:currentCountries.id,\n\n                text:currentCountries.name  \n\n              };\n\n           \n\n\n          }\n          //this.GTDs = response.data.GTDs;\nconsole.log(\"<<<<<<<<<<<>>>>>>>>>>>>>>>\")\n\n              console.log(this.Countries)\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     \n  },\n   mounted() {\n    this.retrieveGTDs();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"GTD.NumId\" >\n          </div>                     \n     </div> \n\n      \n\n<p>\n \n    </p>\n\n \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-Country\") }}</label>\n    <Select2 v-model.number=\"GTD.Country.Id\" :options=\"this.Countries\" />\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}