{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_5 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_7 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: $data.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-num id\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.GTD.NumId = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.GTD.NumId]])])]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"label\", _hoisted_5, _toDisplayString(_ctx.$t(\"t-country\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: $data.GTD.Country.Id,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.GTD.Country.Id = $event;\n        }),\n        modelModifiers: {\n          number: true\n        },\n        options: _this.Country\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: $options.addedGTD,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Added\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;AA+JUA,OAAK,EAAC;;;AAEKC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;8BAM5CE,oBAEQ,GAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;;AAMKF,OAAK,EAAC;;;AACAC,KAAG,EAAC;AAAkBD,OAAK,EAAC;;;8BAMnCE,oBAEI,GAFJ,EAEI,IAFJ,EAEI,IAFJ,EAEI;AAAA;AAFJ;;;AAIMF,OAAK,EAAC;;;;;;;;;;;;;uBA5BdG,aAsCWC,iBAtCX,EAsCW,IAtCX,EAsCW;sBArCT;AAAA,aAA4C,CAA5CC,aAA4CC,qBAA5C,EAA4C;AAA/BC,aAAK,EAAEC,WAAwB;AAAhBC,aAAK,EAAEC;AAAS,OAA5C;;AAAA,2BAA4C,EAE3CR,oBAKM,KALN,cAKM,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAuE,OAAvE,cAAuES,iBAAzBD,QAAE,UAAF,CAAyB,CAAvE,EAAgD;AAAA;AAAhD,OAEE,kBADHR,oBAAsF,OAAtF,EAAsF;AAA/EU,YAAI,EAAC,MAA0E;AAAnEZ,aAAK,EAAC,cAA6D;AAA9Ca,UAAE,EAAC,YAA2C;AAA9BC,gBAAQ,EAAR,EAA8B;;iBAAZN,UAAIO,QAAKC;;AAAG,OAAtF;;AAAA,wBAA0ER,UAAIO,QAC3E,CAHN,CAIC,CALN,CAF2C,EAUhDE,UAVgD,EAgBhDf,oBAGM,KAHN,cAGM,CAFFA,oBAA6E,OAA7E,cAA6ES,iBAA1BD,QAAE,WAAF,CAA0B,CAA7E,EAAqD;AAAA;AAArD,OAEE,EADFL,aAAmEa,kBAAnE,EAAmE;oBAA1CV,UAAIW,OAAJ,CAAYC,EAA8B;;iBAA1CZ,UAAIW,OAAJ,CAAYC,KAAEJ;UAA4B;wBAA1D;AAAAK;AAAA,SAA0D;AAAzBC,eAAO,QAAOH;AAAW,OAAnE;;AAAA,kCACE,CAHN,CAhBgD,EAuB5CI,UAvB4C,EA2B3CrB,oBAIM,KAJN,cAIM,CAHNA,oBAES,KAFT,EAES,IAFT,EAES,CADNG,aAA8GmB,mBAA9G,EAA8G;AAAnGC,eAAK,EAAEC,iBAA4F;AAAlFC,eAAO,EAAC,SAA0E;AAAhE3B,aAAK,EAAC;AAA0D,OAA9G;0BAAgF;AAAA,iBAAmB,mCAAhBU,QAAE,SAAF,IAAE;AAAA;WAAc,CAAnB;AAAA;;;;OAAhF;;AAAA,oBACM,CAFT,CAGM,CAJN,CA3B2C,CAA5C;AAAA,MAqCS;;;;AAAA,GAtCX","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_ctx","_toDisplayString","type","id","required","NumId","$event","_hoisted_3","_component_Select2","Country","Id","number","options","_hoisted_6","_component_b_button","onClick","$options","variant"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/Warehouse_cellDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление новоq ГТД\",\n        GTD:{\n        Id: '',\n        NumId:\"\",\n        Country:{\n          Id:-1,\n          Name:'',\n        },\n        },\n        Countries:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    addedGTD() {\n      var data = {\n        \"NumId\":this.GTD.NumId,\n      \n        \"Country\":{\n          \"Id\":parseInt(this.GTD.Country.Id),\n          \n        },\n      };\n       \n      GTDDataService.create(data)\n      \n        .then(response => {\n          this.GTD.Id = response.data.id;\n              console.log(\"***********************S\")\n                console.log(response.data)\n          this.submitted = true;\n             if (response.data.message = 200){\n        \n                this.GTD.NumId = \"\"\n                \n                this.GTD.Country.Id = {\n          Id:-1,\n          Name:'',\n        };\n              \n               console.log(\"***********************S\")\n                console.log(response.data)\n\n        }\n        else{\n        return response.data.message}\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.GTD = {};\n    },\n    retrieveWarehouse_cells(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n            CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n        console.log('111111111111111111111111111111')\n    console.log(response.data)\n           \n          this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n                \n                console.log(\"========================\")\n                console.log(response.data.List)\n              \n           for(let i = 0; i < response.data.List.length; i++){\n        \n              let currentCountries = response.data.List[i];\n           \n              this.Countries[i]={\n                \n                id:currentCountries.id,\n\n                text:currentCountries.name  \n\n              };\n\n           \n\n\n          }\n          //this.GTDs = response.data.GTDs;\nconsole.log(\"<<<<<<<<<<<>>>>>>>>>>>>>>>\")\n\n              console.log(this.Countries)\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     \n  },\n   mounted() {\n    this.retrieveWarehouse_cells();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-num id\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"GTD.NumId\" >\n          </div>                     \n     </div> \n\n\n<p>\n \n    </p>\n\n \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-country\") }}</label>\n    <Select2 v-model.number=\"GTD.Country.Id\" :options=\"this.Country\" />\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}