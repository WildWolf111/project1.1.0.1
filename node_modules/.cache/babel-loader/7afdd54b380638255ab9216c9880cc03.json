{"ast":null,"code":"import _defineProperty from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      currentBrands: {\n        Id: currentBrands.Id,\n        Name: currentBrands.Name,\n        Slug: currentBrands.Slug\n      },\n      Brands: []\n    }, _defineProperty(_ref, \"currentBrands\", null), _defineProperty(_ref, \"currentIndex\", -1), _defineProperty(_ref, \"title\", \"\"), _defineProperty(_ref, \"Filter\", {\n      Fields: [{\n        field: '',\n        value: ''\n      }],\n      Sorts: [],\n      Pages: {\n        currentpage: 0,\n        allpages: 0,\n        countsrecordonpage: 0,\n        allrecords: 0,\n        remainedrecords: 0\n      }\n    }), _defineProperty(_ref, \"page\", 1), _defineProperty(_ref, \"perPage\", 7), _defineProperty(_ref, \"pages\", []), _defineProperty(_ref, \"jsonPages\", {\n      currentpage: 0,\n      countsrecordonpage: 0\n    }), _defineProperty(_ref, \"jsonFields\", [{\n      name: '',\n      value: ''\n    }]), _defineProperty(_ref, \"search\", \"\"), _ref;\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      this.page = numPage;\n      this.retrieveBrands();\n    },\n    retrieveBrands: function retrieveBrands() {\n      var _this = this;\n\n      this.jsonPages = {\n        currentpage: this.page,\n        countsrecordonpage: this.perPage\n      };\n      console.log('-----------');\n      console.log(this.jsonPages);\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      BrandsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        _this.Brands = response.data.Brands;\n        _this.perPage = response.data.Filter.Pages.countsrecordonpage;\n        _this.page = response.data.Filter.Pages.currentpage;\n        var i = 0;\n\n        for (i = 0; i < response.data.Filter.Pages.allpages; i++) {\n          _this.pages[i] = i + 1;\n        }\n\n        console.log(_this.pages);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    refreshList: function refreshList() {\n      this.retrieveBrands();\n      this.currentBrands = null;\n      this.currentIndex = -1;\n    },\n    setActiveBrands: function setActiveBrands(brands, index) {\n      this.currentBrands = brands;\n      this.currentIndex = brands ? index : -1;\n    },\n    removeAllBrands: function removeAllBrands() {\n      var _this2 = this;\n\n      BrandsDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getBrandByName: function getBrandByName() {\n      this.retrieveBrands();\n      this.pages = [];\n    },\n    deleteBrand: function deleteBrand() {\n      var _this3 = this;\n\n      BrandsDataService.delete(this.currentBrands.Id).then(function (response) {\n        console.log(response.data);\n\n        _this3.$router.push({\n          name: \"brand\"\n        });\n\n        if (response.data.message = 202) {\n          _this3.$router.push({\n            path: \"/brands\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,eAAe;AAEbC,MAAI,EAAE;AACJC,SAAK,EAAE,gBADH;AAEJC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEN,SAAS,CAACO;AAA1C,KAAD;AAFF,GAFO;AAOdC,MAPc,kBAOP;AAAA;;AACJ;AACGC,mBAAa,EAAC;AACXC,UAAE,EAACD,aAAa,CAACC,EADN;AAEXC,YAAI,EAACF,aAAa,CAACE,IAFR;AAGXC,YAAI,EAACH,aAAa,CAACG;AAHR,OADjB;AAMEC,YAAM,EAAE;AANV,8CAOiB,IAPjB,yCAQgB,CAAC,CARjB,kCASS,EATT,mCAYY;AACJC,YAAM,EAAE,CAAC;AACLC,aAAK,EAAC,EADD;AAELC,aAAK,EAAC;AAFD,OAAD,CADJ;AAKJC,WAAK,EAAE,EALH;AAMJC,WAAK,EAAE;AACHC,mBAAW,EAAE,CADV;AAEHC,gBAAQ,EAAE,CAFP;AAGHC,0BAAkB,EAAE,CAHjB;AAIHC,kBAAU,EAAE,CAJT;AAKHC,uBAAe,EAAE;AALd;AANH,KAZZ,iCA0BQ,CA1BR,oCA2BW,CA3BX,kCA4BS,EA5BT,sCA6Ba;AACDJ,iBAAW,EAAE,CADZ;AAEDE,wBAAkB,EAAE;AAFnB,KA7Bb,uCAiCe,CAAC;AACJhB,UAAI,EAAC,EADD;AAEJW,WAAK,EAAE;AAFH,KAAD,CAjCf,mCAqCS,EArCT;AAyCD,GAjDY;AAmDbQ,YAAU,EAAE;AACV1B,UAAM,EAANA,MADU;AAEVC,cAAU,EAAVA;AAFU,GAnDC;AAuDZ0B,SAAO,EAAE;AACRC,WADQ,mBACAC,OADA,EACQ;AAEZ,WAAKzB,IAAL,GAAYyB,OAAZ;AACC,WAAKC,cAAL;AACJ,KALO;AAMRA,kBANQ,4BAMS;AAAA;;AACf,WAAKC,SAAL,GAAiB;AACbV,mBAAW,EAAC,KAAKjB,IADJ;AAEbmB,0BAAkB,EAAE,KAAKS;AAFZ,OAAjB;AAIEC,aAAO,CAACC,GAAR,CAAa,aAAb;AACFD,aAAO,CAACC,GAAR,CAAa,KAAKH,SAAlB;;AACA,UAAI,KAAKI,MAAL,IAAa,EAAjB,EAAoB;AACnB,aAAKC,UAAL,GAAkB,CAAC;AAChBnB,eAAK,EAAC,MADU;AAEhBC,eAAK,EAAE,KAAKiB;AAFI,SAAD,CAAlB;AAIC,OALF,MAKM;AACD,aAAKC,UAAL,GAAkB,EAAlB;AACJ;;AAGAjC,uBAAiB,CAACkC,MAAlB,CAAyB,KAAKD,UAA9B,EAAyC,EAAzC,EAA4C,KAAKL,SAAjD,EACEO,IADF,CACO,kBAAO,EAAK;AAChB,aAAI,CAACvB,MAAL,GAAcwB,QAAQ,CAAC7B,IAAT,CAAcK,MAA5B;AACA,aAAI,CAACiB,OAAL,GAAeO,QAAQ,CAAC7B,IAAT,CAAc8B,MAAd,CAAqBpB,KAArB,CAA2BG,kBAA1C;AACA,aAAI,CAACnB,IAAL,GAAYmC,QAAQ,CAAC7B,IAAT,CAAc8B,MAAd,CAAqBpB,KAArB,CAA2BC,WAAvC;AACA,YAAIoB,CAAC,GAAC,CAAN;;AACA,aAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAACF,QAAQ,CAAC7B,IAAT,CAAc8B,MAAd,CAAqBpB,KAArB,CAA2BE,QAAtC,EAA+CmB,CAAC,EAAhD,EAAmD;AAC/C,eAAI,CAACC,KAAL,CAAWD,CAAX,IAAcA,CAAC,GAAC,CAAhB;AACJ;;AAEAR,eAAO,CAACC,GAAR,CAAc,KAAI,CAACQ,KAAnB;AACD,OAXF,EAYEC,KAZF,CAYQ,aAAK;AACVV,eAAO,CAACC,GAAR,CAAYU,CAAZ;AACD,OAdF;AAeF,KAtCO;AAwCRC,eAxCQ,yBAwCM;AACZ,WAAKf,cAAL;AACA,WAAKnB,aAAL,GAAqB,IAArB;AACA,WAAKmC,YAAL,GAAoB,CAAC,CAArB;AACD,KA5CO;AA8CRC,mBA9CQ,2BA8CQC,MA9CR,EA8CgBC,KA9ChB,EA8CuB;AAC7B,WAAKtC,aAAL,GAAqBqC,MAArB;AACA,WAAKF,YAAL,GAAoBE,MAAK,GAAIC,KAAJ,GAAY,CAAC,CAAtC;AACD,KAjDO;AAmDRC,mBAnDQ,6BAmDU;AAAA;;AACf/C,uBAAiB,CAACgD,SAAlB,GACEb,IADF,CACO,kBAAO,EAAK;AAChBL,eAAO,CAACC,GAAR,CAAYK,QAAQ,CAAC7B,IAArB;;AACA,cAAI,CAACmC,WAAL;AACD,OAJF,EAKEF,KALF,CAKQ,aAAK;AACVV,eAAO,CAACC,GAAR,CAAYU,CAAZ;AACD,OAPF;AAQF,KA5DO;AA+DRQ,kBA/DQ,4BA+DQ;AACX,WAAKtB,cAAL;AACA,WAAKY,KAAL,GAAa,EAAb;AAEJ,KAnEO;AAqEPW,eArEO,yBAqEO;AAAA;;AAEblD,uBAAiB,CAACmD,MAAlB,CAAyB,KAAK3C,aAAL,CAAmBC,EAA5C,EACG0B,IADH,CACQ,kBAAO,EAAK;AAChBL,eAAO,CAACC,GAAR,CAAYK,QAAQ,CAAC7B,IAArB;;AACA,cAAI,CAAC6C,OAAL,CAAaC,IAAb,CAAkB;AAAEjD,cAAI,EAAE;AAAR,SAAlB;;AACF,YAAIgC,QAAQ,CAAC7B,IAAT,CAAc+C,OAAd,GAAwB,GAA5B,EAAgC;AAChC,gBAAI,CAACF,OAAL,CAAaC,IAAb,CAAkB;AAACE,gBAAI,EAAE;AAAP,WAAlB;AAAoC,SADpC,MAEI;AACJ,iBAAOnB,QAAQ,CAAC7B,IAAT,CAAc+C,OAArB;AAA4B;AAE3B,OATH,EAUGd,KAVH,CAUS,aAAK;AACVV,eAAO,CAACC,GAAR,CAAYU,CAAZ;AACD,OAZH;AAcF;AArFQ,GAvDG;AA8Ibe,SA9Ia,qBA8IH;AACR,SAAK7B,cAAL;AACD;AAhJY,CAAf","names":["Layout","PageHeader","appConfig","BrandsDataService","page","title","meta","name","content","description","data","currentBrands","Id","Name","Slug","Brands","Fields","field","value","Sorts","Pages","currentpage","allpages","countsrecordonpage","allrecords","remainedrecords","components","methods","setPage","numPage","retrieveBrands","jsonPages","perPage","console","log","search","jsonFields","getAll","then","response","Filter","i","pages","catch","e","refreshList","currentIndex","setActiveBrands","brands","index","removeAllBrands","deleteAll","getBrandByName","deleteBrand","delete","$router","push","message","path","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\brands\\list.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport BrandsDataService from \"/src/services/BrandsDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  \r\n data() {\r\n    return {\r\n       currentBrands:{\r\n          Id:currentBrands.Id,\r\n          Name:currentBrands.Name,\r\n          Slug:currentBrands.Slug\r\n      },\r\n      Brands: [],\r\n      currentBrands: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n\r\n \r\n        Filter: {\r\n            Fields: [{\r\n                field:'',\r\n                value:''\r\n            }],\r\n            Sorts: [],\r\n            Pages: {\r\n                currentpage: 0,\r\n                allpages: 0,\r\n                countsrecordonpage: 0,\r\n                allrecords: 0,\r\n                remainedrecords: 0\r\n            }\r\n        },\r\n      page: 1,\r\n      perPage: 7,\r\n      pages: [],\r\n      jsonPages: {\r\n                currentpage: 0,\r\n                countsrecordonpage: 0\r\n      },\r\n       jsonFields: [{\r\n                name:'',\r\n                value: ''\r\n      }],\r\n      search:\"\",\r\n    \r\n    }; \r\n       \r\n  },\r\n\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n   methods: {\r\n    setPage(numPage){\r\n \r\n        this.page = numPage;\r\n         this.retrieveBrands();\r\n    },\r\n    retrieveBrands() {\r\n      this.jsonPages = {\r\n          currentpage:this.page,\r\n          countsrecordonpage: this.perPage\r\n      };\r\n        console.log( '-----------')\r\n      console.log( this.jsonPages)\r\n      if (this.search!=\"\"){\r\n       this.jsonFields = [{\r\n          field:\"name\",\r\n          value: this.search\r\n       }];\r\n       }else{\r\n           this.jsonFields = [];\r\n       }\r\n\r\n\r\n       BrandsDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n          this.Brands = response.data.Brands;\r\n          this.perPage = response.data.Filter.Pages.countsrecordonpage;\r\n          this.page = response.data.Filter.Pages.currentpage;\r\n          let i=0;\r\n          for(i=0; i<response.data.Filter.Pages.allpages;i++){\r\n              this.pages[i]=i+1;\r\n          }\r\n\r\n          console.log(  this.pages);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveBrands();\r\n      this.currentBrands = null;\r\n      this.currentIndex = -1;\r\n    },\r\n\r\n    setActiveBrands(brands, index) {\r\n      this.currentBrands = brands;\r\n      this.currentIndex = brands ? index : -1;\r\n    },\r\n\r\n    removeAllBrands() {\r\n       BrandsDataService.deleteAll()\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.refreshList();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    \r\n\r\n    getBrandByName(){\r\n         this.retrieveBrands();\r\n         this.pages = [];\r\n\r\n    },\r\n\r\n     deleteBrand() {\r\n      \r\n      BrandsDataService.delete(this.currentBrands.Id)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.$router.push({ name: \"brand\" });\r\n        if (response.data.message = 202){\r\n        this.$router.push({path: \"/brands\"})}\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    }\r\n  },\r\n  mounted() {\r\n    this.retrieveBrands();\r\n  },\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n    <div>\r\n    <h4>Brands</h4>\r\n    </div>\r\n\r\n<div>\r\n    <div class=\"col-lg-6\">\r\n         <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\r\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getBrandByName\" key=\"enter\">search</button>\r\n        \r\n         </div>\r\n    </div>\r\n</div>\r\n<p></p>\r\n  \r\n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Slug</th>\r\n            <th scope=\"col\"></th>\r\n            \r\n            \r\n        \r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr v-for=\"(Brand, index) in Brands\" :key=\"index\">\r\n    \r\n           \r\n            <td>{{ Brand.Id }}</td>\r\n            <td>{{ Brand.Name }}</td>\r\n            <td>{{ Brand.Slug }}</td>\r\n            <td>\r\n                <div class=\"hstack gap-3 flex-wrap\">\r\n                   <router-link :to=\"{name: 'BrandEdit', params: { id: Brand.Id }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\r\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteBrand\"></i></a>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n    <p></p>\r\n</table>\r\n\r\n<div class=\"pagination-wrap hstack gap-2\">\r\n              <a\r\n                class=\"page-item pagination-prev disabled\"\r\n                href=\"#\"\r\n                v-if=\"page != 1\"\r\n                @click=\"setPage((--page))\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <ul class=\"pagination listjs-pagination mb-0\">\r\n                <li\r\n                 :class=\"{\r\n                              active: pageNumber == page,\r\n                              disabled: pageNumber == '...',\r\n                            }\"\r\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\r\n                  :key=\"index\"\r\n                  @click=\"setPage(page = pageNumber)\"\r\n                >\r\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pageNumber)\">{{ pageNumber }}</a>\r\n                </li>\r\n              </ul>\r\n              <a\r\n                class=\"page-item pagination-next\"\r\n                href=\"#\"\r\n                @click=\"setPage(++page)\"\r\n                v-if=\"page < pages.length\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}