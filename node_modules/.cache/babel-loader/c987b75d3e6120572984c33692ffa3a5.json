{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_3 = {\n  class: \"row\"\n};\nvar _hoisted_4 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_7 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_9 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: $data.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-name\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.Warehouse_cell.Name = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.Warehouse_cell.Name]])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t(\"t-slug\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.Warehouse_cell.Slug = $event;\n        }),\n        onKeyup: _cache[2] || (_cache[2] = function () {\n          return $options.Transliteration && $options.Transliteration.apply($options, arguments);\n        })\n      }, null, 544\n      /* HYDRATE_EVENTS, NEED_PATCH */\n      ), [[_vModelText, $data.Warehouse_cell.Slug]])])]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"label\", _hoisted_7, _toDisplayString(_ctx.$t(\"t-Warehouse\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: $data.Warehouse_cell.Warehouse.Id,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n          return $data.Warehouse_cell.Warehouse.Id = $event;\n        }),\n        modelModifiers: {\n          number: true\n        },\n        options: _this.Warehouses\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: $options.addedWarehouse_cell,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Added\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;AAgMUA,OAAK,EAAC;;;AAEKC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;AAKjCA,OAAK,EAAC;;;AAEIC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;8BAK5CE,oBAEQ,GAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;;AAMKF,OAAK,EAAC;;;AACAC,KAAG,EAAC;AAAkBD,OAAK,EAAC;;;8BAMnCE,oBAEI,GAFJ,EAEI,IAFJ,EAEI,IAFJ,EAEI;AAAA;AAFJ;;;AAIMF,OAAK,EAAC;;;;;;;;;;;;;uBAlCdG,aA4CWC,iBA5CX,EA4CW,IA5CX,EA4CW;sBA3CT;AAAA,aAA4C,CAA5CC,aAA4CC,qBAA5C,EAA4C;AAA/BC,aAAK,EAAEC,WAAwB;AAAhBC,aAAK,EAAEC;AAAS,OAA5C;;AAAA,2BAA4C,EAE3CR,oBAKM,KALN,cAKM,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAqE,OAArE,cAAqES,iBAAvBD,QAAE,QAAF,CAAuB,CAArE,EAAgD;AAAA;AAAhD,OAEE,kBADHR,oBAAgG,OAAhG,EAAgG;AAAzFU,YAAI,EAAC,MAAoF;AAA7EZ,aAAK,EAAC,cAAuE;AAAxDa,UAAE,EAAC,YAAqD;AAAxCC,gBAAQ,EAAR,EAAwC;;iBAAtBN,qBAAeO,OAAIC;;AAAG,OAAhG;;AAAA,wBAA0ER,qBAAeO,OACtF,CAHN,CAIC,CALN,CAF2C,EAS1Cb,oBAKK,KALL,cAKK,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAwE,OAAxE,cAAwES,iBAAvBD,QAAE,QAAF,CAAuB,CAAxE,EAAmD;AAAA;AAAnD,OAEE,kBADFR,oBAA0H,OAA1H,EAA0H;AAAnHU,YAAI,EAAC,MAA8G;AAAvGZ,aAAK,EAAC,cAAiG;AAAlFa,UAAE,EAAC,YAA+E;AAAlEC,gBAAQ,EAAR,EAAkE;;iBAAhDN,qBAAeS,OAAID;UAA6B;AAAzBE,eAAK;AAAA,iBAAEC,+EAAF;AAAA;AAAoB,OAA1H;;AAAA,wBAA0EX,qBAAeS,OACvF,CAHN,CAIC,CALL,CAT0C,EAgBhDG,UAhBgD,EAsBhDlB,oBAGM,KAHN,cAGM,CAFFA,oBAA+E,OAA/E,cAA+ES,iBAA5BD,QAAE,aAAF,CAA4B,CAA/E,EAAqD;AAAA;AAArD,OAEE,EADFL,aAAmFgB,kBAAnF,EAAmF;oBAA1Db,qBAAec,SAAf,CAAyBC,EAAiC;;iBAA1Df,qBAAec,SAAf,CAAyBC,KAAEP;UAA+B;wBAA1E;AAAAQ;AAAA,SAA0E;AAA5BC,eAAO,QAAOC;AAAc,OAAnF;;AAAA,kCACE,CAHN,CAtBgD,EA6B5CC,UA7B4C,EAiC3CzB,oBAIM,KAJN,cAIM,CAHNA,oBAES,KAFT,EAES,IAFT,EAES,CADNG,aAAyHuB,mBAAzH,EAAyH;AAA9GC,eAAK,EAAEV,4BAAuG;AAAlFW,eAAO,EAAC,SAA0E;AAAhE9B,aAAK,EAAC;AAA0D,OAAzH;0BAA2F;AAAA,iBAAmB,mCAAhBU,QAAE,SAAF,IAAE;AAAA;WAAc,CAAnB;AAAA;;;;OAA3F;;AAAA,oBACM,CAFT,CAGM,CAJN,CAjC2C,CAA5C;AAAA,MA2CS;;;;AAAA,GA5CX","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_ctx","_toDisplayString","type","id","required","Name","$event","Slug","onKeyup","$options","_hoisted_5","_component_Select2","Warehouse","Id","number","options","Warehouses","_hoisted_8","_component_b_button","onClick","variant"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\warehouse_cells\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport Warehouse_cellDataService from \"/src/services/Warehouse_cellDataService\";\nimport WarehouseDataService from \"/src/services/WarehouseDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового продукта\",\n        Warehouse_cell:{\n        Id: '',\n        Name:\"\",\n        Slug:\"\",\n        Warehouse:{\n          Id:-1,\n          Name:'',\n        },\n        },\n        Warehouses:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                PageNumber: 1,\n                TotalRecords: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n      translit(word){\n      var answer = '';\n      var converter = {\n        'а': 'a',    'б': 'b',    'в': 'v',    'г': 'g',    'д': 'd',\n        'е': 'e',    'ё': 'e',    'ж': 'zh',   'з': 'z',    'и': 'i',\n        'й': 'y',    'к': 'k',    'л': 'l',    'м': 'm',    'н': 'n',\n        'о': 'o',    'п': 'p',    'р': 'r',    'с': 's',    'т': 't',\n        'у': 'u',    'ф': 'f',    'х': 'h',    'ц': 'c',    'ч': 'ch',\n        'ш': 'sh',   'щ': 'sch',  'ь': '',     'ы': 'y',    'ъ': '',\n        'э': 'e',    'ю': 'yu',   'я': 'ya',\n    \n        'А': 'A',    'Б': 'B',    'В': 'V',    'Г': 'G',    'Д': 'D',\n        'Е': 'E',    'Ё': 'E',    'Ж': 'Zh',   'З': 'Z',    'И': 'I',\n        'Й': 'Y',    'К': 'K',    'Л': 'L',    'М': 'M',    'Н': 'N',\n        'О': 'O',    'П': 'P',    'Р': 'R',    'С': 'S',    'Т': 'T',\n        'У': 'U',    'Ф': 'F',    'Х': 'H',    'Ц': 'C',    'Ч': 'Ch',\n        'Ш': 'Sh',   'Щ': 'Sch',  'Ь': '',     'Ы': 'Y',    'Ъ': '',\n        'Э': 'E',    'Ю': 'Yu',   'Я': 'Ya',   ' ': '-'\n      };\n    \n      for (var i = 0; i < word.length; ++i ) {\n        if (converter[word[i]] == undefined){\n          answer += word[i];\n        } else {\n          answer += converter[word[i]];\n        }\n      }\n    \n      return answer;\n    },\n     Transliteration(){\n       \n        this.Warehouse_cell.Slug = this.translit(this.Warehouse_cell.Name);\n\n      },\n    addedWarehouse_cell() {\n      var data = {\n        \"Name\":this.Warehouse_cell.Name,\n        \"Slug\":this.Warehouse_cell.Slug,\n        \"Warehouse\":{\n          \"Id\":parseInt(this.Warehouse_cell.Warehouse.Id),\n          \"Name\":this.Warehouse_cell.Warehouse.Name,\n        },\n      };\n       \n      Warehouse_cellDataService.create(data)\n      \n        .then(response => {\n          this.Warehouse_cell.Id = response.data.id;\n              console.log(\"***********************S\")\n                console.log(response.data)\n          this.submitted = true;\n             if (response.data.message = 200){\n        \n                this.Warehouse_cell.Name = \"\"\n                this.Warehouse_cell.Slug = \"\"\n                this.Warehouse_cell.Warehouse = {\n          Id:-1,\n          Name:'',\n        };\n              \n               console.log(\"***********************S\")\n                console.log(response.data)\n\n        }\n        else{\n        return response.data.message}\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.Warehouse_cell = {};\n    },\n    retrieveWarehouse_cells(){\n      this.jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n            \n\n            WarehouseDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n        console.log('111111111111111111111111111111')\n    console.log(response.data)\n           \n          this.perPage = response.data.pg_length;\n          \n          this.page = response.data.pg_number;\n                \n                console.log(\"========================\")\n                console.log(response.data.List)\n              \n           for(let i = 0; i < response.data.List.length; i++){\n        \n              let currentWarehouses = response.data.List[i];\n           \n              this.Warehouses[i]={\n                \n                id:currentWarehouses.id,\n\n                text:currentWarehouses.name  \n\n              };\n\n           \n\n\n          }\n          //this.Warehouse_cells = response.data.Warehouse_cells;\n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     \n  },\n   mounted() {\n    this.retrieveWarehouse_cells();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Warehouse_cell.Name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Warehouse_cell.Slug\"  @keyup=\"Transliteration\" >\n          </div>                     \n     </div>\n\n<p>\n \n    </p>\n\n \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-Warehouse\") }}</label>\n    <Select2 v-model.number=\"Warehouse_cell.Warehouse.Id\" :options=\"this.Warehouses\" />\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedWarehouse_cell\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}