{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    console.log(this.data());\n    return {\n      Brands: [],\n      currentBrands: null,\n      currentIndex: -1,\n      title: \"\",\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\"\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      this.page = numPage;\n      this.retrieveBrands();\n      console.log(\"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\");\n    },\n    retrieveBrands: function (_retrieveBrands) {\n      function retrieveBrands() {\n        return _retrieveBrands.apply(this, arguments);\n      }\n\n      retrieveBrands.toString = function () {\n        return _retrieveBrands.toString();\n      };\n\n      return retrieveBrands;\n    }(function () {\n      var _this = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n      console.log(retrieveBrands());\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      BrandsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        _this.Brands = response.data.Brands;\n        _this.perPage = response.data.Filter.Pages.pg_length;\n        _this.page = response.data.Filter.Pages.pg_number;\n        var i = 0;\n\n        for (i = 0; i < response.data.Filter.Pages.allpages; i++) {\n          _this.pages[i] = i + 1;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }),\n    refreshList: function refreshList() {\n      this.retrieveBrands();\n      this.currentBrands = null;\n      this.currentIndex = -1;\n    },\n    setActiveBrands: function setActiveBrands(brands, index) {\n      this.currentBrands = brands;\n      this.currentIndex = brands ? index : -1;\n    },\n    removeAllBrands: function removeAllBrands() {\n      var _this2 = this;\n\n      BrandsDataService.deleteAll().then(function (response) {\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getBrandByName: function getBrandByName() {\n      this.retrieveBrands();\n      this.pages = [];\n    },\n    deleteBrand: function deleteBrand(id) {\n      var _this3 = this;\n\n      BrandsDataService.delete(id).then(function (response) {\n        if (response.data.message = 202) {\n          _this3.retrieveBrands();\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","BrandsDataService","page","title","meta","name","content","description","data","console","log","Brands","currentBrands","currentIndex","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","perPage","pages","jsonPages","jsonFields","value","search","components","methods","setPage","numPage","retrieveBrands","pg_number","pg_length","field","getAll","then","response","Filter","Pages","i","allpages","catch","e","refreshList","setActiveBrands","brands","index","removeAllBrands","deleteAll","getBrandByName","deleteBrand","id","delete","message","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\brands\\list.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport BrandsDataService from \"/src/services/BrandsDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n\r\n data() {\r\n   console.log(this.data())\r\n    return {\r\n       \r\n      Brands: [],\r\n      currentBrands: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n\r\n \r\n          PageRequest: {\r\n            Fields: [{\r\n               Name :'',\r\n               Value:'',\r\n               Operation:'',\r\n               Order:'',\r\n            }],\r\n            PageNumber:0,\r\n            PageLenght:0,\r\n            TotalRecords:0,\r\n        },\r\n      page: 1,\r\n      perPage: 7,\r\n      pages: [],\r\n      jsonPages: {\r\n                PageNumber: 0,\r\n                TotalRecords: 0\r\n      },\r\n       jsonFields: [{\r\n                name:'',\r\n                value: ''\r\n      }],\r\n      search:\"\",\r\n    \r\n    }; \r\n       \r\n  },\r\n\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n   methods: {\r\n     \r\n    setPage(numPage){\r\n \r\n        this.page = numPage;\r\n         this.retrieveBrands();\r\n         console.log(\"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\")\r\n    },\r\n    retrieveBrands() {\r\n      this.jsonPages = {\r\n          pg_number:this.page,\r\n          pg_length: this.perPage\r\n      };\r\n   console.log(retrieveBrands())\r\n      if (this.search!=\"\"){\r\n       this.jsonFields = [{\r\n          field:\"name\",\r\n          value: this.search\r\n       }];\r\n       }else{\r\n           this.jsonFields = [];\r\n       }\r\n\r\n\r\n       BrandsDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n         \r\n          this.Brands = response.data.Brands;\r\n          \r\n          this.perPage = response.data.Filter.Pages.pg_length;\r\n          \r\n          this.page = response.data.Filter.Pages.pg_number;\r\n          let i=0;\r\n          for(i=0; i<response.data.Filter.Pages.allpages;i++){\r\n              this.pages[i]=i+1;\r\n          }\r\n\r\n         \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveBrands();\r\n      this.currentBrands = null;\r\n      this.currentIndex = -1;\r\n    },\r\n\r\n    setActiveBrands(brands, index) {\r\n      this.currentBrands = brands;\r\n      this.currentIndex = brands ? index : -1;\r\n    },\r\n\r\n    removeAllBrands() {\r\n       BrandsDataService.deleteAll()\r\n        .then(response => {\r\n         \r\n          this.refreshList();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    \r\n\r\n    getBrandByName(){\r\n         this.retrieveBrands();\r\n         this.pages = [];\r\n     \r\n    },\r\n\r\n     deleteBrand(id) {\r\n     \r\n      BrandsDataService.delete(id)\r\n        .then(response => {\r\n         \r\n         \r\n        if (response.data.message = 202){\r\n        this.retrieveBrands();\r\n        }\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    }\r\n  },\r\n  mounted() {\r\n    this.retrieveBrands();\r\n  },\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n    <div>\r\n    <h4>Brands</h4>\r\n    </div>\r\n\r\n<div>\r\n    <div class=\"col-lg-6\">\r\n         <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\r\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getBrandByName\" key=\"enter\">search</button>\r\n        \r\n         </div>\r\n    </div>\r\n</div>\r\n<p></p>\r\n  \r\n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Slug</th>\r\n            <th scope=\"col\"></th>\r\n            \r\n            \r\n        \r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr v-for=\"(Brand, index) in Brands\" :key=\"index\">\r\n    \r\n           \r\n            <td>{{ Brand.Id }}</td>\r\n            <td>{{ Brand.Name }}</td>\r\n            <td>{{ Brand.Slug }}</td>\r\n            <td>\r\n                <div class=\"hstack gap-3 flex-wrap\">\r\n                   <router-link :to=\"{name: 'BrandEdit', params: { id: Brand.Id }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\r\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteBrand(Brand.Id)\"></i></a>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n    <p></p>\r\n</table>\r\n\r\n<div class=\"pagination-wrap hstack gap-2\">\r\n              <a\r\n                class=\"page-item pagination-prev disabled\"\r\n                href=\"#\"\r\n                v-if=\"page != 1\"\r\n                @click=\"setPage((--page))\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <ul class=\"pagination listjs-pagination mb-0\">\r\n                <li\r\n                 :class=\"{\r\n                              active: pg_number == page,\r\n                              disabled: pg_number == '...',\r\n                            }\"\r\n                  v-for=\"(pg_number, index) in pages.slice(page - 1, page + 5)\"\r\n                  :key=\"index\"\r\n                  @click=\"setPage(page = pg_number)\"\r\n                >\r\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pg_number)\">{{ pg_number }}</a>\r\n                </li>\r\n              </ul>\r\n              <a\r\n                class=\"page-item pagination-next\"\r\n                href=\"#\"\r\n                @click=\"setPage(++page)\"\r\n                v-if=\"page < pages.length\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}