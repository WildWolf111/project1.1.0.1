{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_3 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_4 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: _ctx.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-NumId\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.GTD.num_id = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.GTD.num_id]])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t(\"t-Countries\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: $data.GTD.Country.id,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.GTD.Country.id = $event;\n        }),\n        options: _this.Counties,\n        onSelect: _cache[2] || (_cache[2] = function ($event) {\n          return $options.mySelectEvent($event);\n        })\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: _ctx.updateWarehouse_cell,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Save\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;AAwKUA,OAAK,EAAC;;;AAEKC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;AAQvCA,OAAK,EAAC;;;AACAC,KAAG,EAAC;AAAkBD,OAAK,EAAC;;;8BAKvCE,oBAEQ,GAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;;AAKiBF,OAAK,EAAC;;;;;;;;;;;;;uBAxBrBG,aAkCWC,iBAlCX,EAkCW,IAlCX,EAkCW;sBAjCT;AAAA,aAA4C,CAA5CC,aAA4CC,qBAA5C,EAA4C;AAA/BC,aAAK,EAAEC,UAAwB;AAAhBC,aAAK,EAAED;AAAS,OAA5C;;AAAA,2BAA4C,EAE3CN,oBAKM,KALN,cAKM,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAsE,OAAtE,cAAsEQ,iBAAxBF,QAAE,SAAF,CAAwB,CAAtE,EAAgD;AAAA;AAAhD,OAEE,kBADHN,oBAAwF,OAAxF,EAAwF;AAAjFS,YAAI,EAAC,MAA4E;AAArEX,aAAK,EAAC,cAA+D;AAAhDY,UAAE,EAAC,YAA6C;AAAhCC,gBAAQ,EAAR,EAAgC;;iBAAbC,UAAIC,SAAMC;;AAAG,OAAxF;;AAAA,wBAA2EF,UAAIC,SAC5E,CAHN,CAIC,CALN,CAF2C,EAYhDb,oBAGM,KAHN,cAGM,CAFFA,oBAA+E,OAA/E,cAA+EQ,iBAA5BF,QAAE,aAAF,CAA4B,CAA/E,EAAqD;AAAA;AAArD,OAEE,EADFH,aAA4FY,kBAA5F,EAA4F;oBAA1EH,UAAII,OAAJ,CAAYN,EAA8D;;iBAA1EE,UAAII,OAAJ,CAAYN,KAAEI;UAA4D;AAAzDG,eAAO,QAAOC,QAA2C;AAAhCC,gBAAM;AAAA,iBAAEC,uBAAcN,MAAd,CAAF;AAAA;AAA0B,OAA5F;;AAAA,kCACE,CAHN,CAZgD,EAkBhDO,UAlBgD,EAuBpCrB,oBAKM,KALN,cAKM,CAJFA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFG,aAAyHmB,mBAAzH,EAAyH;AAA9GC,eAAK,EAAEjB,yBAAuG;AAAjFkB,eAAO,EAAC,SAAyE;AAA/D1B,aAAK,EAAC;AAAyD,OAAzH;0BAA4F;AAAA,iBAAkB,mCAAfQ,QAAE,QAAF,IAAE;AAAA;WAAa,CAAlB;AAAA;;;;OAA5F;;AAAA,oBAEE,CAHN,CAIE,CALN,CAvBoC,CAA5C;AAAA,MAiCS;;;;AAAA,GAlCX","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","_ctx","items","_toDisplayString","type","id","required","$data","num_id","$event","_component_Select2","Country","options","Counties","onSelect","$options","_hoisted_5","_component_b_button","onClick","variant"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport GTDDataService from \"/src/services/GTDDataService\";\r\nimport CountryDataService from \"/src/services/CountryDataService\";\r\nimport Select2 from 'vue3-select2-component';\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  data() {\r\n   return {\r\n   \r\n   GTD:{\r\n        \r\n        NumId:\"\",\r\n      \r\n        Country:{\r\n          Id:-1,\r\n          Name:'',\r\n        },\r\n        },\r\n        Countries:[\r\n          {\r\n            id:-1,\r\n            text:\"\"\r\n          }\r\n        ],\r\n         PageRequest: {\r\n            Fields: [{\r\n               Name :'',\r\n               Value:'',\r\n               Operation:'',\r\n               Order:'',\r\n            }],\r\n            PageNumber:0,\r\n            PageLenght:0,\r\n            TotalRecords:0,\r\n            TotalPage:0,\r\n        },\r\n       page: 1,\r\n      perPage: 7,\r\n      pages: [],\r\n      jsonPages: {\r\n                PageNumber: 0,\r\n                TotalRecords:0,\r\n      },\r\n       jsonFields: [{\r\n                name:'',\r\n                value: ''\r\n      }],\r\n      search:\"\",\r\n    \r\n    }; \r\n       \r\n    \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    Select2\r\n  },\r\n    methods: {\r\n    getGTD(id) {\r\n       \r\n      GTDDataService.get(id)\r\n        .then(response => {\r\n         \r\n            console.log(response.data)\r\n            if (response.status == 200){\r\n              this.currentWarehouse_cell = response.data;\r\n            }else{\r\n              this.$router.push({path: \"/gtd\"});\r\n              \r\n            }\r\n          \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    updateGTD() {\r\n        \r\n        this.currentGTD.Country.id = parseInt( this.currentGTD.Country.id);\r\n      GTDDataService.update(this.currentGTD.id, this.currentGTD)\r\n       \r\n        .then(response => {\r\n         \r\n          this.message = 'The Warehouse_cell was updated successfully!';\r\n        if (response.data.status_code == 200){\r\n        this.$router.push({path: \"/gtd\"})}\r\n        else{\r\n        return response.data.message}\r\n        })\r\n        \r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n\r\n   \r\n    \r\n     retrieveCountries() {\r\n     \r\n        this.jsonPages = {\r\n          pg_number:this.page,\r\n          pg_length: this.perPage\r\n      };\r\n\r\n      if (this.search!=\"\"){\r\n       this.jsonFields = [{\r\n          field:\"name\",\r\n          value: this.search\r\n       }];\r\n       }else{\r\n           this.jsonFields = [];\r\n       }\r\n\r\n\r\n       CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n     \r\n\r\n         let i=0;\r\n          for(i=0; i<response.data.total_rec;i++){\r\n               let currentCountry = response.data.List[i];\r\n         console.log(response.data.List),\r\n               this.Countries[i]={\r\n        \r\n                id:currentCountry.id,\r\n                text:currentCountry.name  \r\n                    \r\n              };\r\n          }\r\n      \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n     mySelectEvent({id, text}){\r\n            this.currentGTD.Country.id = id;\r\n            this.currentGTD.Country.name = text;\r\n     }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    \r\n    this.getGTD(this.$route.params.id);\r\n     this.retrieveCountries();\r\n     \r\n    \r\n  }\r\n\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n     <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-NumId\") }}</label>\r\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"GTD.num_id\" >\r\n          </div>                     \r\n     </div> \r\n\r\n  \r\n       \r\n\r\n<div class=\"col-xxl-3 col-md-6\">\r\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-Countries\") }}</label>\r\n    <Select2 v-model=\"GTD.Country.id\" :options=\"this.Counties\" @select=\"mySelectEvent($event)\"/>\r\n</div>\r\n\r\n      \r\n<p>\r\n \r\n    </p>\r\n  \r\n    \r\n            <div class=\"row\">\r\n                <div>\r\n                    <b-button @click=\"updateWarehouse_cell\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \r\n                              \r\n                </div> \r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}