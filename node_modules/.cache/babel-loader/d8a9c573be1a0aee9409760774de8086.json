{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductDataService from \"/src/services/ProductDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'v-select2-component';\nVue.component('Select2', Select2);\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      title: \"Добавление нового продукта\",\n      Product: {\n        id: '',\n        name: \"\",\n        slug: \"\",\n        brand_id: \"\",\n        SKU: \"\",\n        short_description: \"\",\n        full_description: \"\"\n      },\n      Brands: null,\n      jsonPages: {\n        currentpage: 1,\n        countsrecordonpage: 100\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    addedProduct: function addedProduct() {\n      var _this = this;\n\n      var data = {\n        \"name\": this.Product.name,\n        \"slug\": this.Product.slug,\n        \"SKU\": this.Product.SKU,\n        \"short_description\": this.Product.short_description,\n        \"full_description\": this.Product.full_description,\n        \"brands\": this.Brand.Name\n      };\n      console.log(data);\n      ProductDataService.create(data).then(function (response) {\n        _this.Product.id = response.data.id;\n        console.log(response.data);\n        _this.submitted = true;\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    newCompany: function newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands: function retrieveBrands() {\n      var _this2 = this;\n\n      this.jsonPages = {\n        currentpage: 1,\n        countsrecordonpage: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      BrandsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        for (var i = 0; i < length(response.data.Brands); i++) {\n          _this2.Brands[i] = {\n            id: response.data.Brands[i].Id,\n            text: response.data.Brands[i].Name\n          };\n        } //this.Brands = response.data.Brands;\n\n\n        console.log(_this2.Brands);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACAC,GAAG,CAACC,SAAJ,CAAc,SAAd,EAAyBF,OAAzB;AACA,eAAe;AAEbG,MAAI,EAAE;AACJC,SAAK,EAAE,gBADH;AAEJC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEV,SAAS,CAACW;AAA1C,KAAD;AAFF,GAFO;AAMbC,MANa,kBAMN;AACL,WAAO;AACLL,WAAK,EAAE,4BADF;AAEHM,aAAO,EAAC;AACRC,UAAE,EAAE,EADI;AAERL,YAAI,EAAC,EAFG;AAGRM,YAAI,EAAC,EAHG;AAIRC,gBAAQ,EAAC,EAJD;AAKRC,WAAG,EAAC,EALI;AAMRC,yBAAiB,EAAC,EANV;AAORC,wBAAgB,EAAC;AAPT,OAFL;AAWHC,YAAM,EAAC,IAXJ;AAYDC,eAAS,EAAE;AACLC,mBAAW,EAAE,CADR;AAELC,0BAAkB,EAAE;AAFf,OAZV;AAgBJC,gBAAU,EAAE,CAAC;AACJf,YAAI,EAAC,EADD;AAEJgB,aAAK,EAAE;AAFH,OAAD;AAhBR,KAAP;AAuBD,GA9BY;AA+BbC,YAAU,EAAE;AAEV5B,UAAM,EAANA,MAFU;AAGVC,cAAU,EAAVA,UAHU;AAIVI,WAAO,EAAPA;AAJU,GA/BC;AAsCXwB,SAAO,EAAE;AACTC,gBADS,0BACM;AAAA;;AACb,UAAIhB,IAAG,GAAI;AACT,gBAAO,KAAKC,OAAL,CAAaJ,IADX;AAET,gBAAO,KAAKI,OAAL,CAAaE,IAFX;AAGT,eAAM,KAAKF,OAAL,CAAaI,GAHV;AAIT,6BAAoB,KAAKJ,OAAL,CAAaK,iBAJxB;AAKT,4BAAmB,KAAKL,OAAL,CAAaM,gBALvB;AAMT,kBAAU,KAAKU,KAAL,CAAWC;AANZ,OAAX;AASCC,aAAO,CAACC,GAAR,CAAYpB,IAAZ;AACDX,wBAAkB,CAACgC,MAAnB,CAA0BrB,IAA1B,EACGsB,IADH,CACQ,kBAAO,EAAK;AAChB,aAAI,CAACrB,OAAL,CAAaC,EAAb,GAAkBqB,QAAQ,CAACvB,IAAT,CAAcE,EAAhC;AACAiB,eAAO,CAACC,GAAR,CAAYG,QAAQ,CAACvB,IAArB;AACA,aAAI,CAACwB,SAAL,GAAiB,IAAjB;AACD,OALH,EAMGC,KANH,CAMS,aAAK;AACVN,eAAO,CAACC,GAAR,CAAYM,CAAZ;AACD,OARH;AASD,KArBQ;AAuBTC,cAvBS,wBAuBI;AACX,WAAKH,SAAL,GAAiB,KAAjB;AACA,WAAKvB,OAAL,GAAe,EAAf;AACD,KA1BQ;AA2BT2B,kBA3BS,4BA2BO;AAAA;;AACd,WAAKnB,SAAL,GAAiB;AACPC,mBAAW,EAAC,CADL;AAEPC,0BAAkB,EAAE;AAFb,OAAjB;;AAKM,UAAI,KAAKkB,MAAL,IAAa,EAAjB,EAAoB;AACpB,aAAKjB,UAAL,GAAkB,CAAC;AACfkB,eAAK,EAAC,MADS;AAEfjB,eAAK,EAAE,KAAKgB;AAFG,SAAD,CAAlB;AAIC,OALD,MAKK;AACD,aAAKjB,UAAL,GAAkB,EAAlB;AACJ;;AAGLtB,uBAAiB,CAACyC,MAAlB,CAAyB,KAAKnB,UAA9B,EAAyC,EAAzC,EAA4C,KAAKH,SAAjD,EACEa,IADF,CACO,kBAAO,EAAK;AAChB,aAAI,IAAIU,IAAI,CAAZ,EAAeA,IAAIC,MAAM,CAACV,QAAQ,CAACvB,IAAT,CAAcQ,MAAf,CAAzB,EAAiDwB,CAAC,EAAlD,EAAqD;AACjD,gBAAI,CAACxB,MAAL,CAAYwB,CAAZ,IAAe;AAAC9B,cAAE,EAACqB,QAAQ,CAACvB,IAAT,CAAcQ,MAAd,CAAqBwB,CAArB,EAAwBE,EAA5B;AAAgCC,gBAAI,EAACZ,QAAQ,CAACvB,IAAT,CAAcQ,MAAd,CAAqBwB,CAArB,EAAwBd;AAA7D,WAAf;AACJ,SAHgB,CAIhB;;;AAGAC,eAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,MAAjB;AACD,OATF,EAUEiB,KAVF,CAUQ,aAAK;AACVN,eAAO,CAACC,GAAR,CAAYM,CAAZ;AACD,OAZF;AAaF;AAxDQ,GAtCE;AAgGZU,SAhGY,qBAgGF;AACT,SAAKR,cAAL;AACD;AAlGY,CAAf","names":["Layout","PageHeader","appConfig","ProductDataService","BrandsDataService","Select2","Vue","component","page","title","meta","name","content","description","data","Product","id","slug","brand_id","SKU","short_description","full_description","Brands","jsonPages","currentpage","countsrecordonpage","jsonFields","value","components","methods","addedProduct","Brand","Name","console","log","create","then","response","submitted","catch","e","newCompany","retrieveBrands","search","field","getAll","i","length","Id","text","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\products\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductDataService from \"/src/services/ProductDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'v-select2-component';\nVue.component('Select2', Select2);\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового продукта\",\n        Product:{\n        id: '',\n        name:\"\",\n        slug:\"\",\n        brand_id:\"\",\n        SKU:\"\",\n        short_description:\"\",\n        full_description:\"\",\n        },\n        Brands:null,\n          jsonPages: {\n                currentpage: 1,\n                countsrecordonpage: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n\n    Layout,\n    PageHeader,\n    Select2,\n    \n  },\n    methods: {\n    addedProduct() {\n      var data = {\n        \"name\":this.Product.name,\n        \"slug\":this.Product.slug,\n        \"SKU\":this.Product.SKU,\n        \"short_description\":this.Product.short_description,\n        \"full_description\":this.Product.full_description,\n        \"brands\": this.Brand.Name\n        \n      };\n       console.log(data);\n      ProductDataService.create(data)\n        .then(response => {\n          this.Product.id = response.data.id;\n          console.log(response.data);\n          this.submitted = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands(){\n      this.jsonPages = {\n                currentpage:1,\n                countsrecordonpage: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       BrandsDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n          for(let i = 0; i < length(response.data.Brands); i++){\n              this.Brands[i]={id:response.data.Brands[i].Id, text:response.data.Brands[i].Name};\n          }\n          //this.Brands = response.data.Brands;\n          \n\n          console.log(this.Brands);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n  },\n   mounted() {\n    this.retrieveBrands();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.slug\" >\n          </div>                     \n     </div>\n\n    \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-SKU\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.SKU\" >\n          </div>                     \n     </div>\n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\"> {{ $t(\"t-short_description\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.short_description\" >\n          </div>                     \n     </div>  \n\n <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-full_description\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.full_description\" >\n          </div>                     \n  </div>\n<p>\n \n    </p>\n\n <div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-brands\") }}</label>\n    <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Select brand...\" equired v-model=\"Product.brand_id\">\n    <datalist id=\"datalistOptions\">\n\n         <option v-for=\"(Brand, index) in Brands\" :key=\"index\" v-bind:value=\"Brand.Id\">{{ Brand.Name }}</option>\n      \n\n    </datalist>\n</div>\n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-brands\") }}</label>\n    <Select2 v-model=\"brand_id\" :options=\"this.Brands\"  :settings=\"{ settingOption: value, settingOption: value }\"/>\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedProduct\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}