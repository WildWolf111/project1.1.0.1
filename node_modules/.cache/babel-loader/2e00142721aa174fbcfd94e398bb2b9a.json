{"ast":null,"code":"import _objectSpread from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { mapState } from \"vuex\";\nimport { authMethods, authFackMethods, notificationMethods } from \"@/state/helpers\";\nimport appConfig from \"../../../app.config\";\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  components: {},\n  data: function data() {\n    return {\n      user: {\n        login: \"\",\n        password: \"\"\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false\n    };\n  },\n  validations: {\n    user: {\n      login: {\n        required: helpers.withMessage(\"Login is required\", required)\n      },\n      password: {\n        required: helpers.withMessage(\"Password is required\", required)\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(\"authfack\", [\"status\"])), {}, {\n    notification: function notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, authMethods), authFackMethods), notificationMethods), {}, {\n    // Try to register the user in with the email, username\n    // and password they provided.\n    tryToRegisterIn: function tryToRegisterIn() {\n      this.submitted = true; // stop here if form is invalid\n\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        var _this$user = this.user,\n            login = _this$user.login,\n            password = _this$user.password;\n        console.log(this.user);\n      }\n    }\n  })\n};","map":{"version":3,"mappings":";;;AACA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,OAA1B,QAAyC,uBAAzC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,SACEC,WADF,EAEEC,eAFF,EAGEC,mBAHF,QAIO,iBAJP;AAMA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,eAAe;AACXC,OADW,mBACH;AACR,WAAO;AAAEC,QAAE,EAAEP,YAAY;AAAlB,KAAP;AACD,GAHY;AAIbQ,MAAI,EAAE;AACJC,SAAK,EAAE,UADH;AAEJC,QAAI,EAAE,CACJ;AACEC,UAAI,EAAE,aADR;AAEEC,aAAO,EAAEP,SAAS,CAACQ;AAFrB,KADI;AAFF,GAJO;AAabC,YAAU,EAAE,EAbC;AAebC,MAfa,kBAeN;AACL,WAAO;AACLC,UAAI,EAAE;AACJC,aAAK,EAAE,EADH;AAGJC,gBAAQ,EAAE;AAHN,OADD;AAMLC,eAAS,EAAE,KANN;AAOLC,cAAQ,EAAE,IAPL;AAQLC,sBAAgB,EAAE,KARb;AASLC,qBAAe,EAAE,KATZ;AAULC,qBAAe,EAAE;AAVZ,KAAP;AAYD,GA5BY;AA6BbC,aAAW,EAAE;AACXR,QAAI,EAAE;AACJC,WAAK,EAAE;AACLpB,gBAAQ,EAAEE,OAAO,CAAC0B,WAAR,CAAoB,mBAApB,EAAyC5B,QAAzC;AADL,OADH;AAKJqB,cAAQ,EAAE;AACRrB,gBAAQ,EAAEE,OAAO,CAAC0B,WAAR,CAAoB,sBAApB,EAA4C5B,QAA5C;AADF;AALN;AADK,GA7BA;AAwCb6B,UAAQ,kCACHzB,QAAQ,CAAC,UAAD,EAAa,CAAC,QAAD,CAAb,CADL;AAEN0B,gBAFM,0BAES;AACb,aAAO,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,KAAZ,CAAkBF,YAAhC,GAA+C,IAAtD;AACD;AAJK,IAxCK;AA8CbG,SAAO,8DACF5B,WADE,GAEFC,eAFE,GAGFC,mBAHE;AAIL;AACA;AACA2B,mBANK,6BAMa;AAChB,WAAKZ,SAAL,GAAiB,IAAjB,CADgB,CAEhB;;AACA,WAAKZ,EAAL,CAAQyB,MAAR;;AAEA,UAAI,KAAKzB,EAAL,CAAQ0B,QAAZ,EAAsB;AACpB;AACF,OAFA,MAEO;AAEH,yBAA4B,KAAKjB,IAAjC;AAAA,YAAQC,KAAR,cAAQA,KAAR;AAAA,YAAeC,QAAf,cAAeA,QAAf;AACAgB,eAAO,CAACC,GAAR,CAAY,KAAKnB,IAAjB;AAEJ;AACD;AAnBI;AA9CM,CAAf","names":["required","email","helpers","useVuelidate","mapState","authMethods","authFackMethods","notificationMethods","appConfig","setup","v$","page","title","meta","name","content","description","components","data","user","login","password","submitted","regError","tryingToRegister","isRegisterError","registerSuccess","validations","withMessage","computed","notification","$store","state","methods","tryToRegisterIn","$touch","$invalid","console","log"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\account\\register.vue"],"sourcesContent":["<script>\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { mapState } from \"vuex\";\n\nimport {\n  authMethods,\n  authFackMethods,\n  notificationMethods,\n} from \"@/state/helpers\";\n\nimport appConfig from \"../../../app.config\";\n\nexport default {\n    setup() {\n    return { v$: useVuelidate() };\n  },\n  page: {\n    title: \"Register\",\n    meta: [\n      {\n        name: \"description\",\n        content: appConfig.description,\n      },\n    ],\n  },\n  components: {\n  },\n  data() {\n    return {\n      user: {\n        login: \"\",\n\n        password: \"\",\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false,\n    };\n  },\n  validations: {\n    user: {\n      login: {\n        required: helpers.withMessage(\"Login is required\", required),\n      },\n    \n      password: {\n        required: helpers.withMessage(\"Password is required\", required),\n      },\n    },\n  },\n  computed: {\n    ...mapState(\"authfack\", [\"status\"]),\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    },\n  },\n  methods: {\n    ...authMethods,\n    ...authFackMethods,\n    ...notificationMethods,\n    // Try to register the user in with the email, username\n    // and password they provided.\n    tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        \n          const { login, password } = this.user;\n          console.log(this.user)\n        \n      }\n    },\n  },\n}\n</script>\n\n<template>\n    <div class=\"auth-page-wrapper pt-5\">\n            <!-- auth page bg -->\n            <div class=\"auth-one-bg-position auth-one-bg\"  id=\"auth-particles\">\n                <div class=\"bg-overlay\"></div>\n                \n                <div class=\"shape\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 1440 120\">\n                        <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\n                    </svg>\n                </div>\n            </div>\n\n            <!-- auth page content -->\n            <div class=\"auth-page-content\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\n                                <div>\n                                    <router-link to=\"/\" class=\"d-inline-block auth-logo\">\n                                        <img src=\"@/assets/images/logo-light.png\" alt=\"\" height=\"20\">\n                                    </router-link>\n                                </div>\n                                <p class=\"mt-3 fs-15 fw-medium\">Premium Admin & Dashboard Template</p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-md-8 col-lg-6 col-xl-5\">\n                            <div class=\"card mt-4\">\n                            \n                                <div class=\"card-body p-4\"> \n                                    <div class=\"text-center mt-2\">\n                                        <h5 class=\"text-primary\">Create New Account</h5>\n                                        <p class=\"text-muted\">Get your free velzon account now</p>\n                                    </div>\n                                    <div class=\"p-2 mt-4\">\n                                        <form class=\"needs-validation\" @submit.prevent=\"tryToRegisterIn\">\n                                            <b-alert\n                                            v-model=\"registerSuccess\"\n                                            class=\"mt-3\"\n                                            variant=\"success\"\n                                            dismissible\n                                            >Registration successfull.</b-alert\n                                            >\n\n                                            <b-alert\n                                            v-model=\"isRegisterError\"\n                                            class=\"mt-3\"\n                                            variant=\"danger\"\n                                            dismissible\n                                            >{{ regError }}</b-alert\n                                            >\n\n                                            <div\n                                            v-if=\"notification.message\"\n                                            :class=\"'alert ' + notification.type\"\n                                            >\n                                            {{ notification.message }}\n                                            </div>\n                                            \n                                            <div class=\"mb-3\">\n                                                <label for=\"username\" class=\"form-label\">login <span class=\"text-danger\">*</span></label>\n                                                <input type=\"text\" class=\"form-control\" v-model=\"user.login\" \n                                                :class=\"{\n                    'is-invalid': submitted && v$.user.login.$error,\n                  }\" id=\"login\" placeholder=\"Enter login\" required>\n                                                <div\n                  v-if=\"submitted && v$.user.login.$error\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"v$.user.login.required.$message\">{{\n                    v$.user.login.required.$message\n                  }}</span>\n                </div>\n                                            </div>\n                                            \n                                            <div class=\"mb-2\">\n                                                <label for=\"userpassword\" class=\"form-label\">Password <span class=\"text-danger\">*</span></label>\n                                                <input type=\"password\" class=\"form-control\"   v-model=\"user.password\"  :class=\"{\n                    'is-invalid': submitted && v$.user.password.$error,\n                  }\" id=\"userpassword\" placeholder=\"Enter password\" required>\n                                                <div\n                  v-if=\"submitted && v$.user.password.$error\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"v$.user.password.required.$message\">{{\n                    v$.user.password.required.$message\n                  }}</span>\n                </div>    \n                                            </div>\n\n                                            <div class=\"mb-4\">\n                                                <p class=\"mb-0 fs-12 text-muted fst-italic\">By registering you agree to the Velzon <a href=\"#\" class=\"text-primary text-decoration-underline fst-normal fw-medium\">Terms of Use</a></p>\n                                            </div>\n                                            \n                                            <div class=\"mt-4\">\n                                                <button class=\"btn btn-success w-100\" type=\"submit\">Sign Up</button>\n                                            </div>\n\n                                            <div class=\"mt-4 text-center\">\n                                                <div class=\"signin-other-title\">\n                                                    <h5 class=\"fs-13 mb-4 title text-muted\">Create account with</h5>\n                                                </div>\n\n                                                <div>\n                                                    <button type=\"button\" class=\"btn btn-primary btn-icon waves-effect waves-light\"><i class=\"ri-facebook-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-danger btn-icon waves-effect waves-light ms-1\"><i class=\"ri-google-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-dark btn-icon waves-effect waves-light ms-1\"><i class=\"ri-github-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-info btn-icon waves-effect waves-light ms-1\"><i class=\"ri-twitter-fill fs-16\"></i></button>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                                <!-- end card body -->\n                            </div>\n                            <!-- end card -->\n\n                            <div class=\"mt-4 text-center\">\n                                <p class=\"mb-0\">Already have an account ? <router-link to=\"/login\" class=\"fw-semibold text-primary text-decoration-underline\"> Signin </router-link> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n                </div>\n                <!-- end container -->\n            </div>\n            <!-- end auth page content -->\n\n            <!-- footer -->\n            <footer class=\"footer\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center\">\n                                <p class=\"mb-0 text-muted\">&copy; {{new Date().getFullYear()}} Velzon. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n            <!-- end Footer -->\n    </div>\n    <!-- end auth-page-wrapper -->\n</template>"]},"metadata":{},"sourceType":"module"}