{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport UniversalDataService from \"../../services/UniversalDataServise\";\nimport router from \"../../router\";\nexport default {\n  page: {\n    title: \"Brands\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      type: 'countries',\n      list_items: {},\n      title: \"Countries\",\n      Countries: [],\n      currentCountries: null,\n      currentIndex: -1,\n      items: [{\n        text: \"Главная\",\n        href: \"/\"\n      }, {\n        text: \"Countries\",\n        active: true\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    list: function list() {\n      var _this = this;\n\n      UniversalDataService.setPath(this.type);\n      UniversalDataService.list([]).then(function (response) {\n        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n        _this.list_items = response.data.data;\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    remove: function remove(id) {\n      var _this2 = this;\n\n      UniversalDataService.setPath(this.type);\n      UniversalDataService.delete(id).then(function () {\n        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n        _this2.list();\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    edit: function edit(id) {\n      router.push('/' + this.type + '/' + id);\n    }\n  },\n  mounted: function mounted() {\n    this.list();\n  }\n};","map":{"version":3,"mappings":";;AACI,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,SAAP;AACA,OAAO,0BAAP;AAEA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe;AACXC,MAAI,EAAE;AACFC,SAAK,EAAE,QADL;AAEFC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEP,SAAS,CAACQ;AAA1C,KAAD;AAFJ,GADK;AAKXC,MALW,kBAKJ;AACH,WAAO;AACHC,UAAI,EAAC,WADF;AAEHC,gBAAU,EAAC,EAFR;AAGHP,WAAK,EAAE,WAHJ;AAIHQ,eAAS,EAAE,EAJR;AAKHC,sBAAgB,EAAE,IALf;AAMHC,kBAAY,EAAE,CAAC,CANZ;AAOHC,WAAK,EAAE,CACH;AACIC,YAAI,EAAE,SADV;AAEIC,YAAI,EAAE;AAFV,OADG,EAKH;AACID,YAAI,EAAE,WADV;AAEIE,cAAM,EAAE;AAFZ,OALG;AAPJ,KAAP;AAkBH,GAxBU;AAyBXC,YAAU,EAAE;AACRrB,UAAM,EAANA,MADQ;AAERC,cAAU,EAAVA;AAFQ,GAzBD;AA6BXqB,SAAO,EAAC;AAEJC,QAFI,kBAEE;AAAA;;AAEFpB,0BAAoB,CAACqB,OAArB,CAA6B,KAAKZ,IAAlC;AACAT,0BAAoB,CAACoB,IAArB,CAA0B,EAA1B,EACKE,IADL,CACU,kBAAO,EAAK;AAEd;AACA,aAAI,CAACZ,UAAL,GAAkBa,QAAQ,CAACf,IAAT,CAAcA,IAAhC;AACH,OALL,EAMKgB,KANL,CAMW,eAAI,EAAK;AACZ;AACAC,eAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,OATL;AAYH,KAjBG;AAkBJC,UAlBI,kBAkBGC,EAlBH,EAkBM;AAAA;;AACN7B,0BAAoB,CAACqB,OAArB,CAA6B,KAAKZ,IAAlC;AACAT,0BAAoB,CAAC8B,MAArB,CAA4BD,EAA5B,EACKP,IADL,CACU,YAAM;AACR;AACA,cAAI,CAACF,IAAL;AACH,OAJL,EAKKI,KALL,CAKW,eAAI,EAAK;AACZ;AACAC,eAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,OARL;AAUH,KA9BG;AA+BJI,QA/BI,gBA+BCF,EA/BD,EA+BI;AACJ5B,YAAM,CAAC+B,IAAP,CAAY,MAAI,KAAKvB,IAAT,GAAc,GAAd,GAAkBoB,EAA9B;AAEJ;AAlCI,GA7BG;AAmEXI,SAnEW,qBAmED;AACN,SAAKb,IAAL;AACH;AArEU,CAAf","names":["Layout","PageHeader","appConfig","UniversalDataService","router","page","title","meta","name","content","description","data","type","list_items","Countries","currentCountries","currentIndex","items","text","href","active","components","methods","list","setPath","then","response","catch","console","log","error","remove","id","delete","edit","push","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\countries-test\\index.vue"],"sourcesContent":["<script>\r\n    import Layout from \"../../layouts/main.vue\";\r\n    import PageHeader from \"@/components/page-header\";\r\n    import appConfig from \"../../../app.config\";\r\n\r\n    import \"prismjs\";\r\n    import \"prismjs/themes/prism.css\";\r\n\r\n    import UniversalDataService from \"../../services/UniversalDataServise\";\r\n    import router from \"../../router\";\r\n\r\n    export default {\r\n        page: {\r\n            title: \"Brands\",\r\n            meta: [{ name: \"description\", content: appConfig.description }],\r\n        },\r\n        data() {\r\n            return {\r\n                type:'countries',\r\n                list_items:{},\r\n                title: \"Countries\",\r\n                Countries: [],\r\n                currentCountries: null,\r\n                currentIndex: -1,\r\n                items: [\r\n                    {\r\n                        text: \"Главная\",\r\n                        href: \"/\",\r\n                    },\r\n                    {\r\n                        text: \"Countries\",\r\n                        active: true,\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n        components: {\r\n            Layout,\r\n            PageHeader,\r\n        },\r\n        methods:{\r\n\r\n            list(){\r\n\r\n                UniversalDataService.setPath(this.type);\r\n                UniversalDataService.list([])\r\n                    .then(response => {\r\n\r\n                        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\r\n                        this.list_items = response.data.data;\r\n                    })\r\n                    .catch(error => {\r\n                        //dispatch('notification/error', error, { root: true });\r\n                        console.log(error);\r\n                    });\r\n\r\n\r\n            },\r\n            remove(id){\r\n                UniversalDataService.setPath(this.type);\r\n                UniversalDataService.delete(id)\r\n                    .then(() => {\r\n                        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\r\n                        this.list();\r\n                    })\r\n                    .catch(error => {\r\n                        //dispatch('notification/error', error, { root: true });\r\n                        console.log(error);\r\n                    });\r\n\r\n            },\r\n            edit(id){\r\n                router.push('/'+this.type+'/'+id);\r\n\r\n            }\r\n\r\n        },\r\n\r\n        mounted() {\r\n            this.list();\r\n        },\r\n    };\r\n</script>\r\n\r\n<template>\r\n    <Layout>\r\n        <PageHeader :title=\"title\" :items=\"items\"/>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n\r\n\r\n                        <div class=\"live-preview\">\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table align-middle table-nowrap mb-0\">\r\n                                    <thead class=\"table-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">ID</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Code</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr v-for=\"item in list_items\" :key=\"item.id\">\r\n\r\n                                        <td><a href=\"#\" class=\"fw-medium\">{{item.id}}</a></td>\r\n                                        <td>{{item.name}}</td>\r\n                                        <td>{{item.slug}}</td>\r\n                                        <td>{{item.slug}}</td>\r\n                                        <td><a @click=\"edit(item.id)\">edit</a> <a @click=\"remove(item.id)\">delete</a></td>\r\n                                    </tr>\r\n\r\n                                    </tbody>\r\n\r\n                                </table>\r\n                                <!-- end table -->\r\n                            </div>\r\n                            <!-- end table responsive -->\r\n                        </div>\r\n\r\n            </div>\r\n            <!-- end col -->\r\n        </div>\r\n        <!--end row-->\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}