{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { authHeader } from './auth-header';\nimport axios from 'axios';\nexport var userService = {\n  login: login,\n  logout: logout,\n  register: register,\n  getAll: getAll\n};\n\nfunction login(email, password) {\n  var data = {\n    login_user: email,\n    password_user: password\n  };\n  console.log(data);\n  return axios.post('/api/v2/users/auth', data).then(handleResponse).then(function (data) {\n    console.log('--------');\n    return data;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction register(user) {\n  var requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(\"/users/register\", requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n  var requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(\"/users\", requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text(text).then(function (text) {\n    console.log(text);\n    var data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        location.reload(true);\n      }\n\n      var error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/src/helpers/authservice/user.service.js"],"names":["authHeader","axios","userService","login","logout","register","getAll","email","password","data","login_user","password_user","console","log","post","then","handleResponse","localStorage","removeItem","user","requestOptions","method","headers","body","JSON","stringify","fetch","response","text","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,QAAQ,EAARA,QAHuB;AAIvBC,EAAAA,MAAM,EAANA;AAJuB,CAApB;;AAOP,SAASH,KAAT,CAAeI,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,MAAIC,IAAI,GAAG;AACPC,IAAAA,UAAU,EAAEH,KADL;AAEPI,IAAAA,aAAa,EAAEH;AAFR,GAAX;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAGA,SAAOR,KAAK,CAACa,IAAN,CAAW,oBAAX,EAAiCL,IAAjC,EACFM,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAACN,IAAD,EAAU;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,WAAOJ,IAAP;AAEH,GAPE,CAAP;AAQH;;AAGD,SAASL,MAAT,GAAkB;AACd;AACAa,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASb,QAAT,CAAkBc,IAAlB,EAAwB;AACpB,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHa,GAAvB;AAKA,SAAOO,KAAK,oBAAoBN,cAApB,CAAL,CAAyCL,IAAzC,CAA8CC,cAA9C,CAAP;AACH;;AAED,SAASV,MAAT,GAAkB;AACd,MAAMc,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEtB,UAAU;AAFA,GAAvB;AAIA,SAAO0B,KAAK,WAAWN,cAAX,CAAL,CAAgCL,IAAhC,CAAqCC,cAArC,CAAP;AACH;;AAGD,SAASA,cAAT,CAAwBW,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,CAAcA,IAAd,EAAoBb,IAApB,CAAyB,UAAAa,IAAI,EAAI;AACpChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACA,QAAMnB,IAAI,GAAGmB,IAAI,IAAIJ,IAAI,CAACK,KAAL,CAAWD,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACG,EAAd,EAAkB;AACd,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACA3B,QAAAA,MAAM;AACN4B,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AACD,UAAMC,KAAK,GAAIzB,IAAI,IAAIA,IAAI,CAAC0B,OAAd,IAA0BR,QAAQ,CAACS,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAOzB,IAAP;AACH,GAbM,CAAP;AAcH","sourcesContent":["import { authHeader } from './auth-header';\r\nimport axios from 'axios'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n};\r\n\r\nfunction login(email, password) {\r\n    var data = {\r\n        login_user: email,\r\n        password_user: password,\r\n    };\r\n\r\n    console.log(data)\r\n\r\n\r\n    return axios.post('/api/v2/users/auth', data)\r\n        .then(handleResponse)\r\n        .then((data) => {\r\n            console.log('--------')\r\n\r\n            return data;\r\n\r\n        });\r\n}\r\n\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n    return fetch(`/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n    return fetch(`/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n    return response.text(text).then(text => {\r\n        console.log(text)\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                location.reload(true);\r\n            }\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}