{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\",\n      type_list: 'products/list',\n      //(это часть URL-list)\n      main_type: 'products',\n      //(это часть URL)\n      list_items: [],\n      title: \"Roles\",\n      items: [{\n        text: \"Главная\",\n        href: \"/\"\n      }, {\n        text: \"roles\",\n        active: true\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      console.log(this.setPage);\n      this.page = numPage;\n      this.retrieveProducts();\n    },\n    retrieveProducts: function retrieveProducts() {\n      var _this = this;\n\n      console.log(\"*******************\");\n      console.log(this.page);\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      ProductsDataService.getAll(this.jsonPages).then(function (response) {\n        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n        _this.list_items = response.data.List;\n        console.log(response.data.List);\n        _this.perPage = response.data.pg_length;\n        _this.page = response.data.pg_number;\n        var i = 0;\n\n        for (i = 0; i < response.data.total_pg; i++) {\n          _this.pages[i] = i + 1;\n        }\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    edit: function edit(id) {\n      router.push('/' + this.main_type + '/' + id);\n    },\n    remove: function remove(id) {\n      var _this2 = this;\n\n      ProductsDataService.delete(id).then(function () {\n        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n        _this2.retrieveProducts();\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveProducts();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","ProductsDataService","page","title","meta","name","content","description","data","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","jsonFields","value","search","type_list","main_type","list_items","items","text","href","active","components","methods","setPage","numPage","console","log","retrieveProducts","pg_number","pg_length","field","getAll","then","response","List","i","total_pg","catch","error","edit","id","router","push","remove","delete","mounted"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\products\\list.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductsDataService from \"/src/services/ProductsDataService\";\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  \n data() {\n    return {\n\n\n      PageRequest: {\n                        Fields: [{\n                        Name :'',\n                        Value:'',\n                        Operation:'',\n                        Order:'',\n                        }],\n                        PageNumber:0,\n                        PageLenght:0,\n                        TotalRecords:0,\n                        TotalPage:0,\n                    },\n                page: 1,\n                perPage: 7,\n                pages: [],\n                jsonPages: {\n                            PageNumber: 0,\n                            TotalRecords:0,\n                },\n                jsonFields: [{\n                            name:'',\n                            value: ''\n                }],\n\n                search:\"\",\n\n                type_list:'products/list',//(это часть URL-list)\n                main_type:'products',//(это часть URL)\n                list_items:[],\n                title: \"Roles\",\n                items: [\n                    {\n                        text: \"Главная\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"roles\",\n                        active: true,\n                    },\n   \n                ]}; \n       \n  },\n\n  components: {\n    Layout,\n    PageHeader,\n  },\n   methods: {\n    setPage(numPage){\n console.log(this.setPage)\n        this.page = numPage;\n         this.retrieveProducts();\n        \n    },\n    retrieveProducts() {\n         console.log(\"*******************\")\n          console.log(this.page)\n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n\n       ProductsDataService.getAll(this.jsonPages)\n       .then(response => {\n\n                    //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n                    this.list_items = response.data.List;\n\n                    console.log(response.data.List)\n\n                    this.perPage = response.data.pg_length;\n\n                    this.page = response.data.pg_number;\n\n                    let i=0;\n                    for(i=0; i<response.data.total_pg;i++){\n                    this.pages[i]=i+1;}\n                    })\n                    .catch(error => {\n                    //dispatch('notification/error', error, { root: true });\n                    console.log(error);\n                    });\n\n    },\n    edit(id){\n                router.push('/'+this.main_type+'/'+id);\n\n            },\n            remove(id){\n                \n                ProductsDataService.delete(id)\n                    .then(() => {\n                        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n                        this.retrieveProducts();\n                    })\n                    .catch(error => {\n                        //dispatch('notification/error', error, { root: true });\n                        console.log(error);\n                    });\n\n            },\n  },\n  mounted() {\n    this.retrieveProducts();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n    <div>\n    <h4>Products</h4>\n    </div>\n\n<div>\n    <div class=\"col-lg-6\">\n         <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getProductByName\" key=\"enter\">search</button>\n        \n         </div>\n    </div>\n</div>\n<p></p>\n  \n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Slug</th>\n            <th scope=\"col\">Brand</th>\n            <th scope=\"col\">SKU</th>\n            <th scope=\"col\">Short_description</th>\n            <th scope=\"col\"></th>\n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"item in list_items\" :key=\"item.id\">\n    \n           \n            <td>{{ item.id }}</td>\n            <td>{{ item.name }}</td>\n            <td>{{ item.slug }}</td>\n            <td>{{ item.Brand.name}}</td>\n            <td>{{ item.SKU}}</td>\n            <td>{{ item.short_description}}</td>\n           \n            \n            <td>\n                <div class=\"hstack gap-3 flex-wrap\">\n                    <router-link :to=\"{name: 'ProductEdit', params: { id: item.id }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteProduct(item.id)\"></i></a>\n                </div>\n            </td>\n        </tr>\n       \n    </tbody>\n    <p></p>\n</table>\n\n<div class=\"pagination-wrap hstack gap-2\">\n              <a\n                class=\"page-item pagination-prev disabled\"\n                href=\"#\"\n                v-if=\"page != 1\"\n                @click=\"setPage((--page))\"\n              >\n                Previous\n              </a>\n              <ul class=\"pagination listjs-pagination mb-0\">\n                <li\n                 :class=\"{\n                              active: pageNumber == page,\n                              disabled: pageNumber == '...',\n                            }\"\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\n                  :key=\"index\"\n                  @click=\"setPage(page = pageNumber)\"\n                >\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pageNumber)\">{{ pageNumber }}</a>\n                </li>\n              </ul>\n              <a\n                class=\"page-item pagination-next\"\n                href=\"#\"\n                @click=\"setPage(++page)\"\n                v-if=\"page < pages.length\"\n              >\n                Next\n              </a>\n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}