{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_3 = {\n  class: \"row\"\n};\nvar _hoisted_4 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_5 = {\n  class: \"row\"\n};\nvar _hoisted_6 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_7 = {\n  class: \"row\"\n};\nvar _hoisted_8 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_9 = {\n  class: \"row\"\n};\nvar _hoisted_10 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_11 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_12 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_13 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_14 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: _ctx.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-name\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.currentGTD.Name = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.currentGTD.Name]])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t(\"t-slug\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.currentGTD.Slug = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.currentGTD.Slug]])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t(\"t-SKU\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.currentGTD.SKU = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.currentGTD.SKU]])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_8, _toDisplayString(_ctx.$t(\"t-short_description\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n          return $data.currentGTD.short_description = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.currentGTD.short_description]])])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_10, _toDisplayString(_ctx.$t(\"t-full_description\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"Text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return $data.currentGTD.full_description = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.currentGTD.full_description]])])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"label\", _hoisted_12, _toDisplayString(_ctx.$t(\"t-brands\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: $data.currentGTD.Country.Id,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n          return $data.currentGTD.Country.Id = $event;\n        }),\n        options: _this.Countries,\n        onSelect: _cache[6] || (_cache[6] = function ($event) {\n          return $options.mySelectEvent($event);\n        })\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_13, _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: $options.updateGTD,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Save\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":"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","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","_ctx","items","_toDisplayString","type","id","required","$data","Name","$event","Slug","SKU","short_description","full_description","_component_Select2","Country","Id","options","Countries","onSelect","$options","_hoisted_13","_component_b_button","onClick","variant"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n   return {\n      currentGTD:{\n          Id:-1,\n          Name:\"\",\n          Slug:\"\",\n          SKU:\"\",\n          short_description:\"\",\n          full_description:\"\",\n          Country:{\n            Id:-1,\n          },\n      },\n      message: '',\n        Countries:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n        selectCountry:\n          {\n            id:-1,\n            text:\"\"\n          }\n        ,\n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    getGTD(id) {\n       \n       GTDDataService.get(id)\n        .then(response => {\n         \n            console.log(response.data)\n            if (response.status == 200){\n              this.currentGTD = response.data;\n            }else{\n              this.$router.push({path: \"/gtds\"});\n              \n            }\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    updateGTD() {\n        \n        this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.Id);\n       GTDDataService.update(this.currentGTD.Id, this.currentGTD)\n       \n        .then(response => {\n         \n          this.message = 'The GTD was updated successfully!';\n        if (response.data.status_code == 200){\n        this.$router.push({path: \"/gtds\"})}\n        else{\n        return response.data.message}\n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n\n    deleteGTD() {\n      \n      GTDDataService.delete(this.currentGTD.Id)\n        .then(response => {\n         \n          this.$router.push({ name: \"gtd\" });\n        if (response.status == 202){\n        this.$router.push({path: \"/gtds\"})}\n        else{\n        return response.data.message}\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n    \n       retrieveCountries(){\n        \n      this. jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n          console.log(response.data);\n          for(let i = 0; i < response.data.List.length; i++){\n            console.log(\"<<<<<<<<<<>>>>>>>>>>>>\")\n            console.log(response.data.List.length)\n              let currentCountry = response.data.List[i];\n            if (currentCountry.Id == this.currentGTD.Country.Id){\n                this.selectCountry.id = currentCountry.Id;\n                this.selectCountry.text = currentCountry.Name;\n            }\n              this.Countries[i]={\n                id:currentCountry.Id, \n                text:currentCountry.Name\n              };\n              \n          }\n          //this.Countries = response.data.Countries;\n        \n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     mySelectEvent({id, text}){\n            this.currentGTD.Country.Id = id;\n            this.currentGTD.Country.Name = text;\n     }\n  },\n  mounted() {\n    this.message = '';\n    \n    this.getGTD(this.$route.params.id);\n     this.retrieveCountries();\n     \n    \n  }\n\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentGTD.Name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentGTD.Slug\" >\n          </div>                     \n     </div>\n        <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-SKU\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentGTD.SKU\" >\n          </div>                     \n     </div>\n           <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\"> {{ $t(\"t-short_description\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentGTD.short_description\" >\n          </div>                     \n     </div>  \n\n <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-full_description\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentGTD.full_description\" >\n          </div>                     \n  </div>\n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-brands\") }}</label>\n    <Select2 v-model=\"currentGTD.Country.Id\" :options=\"this.Countries\" @select=\"mySelectEvent($event)\"/>\n</div>\n\n      \n<p>\n \n    </p>\n  \n    \n            <div class=\"row\">\n                <div>\n                    <b-button @click=\"updateGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \n                              \n                </div> \n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}