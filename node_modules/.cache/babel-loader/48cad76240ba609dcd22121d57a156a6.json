{"ast":null,"code":"import _defineProperty from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport CategoriesDataService from \"/src/services/CategoriesDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      Brands: [],\n      currentBrands: null,\n      currentIndex: -1,\n      title: \"\",\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\",\n      type_list: 'categories/list',\n      //(это часть URL-list)\n      main_type: 'categories',\n      //(это часть URL)\n      list_items: []\n    }, _defineProperty(_ref, \"title\", \"categories\"), _defineProperty(_ref, \"items\", [{\n      text: \"Главная\",\n      href: \"/\"\n    }, {\n      text: \"categories\",\n      active: true\n    }]), _ref;\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      console.log(this.setPage);\n      this.page = numPage;\n      this.retrieveBrands();\n    },\n    retrieveBrands: function retrieveBrands() {\n      var _this = this;\n\n      console.log(\"*******************\");\n      console.log(this.page);\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      UniversalDataService.setPath(this.type_list);\n      UniversalDataService.list(this.jsonPages).then(function (response) {\n        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n        _this.list_items = response.data.List;\n        console.log(response.data.List);\n        _this.perPage = response.data.pg_length;\n        _this.page = response.data.pg_number;\n        var i = 0;\n\n        for (i = 0; i < response.data.total_pg; i++) {\n          _this.pages[i] = i + 1;\n        }\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveCategories();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","CategoriesDataService","page","title","meta","name","content","description","data","Brands","currentBrands","currentIndex","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","jsonFields","value","search","type_list","main_type","list_items","text","href","active","components","methods","setPage","numPage","console","log","retrieveBrands","pg_number","pg_length","field","UniversalDataService","setPath","list","then","response","List","i","total_pg","catch","error","mounted","retrieveCategories"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\categories\\list.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport CategoriesDataService from \"/src/services/CategoriesDataService\";\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  \n  data() {\n    return {\n       \n      Brands: [],\n      currentBrands: null,\n      currentIndex: -1,\n      title: \"\",\n\n \n         PageRequest: {\n            Fields: [{\n               Name :'',\n               Value:'',\n               Operation:'',\n               Order:'',\n            }],\n            PageNumber:0,\n            PageLenght:0,\n            TotalRecords:0,\n            TotalPage:0,\n        },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n                PageNumber: 0,\n                TotalRecords:0,\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n      search:\"\",\n                type_list:'categories/list',//(это часть URL-list)\n                main_type:'categories',//(это часть URL)\n                list_items:[],\n                title: \"categories\",\n                items: [\n                    {\n                        text: \"Главная\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"categories\",\n                        active: true,\n                    },\n   \n                ]};\n    \n       \n  },\n\n  components: {\n    Layout,\n    PageHeader,\n  },\n  methods: {\n    setPage(numPage){\n console.log(this.setPage)\n        this.page = numPage;\n         this.retrieveBrands();\n        \n    },\n    retrieveBrands() {\n         console.log(\"*******************\")\n          console.log(this.page)\n        this.jsonPages = {\n          pg_number:this.page,\n          pg_length: this.perPage\n      };\n\n      if (this.search!=\"\"){\n       this.jsonFields = [{\n          field:\"name\",\n          value: this.search\n       }];\n       }else{\n           this.jsonFields = [];\n       }\n\n       UniversalDataService.setPath(this.type_list)\n       UniversalDataService.list(this.jsonPages)\n       .then(response => {\n\n                    //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n                    this.list_items = response.data.List;\n\n                    console.log(response.data.List)\n\n                    this.perPage = response.data.pg_length;\n\n                    this.page = response.data.pg_number;\n\n                    let i=0;\n                    for(i=0; i<response.data.total_pg;i++){\n                    this.pages[i]=i+1;}\n                    })\n                    .catch(error => {\n                    //dispatch('notification/error', error, { root: true });\n                    console.log(error);\n                    });\n\n    },\n  },\n  mounted() {\n    this.retrieveCategories();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n    <div>\n    <h4>Categories</h4>\n    </div>\n\n<div>\n    <div class=\"col-lg-6\">\n         <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getCategoryByName\" key=\"enter\">search</button>\n        \n         </div>\n    </div>\n</div>\n<p></p>\n  \n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Slug</th>\n    \n            <th scope=\"col\"></th>\n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n        <tr v-for=\"item  in list_items\" :key=\"item.id\">\n    \n           \n            <td>{{ Category.id }}</td>\n            <td>{{ Category.name }}</td>\n            <td>{{ Category.slug }}</td>\n           \n            \n            <td>\n                <div class=\"hstack gap-3 flex-wrap\">\n                   <router-link :to=\"{name: 'CategoriesEdit', params: { id: Category.id }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteCategory(Category.id)\"></i></a>\n                </div>\n            </td>\n        </tr>\n       \n    </tbody>\n    <p></p>\n</table>\n\n<div class=\"pagination-wrap hstack gap-2\">\n              <a\n                class=\"page-item pagination-prev disabled\"\n                href=\"#\"\n                v-if=\"page != 1\"\n                @click=\"setPage((--page))\"\n              >\n                Previous\n              </a>\n              <ul class=\"pagination listjs-pagination mb-0\">\n                <li\n                 :class=\"{\n                              active: pageNumber == page,\n                              disabled: pageNumber == '...',\n                            }\"\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\n                  :key=\"index\"\n                  @click=\"setPage(page = pageNumber)\"\n                >\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pageNumber)\">{{ pageNumber }}</a>\n                </li>\n              </ul>\n              <a\n                class=\"page-item pagination-next\"\n                href=\"#\"\n                @click=\"setPage(++page)\"\n                v-if=\"page < pages.length\"\n              >\n                Next\n              </a>\n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}