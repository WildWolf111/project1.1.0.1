{"ast":null,"code":"import _objectSpread from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport { mapState } from \"vuex\";\nimport { authMethods, authFackMethods, notificationMethods } from \"@/state/helpers\";\nimport appConfig from \"../../../app.config\";\nexport default {\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  components: {},\n  data: function data() {\n    return {\n      user: {\n        id: \"\",\n        login: \"\",\n        password: \"\",\n        role: \"\"\n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(\"authfack\", [\"status\"])), {}, {\n    notification: function notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, authMethods), authFackMethods), notificationMethods), {}, {\n    // Try to register the user in with the email, username\n    // and password they provided.\n    tryToRegisterIn: function tryToRegisterIn() {\n      var _this = this;\n\n      this.submitted = true; // stop here if form is invalid\n\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\n          this.tryingToRegister = true; // Reset the regError if it existed.\n\n          this.regError = null;\n          return this.register({\n            username: this.user.username,\n            email: this.user.email,\n            password: this.user.password\n          }) // eslint-disable-next-line no-unused-vars\n          .then(function (token) {\n            _this.tryingToRegister = false;\n            _this.isRegisterError = false;\n            _this.registerSuccess = true;\n\n            if (_this.registerSuccess) {\n              _this.$router.push(_this.$route.query.redirectFrom || {\n                name: \"default\"\n              });\n            }\n          }).catch(function (error) {\n            _this.tryingToRegister = false;\n            _this.regError = error ? error : \"\";\n            _this.isRegisterError = true;\n          });\n        } else if (process.env.VUE_APP_DEFAULT_AUTH === \"fakebackend\") {\n          var _this$user = this.user,\n              _email = _this$user.email,\n              username = _this$user.username,\n              password = _this$user.password;\n\n          if (_email && username && password) {\n            this.registeruser(this.user);\n          }\n        }\n      }\n    }\n  })\n};","map":{"version":3,"mappings":"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","names":["required","email","helpers","mapState","authMethods","authFackMethods","notificationMethods","appConfig","page","title","meta","name","content","description","components","data","user","id","login","password","role","submitted","regError","tryingToRegister","isRegisterError","registerSuccess","computed","notification","$store","state","methods","tryToRegisterIn","v$","$touch","$invalid","process","env","VUE_APP_DEFAULT_AUTH","register","username","then","token","$router","push","$route","query","redirectFrom","catch","error","registeruser"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\account\\register.vue"],"sourcesContent":["<script>\nimport { required, email, helpers } from \"@vuelidate/validators\";\nimport { mapState } from \"vuex\";\n\nimport {\n  authMethods,\n  authFackMethods,\n  notificationMethods,\n} from \"@/state/helpers\";\n\nimport appConfig from \"../../../app.config\";\n\nexport default {\n  \n  page: {\n    title: \"Register\",\n    meta: [\n      {\n        name: \"description\",\n        content: appConfig.description,\n      },\n    ],\n  },\n  components: {\n  },\n  data() {\n    return {\n      user: {\n        id: \"\",\n        login: \"\",\n        password: \"\",\n         role: \"\",\n        \n      },\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false,\n    };\n  },\n  \n  computed: {\n    ...mapState(\"authfack\", [\"status\"]),\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    },\n  },\n  methods: {\n    ...authMethods,\n    ...authFackMethods,\n    ...notificationMethods,\n    // Try to register the user in with the email, username\n    // and password they provided.\n    tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        if (process.env.VUE_APP_DEFAULT_AUTH === \"firebase\") {\n          this.tryingToRegister = true;\n          // Reset the regError if it existed.\n          this.regError = null;\n          return (\n            this.register({\n              username: this.user.username,\n              email: this.user.email,\n              password: this.user.password,\n            })\n              // eslint-disable-next-line no-unused-vars\n              .then((token) => {\n                this.tryingToRegister = false;\n                this.isRegisterError = false;\n                this.registerSuccess = true;\n                if (this.registerSuccess) {\n                  this.$router.push(\n                    this.$route.query.redirectFrom || {\n                      name: \"default\",\n                    }\n                  );\n                }\n              })\n              .catch((error) => {\n                this.tryingToRegister = false;\n                this.regError = error ? error : \"\";\n                this.isRegisterError = true;\n              })\n          );\n        } else if (process.env.VUE_APP_DEFAULT_AUTH === \"fakebackend\") {\n          const { email, username, password } = this.user;\n          if (email && username && password) {\n            this.registeruser(this.user);\n          }\n        } \n      }\n    },\n  },\n}\n</script>\n\n<template>\n    <div class=\"auth-page-wrapper pt-5\">\n            <!-- auth page bg -->\n            <div class=\"auth-one-bg-position auth-one-bg\"  id=\"auth-particles\">\n                <div class=\"bg-overlay\"></div>\n                \n                <div class=\"shape\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 1440 120\">\n                        <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\n                    </svg>\n                </div>\n            </div>\n\n            <!-- auth page content -->\n            <div class=\"auth-page-content\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\n                                <div>\n                                    <router-link to=\"/\" class=\"d-inline-block auth-logo\">\n                                        <img src=\"@/assets/images/logo-light.png\" alt=\"\" height=\"20\">\n                                    </router-link>\n                                </div>\n                                <p class=\"mt-3 fs-15 fw-medium\">Premium Admin & Dashboard Template</p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-md-8 col-lg-6 col-xl-5\">\n                            <div class=\"card mt-4\">\n                            \n                                <div class=\"card-body p-4\"> \n                                    <div class=\"text-center mt-2\">\n                                        <h5 class=\"text-primary\">Create New Account</h5>\n                                        <p class=\"text-muted\">Get your free velzon account now</p>\n                                    </div>\n                                    <div class=\"p-2 mt-4\">\n                                        <form class=\"needs-validation\" @submit.prevent=\"tryToRegisterIn\">\n                                            <b-alert\n                                            v-model=\"registerSuccess\"\n                                            class=\"mt-3\"\n                                            variant=\"success\"\n                                            dismissible\n                                            >Registration successfull.</b-alert\n                                            >\n\n                                            <b-alert\n                                            v-model=\"isRegisterError\"\n                                            class=\"mt-3\"\n                                            variant=\"danger\"\n                                            dismissible\n                                            >{{ regError }}</b-alert\n                                            >\n\n                                            <div\n                                            v-if=\"notification.message\"\n                                            :class=\"'alert ' + notification.type\"\n                                            >\n                                            {{ notification.message }}\n                                            </div>\n                                            <div class=\"mb-3\">\n                                                <label for=\"useremail\" class=\"form-label\">Email <span class=\"text-danger\">*</span></label>\n                                                <input type=\"email\" class=\"form-control\"  v-model=\"user.email\" id=\"useremail\"\n                                                  :class=\"{\n                    'is-invalid': submitted && v$.user.email.$error,\n                  }\"  placeholder=\"Enter email address\" required>  \n                                               <div\n                  v-for=\"(item, index) in v$.user.email.$errors\"\n                  :key=\"index\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"item.$message\">{{ item.$message }}</span>\n                </div>   \n                                            </div>\n                                            <div class=\"mb-3\">\n                                                <label for=\"username\" class=\"form-label\">Username <span class=\"text-danger\">*</span></label>\n                                                <input type=\"text\" class=\"form-control\" v-model=\"user.username\" \n                                                :class=\"{\n                    'is-invalid': submitted && v$.user.username.$error,\n                  }\" id=\"username\" placeholder=\"Enter username\" required>\n                                                <div\n                  v-if=\"submitted && v$.user.username.$error\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"v$.user.username.required.$message\">{{\n                    v$.user.username.required.$message\n                  }}</span>\n                </div>\n                                            </div>\n                                            \n                                            <div class=\"mb-2\">\n                                                <label for=\"userpassword\" class=\"form-label\">Password <span class=\"text-danger\">*</span></label>\n                                                <input type=\"password\" class=\"form-control\"   v-model=\"user.password\"  :class=\"{\n                    'is-invalid': submitted && v$.user.password.$error,\n                  }\" id=\"userpassword\" placeholder=\"Enter password\" required>\n                                                <div\n                  v-if=\"submitted && v$.user.password.$error\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"v$.user.password.required.$message\">{{\n                    v$.user.password.required.$message\n                  }}</span>\n                </div>    \n                                            </div>\n\n                                            <div class=\"mb-4\">\n                                                <p class=\"mb-0 fs-12 text-muted fst-italic\">By registering you agree to the Velzon <a href=\"#\" class=\"text-primary text-decoration-underline fst-normal fw-medium\">Terms of Use</a></p>\n                                            </div>\n                                            \n                                            <div class=\"mt-4\">\n                                                <button class=\"btn btn-success w-100\" type=\"submit\">Sign Up</button>\n                                            </div>\n\n                                            <div class=\"mt-4 text-center\">\n                                                <div class=\"signin-other-title\">\n                                                    <h5 class=\"fs-13 mb-4 title text-muted\">Create account with</h5>\n                                                </div>\n\n                                                <div>\n                                                    <button type=\"button\" class=\"btn btn-primary btn-icon waves-effect waves-light\"><i class=\"ri-facebook-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-danger btn-icon waves-effect waves-light ms-1\"><i class=\"ri-google-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-dark btn-icon waves-effect waves-light ms-1\"><i class=\"ri-github-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-info btn-icon waves-effect waves-light ms-1\"><i class=\"ri-twitter-fill fs-16\"></i></button>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                                <!-- end card body -->\n                            </div>\n                            <!-- end card -->\n\n                            <div class=\"mt-4 text-center\">\n                                <p class=\"mb-0\">Already have an account ? <router-link to=\"/login\" class=\"fw-semibold text-primary text-decoration-underline\"> Signin </router-link> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n                </div>\n                <!-- end container -->\n            </div>\n            <!-- end auth page content -->\n\n            <!-- footer -->\n            <footer class=\"footer\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center\">\n                                <p class=\"mb-0 text-muted\">&copy; {{new Date().getFullYear()}} Velzon. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n            <!-- end Footer -->\n    </div>\n    <!-- end auth-page-wrapper -->\n</template>"]},"metadata":{},"sourceType":"module"}