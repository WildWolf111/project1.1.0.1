{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      currentCompany: {\n        Id: 0,\n        Name: \"\",\n        Slug: \"\",\n        INN: 0,\n        KPP: 0,\n        IsInternal: false\n      },\n      message: '',\n      send: {\n        Id: 0,\n        Name: \"\",\n        Slug: \"\",\n        INN: 0,\n        KPP: 0,\n        IsInternal: false\n      }\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    getCompany: function getCompany(id) {\n      var _this = this;\n\n      CompaniesDataService.get(id).then(function (response) {\n        console.log(response.data);\n\n        if (response.status === 200) {\n          _this.currentCompany = response.data;\n        } else {\n          _this.$router.push({\n            path: \"/companies\"\n          });\n        }\n\n        console.log('---------------------------------');\n        console.log(response);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateCompany: function updateCompany() {\n      var _this2 = this;\n\n      send = {\n        Name: this.currentCompany.Name,\n        Slug: this.currentCompany.Slug,\n        IsInternal: this.currentCompany.IsInternal,\n        INN: parseInt(this.currentCompany.INN),\n        KPP: parseInt(this.currentCompany.KPP)\n      };\n      console.log(send);\n      CompaniesDataService.update(this.currentCompany.id, send).then(function (response) {\n        _this2.message = 'The Company was updated successfully!';\n\n        if (response.data.status_code == 200) {\n          _this2.$router.push({\n            path: \"/companies\"\n          });\n        } else {\n          return response.data.message;\n        }\n\n        console.log(response.data);\n        console.log(_this2.currentCompany);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deleteCompany: function deleteCompany() {\n      var _this3 = this;\n\n      CompaniesDataService.delete(this.currentCompany.Id).then(function (response) {\n        _this3.$router.push({\n          name: \"company\"\n        });\n\n        if (response.status == 202) {\n          _this3.$router.push({\n            path: \"/companies\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.message = '';\n    this.getCompany(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AAEA,eAAe;AAEbC,MAAI,EAAE;AACJC,SAAK,EAAE,gBADH;AAEJC,QAAI,EAAE,CAAC;AAAEC,UAAI,EAAE,aAAR;AAAuBC,aAAO,EAAEN,SAAS,CAACO;AAA1C,KAAD;AAFF,GAFO;AAMbC,MANa,kBAMN;AACN,WAAO;AACJC,oBAAc,EAAC;AACbC,UAAE,EAAC,CADU;AAEbC,YAAI,EAAC,EAFQ;AAGbC,YAAI,EAAC,EAHQ;AAIbC,WAAG,EAAC,CAJS;AAKbC,WAAG,EAAC,CALS;AAMbC,kBAAU,EAAC;AANE,OADX;AAUJC,aAAO,EAAE,EAVL;AAWJC,UAAI,EAAC;AACHP,UAAE,EAAC,CADA;AAEHC,YAAI,EAAC,EAFF;AAGHC,YAAI,EAAC,EAHF;AAIHC,WAAG,EAAC,CAJD;AAKHC,WAAG,EAAC,CALD;AAMHC,kBAAU,EAAC;AANR;AAXD,KAAP;AAsBA,GA7BY;AA8BbG,YAAU,EAAE;AACVpB,UAAM,EAANA,MADU;AAEVC,cAAU,EAAVA;AAFU,GA9BC;AAkCXoB,SAAO,EAAE;AACTC,cADS,sBACEC,EADF,EACM;AAAA;;AAEZpB,0BAAoB,CAACqB,GAArB,CAAyBD,EAAzB,EACEE,IADF,CACO,kBAAO,EAAK;AACdC,eAAO,CAACC,GAAR,CAAYC,QAAQ,CAAClB,IAArB;;AACA,YAAIkB,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,eAAI,CAAClB,cAAL,GAAsBiB,QAAQ,CAAClB,IAA/B;AACD,SAFD,MAEK;AACH,eAAI,CAACoB,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAEF;;AACAN,eAAO,CAACC,GAAR,CAAY,mCAAZ;AACDD,eAAO,CAACC,GAAR,CAAYC,QAAZ;AACF,OAXF,EAYEK,KAZF,CAYQ,aAAK;AACVP,eAAO,CAACC,GAAR,CAAYO,CAAZ;AACD,OAdF;AAeF,KAlBQ;AAoBTC,iBApBS,2BAoBO;AAAA;;AACbhB,UAAG,GAAI;AACLN,YAAI,EAAC,KAAKF,cAAL,CAAoBE,IADpB;AAELC,YAAI,EAAC,KAAKH,cAAL,CAAoBG,IAFpB;AAGLG,kBAAU,EAAC,KAAKN,cAAL,CAAoBM,UAH1B;AAILF,WAAG,EAACqB,QAAQ,CAAC,KAAKzB,cAAL,CAAoBI,GAArB,CAJP;AAKLC,WAAG,EAACoB,QAAQ,CAAC,KAAKzB,cAAL,CAAoBK,GAArB;AALP,OAAP;AAQAU,aAAO,CAACC,GAAR,CAAYR,IAAZ;AACAhB,0BAAoB,CAACkC,MAArB,CAA4B,KAAK1B,cAAL,CAAoBY,EAAhD,EAAoDJ,IAApD,EAEEM,IAFF,CAEO,kBAAO,EAAK;AAEhB,cAAI,CAACP,OAAL,GAAe,uCAAf;;AACF,YAAIU,QAAQ,CAAClB,IAAT,CAAc4B,WAAd,IAA6B,GAAjC,EAAqC;AACrC,gBAAI,CAACR,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAAuC,SADvC,MAEI;AACJ,iBAAOJ,QAAQ,CAAClB,IAAT,CAAcQ,OAArB;AAA4B;;AAC5BQ,eAAO,CAACC,GAAR,CAAYC,QAAQ,CAAClB,IAArB;AACAgB,eAAO,CAACC,GAAR,CAAY,MAAI,CAAChB,cAAjB;AACC,OAXF,EAaEsB,KAbF,CAaQ,aAAK;AACVP,eAAO,CAACC,GAAR,CAAYO,CAAZ;AACD,OAfF;AAiBF,KA/CQ;AAiDTK,iBAjDS,2BAiDO;AAAA;;AAEdpC,0BAAoB,CAACqC,MAArB,CAA4B,KAAK7B,cAAL,CAAoBC,EAAhD,EACGa,IADH,CACQ,kBAAO,EAAK;AAEhB,cAAI,CAACK,OAAL,CAAaC,IAAb,CAAkB;AAAExB,cAAI,EAAE;AAAR,SAAlB;;AACF,YAAIqB,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA2B;AAC3B,gBAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB;AAACC,gBAAI,EAAE;AAAP,WAAlB;AAAuC,SADvC,MAEI;AACJ,iBAAOJ,QAAQ,CAAClB,IAAT,CAAcQ,OAArB;AAA4B;AAE3B,OATH,EAUGe,KAVH,CAUS,aAAK;AACVP,eAAO,CAACC,GAAR,CAAYO,CAAZ;AACD,OAZH;AAcF;AAjES,GAlCE;AAqGbO,SArGa,qBAqGH;AACR,SAAKvB,OAAL,GAAe,EAAf;AAEA,SAAKI,UAAL,CAAgB,KAAKoB,MAAL,CAAYC,MAAZ,CAAmBpB,EAAnC;AACF;AAzGa,CAAf","names":["Layout","PageHeader","appConfig","CompaniesDataService","page","title","meta","name","content","description","data","currentCompany","Id","Name","Slug","INN","KPP","IsInternal","message","send","components","methods","getCompany","id","get","then","console","log","response","status","$router","push","path","catch","e","updateCompany","parseInt","update","status_code","deleteCompany","delete","mounted","$route","params"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\companies\\edit.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  data() {\r\n   return {\r\n      currentCompany:{\r\n        Id:0,\r\n        Name:\"\",\r\n        Slug:\"\",\r\n        INN:0,\r\n        KPP:0,\r\n        IsInternal:false,\r\n        \r\n        },\r\n      message: '',\r\n      send:{\r\n        Id:0,\r\n        Name:\"\",\r\n        Slug:\"\",\r\n        INN:0,\r\n        KPP:0,\r\n        IsInternal:false,\r\n        \r\n        },\r\n    };\r\n    \r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n    methods: {\r\n    getCompany(id) {\r\n \r\n       CompaniesDataService.get(id)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if (response.status === 200){\r\n              this.currentCompany = response.data;\r\n            }else{\r\n              this.$router.push({path: \"/companies\"});\r\n              \r\n            }\r\n            console.log('---------------------------------')\r\n           console.log(response)\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    updateCompany() {\r\n       send = {\r\n         Name:this.currentCompany.Name,\r\n         Slug:this.currentCompany.Slug,\r\n         IsInternal:this.currentCompany.IsInternal,\r\n         INN:parseInt(this.currentCompany.INN),\r\n         KPP:parseInt(this.currentCompany.KPP),\r\n       }\r\n\r\n       console.log(send);\r\n       CompaniesDataService.update(this.currentCompany.id, send)\r\n       \r\n        .then(response => {\r\n       \r\n          this.message = 'The Company was updated successfully!';\r\n        if (response.data.status_code == 200){\r\n        this.$router.push({path: \"/companies\"})}\r\n        else{\r\n        return response.data.message}\r\n        console.log(response.data)\r\n        console.log(this.currentCompany)\r\n        })\r\n       \r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    },\r\n\r\n    deleteCompany() {\r\n      \r\n      CompaniesDataService.delete(this.currentCompany.Id)\r\n        .then(response => {\r\n      \r\n          this.$router.push({ name: \"company\" });\r\n        if (response.status == 202){\r\n        this.$router.push({path: \"/companies\"})}\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    \r\n    this.getCompany(this.$route.params.id);\r\n  }\r\n\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n     <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\r\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentCompany.name\" >\r\n          </div>                     \r\n     </div> \r\n\r\n      <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\r\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentCompany.slug\" >\r\n          </div>                     \r\n     </div>\r\n       <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-inn\") }}</label>\r\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentCompany.inn\" >\r\n          </div>                     \r\n     </div>\r\n       <div class=\"row\">\r\n          <div>\r\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-kpp\") }}</label>\r\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"currentCompany.kpp\" >\r\n          </div>                     \r\n     </div>\r\n\r\n      <div class=\"row\">\r\n          <div>\r\n                <div class=\"form-check form-switch form-switch-lg\" dir=\"ltr\">\r\n                  <label class=\"form-check-label\" for=\"SwitchCheck3\">   {{ $t(\"t-Internal\") }}</label>\r\n                  <input type=\"hidden\" class=\"form-check-input\" role=\"switch\" id=\"SwitchCheck3\" v-model=\"currentCompany.IsInternal\"/>\r\n                  <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"SwitchCheck3\" checked required v-model=\"currentCompany.IsInternal\">\r\n                </div>\r\n          </div>                     \r\n      </div> \r\n\r\n\r\n\r\n\r\n<p>\r\n \r\n    </p>\r\n  \r\n    \r\n            <div class=\"row\">\r\n                <div>\r\n                    <b-button @click=\"updateCompany\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \r\n                              \r\n                </div> \r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}