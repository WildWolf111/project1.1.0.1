{"ast":null,"code":"import _objectSpread from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { required, helpers, email, minLength, sameAs } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { mapState } from \"vuex\";\nimport RegistrateDataService from \"/src/services/RegistrateDataService\";\nimport { authMethods, authFackMethods, notificationMethods } from \"@/state/helpers\";\nimport appConfig from \"../../../app.config\";\nimport mailboxVue from \"../apps/mailbox.vue\";\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  page: {\n    title: \"Register\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  components: {},\n  data: function data() {\n    return {\n      login: \"\",\n      role: -1,\n      password: \"\",\n      name: \"\",\n      surname: \"\",\n      middlename: \"\",\n      email: \"\",\n      password_check: \"\",\n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false\n    };\n  },\n  validations: {\n    login: {\n      required: helpers.withMessage(\"Login is required\", required)\n    },\n    password: {\n      required: required,\n      minLength: minLength(6)\n    },\n    password_check: {\n      sameAsPassword: sameAs('password')\n    },\n    name: {\n      required: helpers.withMessage(\"Name is required\", required)\n    },\n    surname: {\n      required: helpers.withMessage(\"surname is required\", required)\n    },\n    email: {\n      required: helpers.withMessage(\"Password is required\", required, email)\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(\"authfack\", [\"status\"])), {}, {\n    notification: function notification() {\n      return this.$store ? this.$store.state.notification : null;\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, authMethods), authFackMethods), notificationMethods), {}, {\n    PasswordCheck: function PasswordCheck() {\n      if (this.password != this.password_check) {\n        console.log(\"Passwords don't match\");\n      } else {\n        this.addedUser();\n      }\n    },\n    addedUser: function addedUser() {\n      var _this = this;\n\n      var data = {\n        \"login_user\": this.login,\n        \"password_user\": this.password,\n        \"name_user\": this.name,\n        \"midlenmae_user\": this.middlename,\n        \"surname_user\": this.surname,\n        \"email_user\": this.email\n      };\n      console.log(data);\n      RegistrateDataService.create(data).then(function (response) {\n        _this.id = response.data.id;\n        console.log(response.data);\n        var login = _this.login;\n        var password = _this.password;\n\n        _this.loginF({\n          login: login,\n          password: password\n        });\n\n        _this.submitted = true;\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    newUser: function newUser() {\n      this.submitted = false;\n      this.user = {};\n    }\n  }),\n  // Try to register the user in with the email, username\n  // and password they provided.\n  tryToRegisterIn: function tryToRegisterIn() {\n    this.submitted = true; // stop here if form is invalid\n\n    this.v$.$touch();\n\n    if (this.v$.$invalid) {\n      return;\n    } else {\n      this.role = 1;\n      console.log(this.user);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["required","helpers","email","minLength","sameAs","useVuelidate","mapState","RegistrateDataService","authMethods","authFackMethods","notificationMethods","appConfig","mailboxVue","setup","v$","page","title","meta","name","content","description","components","data","login","role","password","surname","middlename","password_check","submitted","regError","tryingToRegister","isRegisterError","registerSuccess","validations","withMessage","sameAsPassword","computed","notification","$store","state","methods","PasswordCheck","console","log","addedUser","create","then","id","response","loginF","catch","e","newUser","user","tryToRegisterIn","$touch","$invalid"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\account\\register.vue"],"sourcesContent":["<script>\nimport { required,  helpers, email, minLength, sameAs,  } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { mapState } from \"vuex\";\nimport RegistrateDataService from \"/src/services/RegistrateDataService\";\n\n\n\nimport {\n  authMethods,\n  authFackMethods,\n  notificationMethods,\n} from \"@/state/helpers\";\n\nimport appConfig from \"../../../app.config\";\nimport mailboxVue from \"../apps/mailbox.vue\";\n\nexport default {\n    setup() {\n    return { v$: useVuelidate() };\n  },\n  page: {\n    title: \"Register\",\n    meta: [\n      {\n        name: \"description\",\n        content: appConfig.description,\n      },\n    ],\n  },\n  components: {\n  },\n  data() {\n    return {\n      \n        login: \"\",\n        role:-1,\n        password: \"\",\n        name: \"\",\n        surname:\"\",\n        middlename: \"\",\n        email:\"\",\n        password_check:\"\",\n     \n      submitted: false,\n      regError: null,\n      tryingToRegister: false,\n      isRegisterError: false,\n      registerSuccess: false,\n    };\n  },\n  validations: {\n    \n      login: {\n        required: helpers.withMessage(\"Login is required\", required),\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      },\n      password_check: {\n        sameAsPassword: sameAs('password')\n      },\n        name: {\n          required: helpers.withMessage(\"Name is required\", required),\n        },\n        surname: {\n          required: helpers.withMessage(\"surname is required\", required),\n        },\n        email: {\n          required: helpers.withMessage(\"Password is required\", required, email),\n        },\n    \n  },\n  computed: {\n    ...mapState(\"authfack\", [\"status\"]),\n    notification() {\n      return this.$store ? this.$store.state.notification : null;\n    },\n  },\n  methods: {\n    ...authMethods,\n    ...authFackMethods,\n    ...notificationMethods,\n       PasswordCheck(){\n         \n         if (this.password != this.password_check){\n            console.log( \"Passwords don't match\")}\n         else{\n           \n           this.addedUser()}\n         },\n      \n    addedUser() {\n      var data = {\n        \"login_user\":this.login,\n        \"password_user\":this.password,\n        \"name_user\":this.name,\n        \"midlenmae_user\":this.middlename,\n        \"surname_user\":this.surname,\n        \"email_user\":this.email,\n        \n      };\n       console.log(data);\n      RegistrateDataService.create(data)\n        .then(response => {\n          this.id = response.data.id;\n          console.log(response.data);\n            \n            \n            const login = this.login;\n              const password =this.password;\n            this.loginF({\n              login,\n              password,\n            });\n          this.submitted = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newUser() {\n      this.submitted = false;\n      this.user = {};\n    }\n  },\n    // Try to register the user in with the email, username\n    // and password they provided.\n    tryToRegisterIn() {\n      this.submitted = true;\n      // stop here if form is invalid\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        \n     this.role=1;\n          console.log(this.user)\n        \n      }\n    },\n    \n          \n       } \n\n</script>\n\n<template>\n    <div class=\"auth-page-wrapper pt-5\">\n            <!-- auth page bg -->\n            <div class=\"auth-one-bg-position auth-one-bg\"  id=\"auth-particles\">\n                <div class=\"bg-overlay\"></div>\n                \n                <div class=\"shape\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 1440 120\">\n                        <path d=\"M 0,36 C 144,53.6 432,123.2 720,124 C 1008,124.8 1296,56.8 1440,40L1440 140L0 140z\"></path>\n                    </svg>\n                </div>\n            </div>\n\n            <!-- auth page content -->\n            <div class=\"auth-page-content\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center mt-sm-5 mb-4 text-white-50\">\n                                <div>\n                                    <router-link to=\"/\" class=\"d-inline-block auth-logo\">\n                                        <img src=\"@/assets/images/logo-light.png\" alt=\"\" height=\"20\">\n                                    </router-link>\n                                </div>\n                                <p class=\"mt-3 fs-15 fw-medium\">Premium Admin & Dashboard Template</p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-md-8 col-lg-6 col-xl-5\">\n                            <div class=\"card mt-4\">\n                            \n                                <div class=\"card-body p-4\"> \n                                    <div class=\"text-center mt-2\">\n                                        <h5 class=\"text-primary\">Create New Account</h5>\n                                        <p class=\"text-muted\">Get your free velzon account now</p>\n                                    </div>\n                                    <div class=\"p-2 mt-4\">\n                                        <form class=\"needs-validation\" @submit.prevent=\"tryToRegisterIn\">\n                                            <b-alert\n                                            v-model=\"registerSuccess\"\n                                            class=\"mt-3\"\n                                            variant=\"success\"\n                                            dismissible\n                                            >Registration successfull.</b-alert\n                                            >\n\n                                            <b-alert\n                                            v-model=\"isRegisterError\"\n                                            class=\"mt-3\"\n                                            variant=\"danger\"\n                                            dismissible\n                                            >{{ regError }}</b-alert\n                                            >\n\n                                            <div\n                                            v-if=\"notification.message\"\n                                            :class=\"'alert ' + notification.type\"\n                                            >\n                                            {{ notification.message }}\n                                            </div>\n                                            \n                                            \n\n\n\n                                            <div class=\"mb-3\">\n                                                <label for=\"username\" class=\"form-label\">login <span class=\"text-danger\">*</span></label>\n                                                <input type=\"text\" class=\"form-control\" v-model=\"user.login\" \n                                                :class=\"{\n                    'is-invalid': submitted && v$.login.$error,\n                  }\" id=\"login\" placeholder=\"Enter login\" required>\n                                                <div\n                  v-if=\"submitted && v$.login.$error\"\n                  class=\"invalid-feedback\"\n                >\n                  <span v-if=\"v$password_chlogin.required.$message\">{{\n                    v$.login.required.$message\n                  }}</span>\n                </div>\n                                            </div>\n                                            \n                            <div  class=\"mb-2\">\n                              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.password.$error }\">\n                                <label class=\"form-label\">Password</label>\n                                <input class=\"form-control\" v-model=\"user.password\" v-model.trim=\"$v.password.$model\"/>\n                              </div>\n                              <div class=\"error\" v-if=\"!$v.password.required\">Password is required.</div>\n                              <div class=\"error\" v-if=\"!$v.password.minLength\">Password must have at least {{ $v.password.$params.minLength.min }} letters.</div>\n                              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.password_check.$error }\">\n                                <label class=\"form-label\">Repeat password</label>\n                                <input class=\"form-control\" v-model=\"user.password_check\" v-model.trim=\"$v.password_check.$model\"/>\n                              </div>\n                              <div class=\"error\" v-if=\"!$v.password_check.sameAsPassword\">Passwords must be identical.</div>\n                              <tree-view :data=\"$v\" :options=\"{rootObjectKey: '$v', maxDepth: 2}\"></tree-view>\n                            </div>\n                                                      \n                          \n                          \n                          \n                          <div class=\"mb-2\">\n                              <label for=\"text\" class=\"form-label\">{{\"t-Name\"}} <span class=\"text-danger\">*</span></label>\n                              <input type=\"text\" class=\"form-control\"   v-model=\"user.name\" placeholder=\"Enter Name\" >\n                          </div>\n\n                          <div class=\"mb-2\">\n                              <label for=\"text\" class=\"form-label\">{{\"t-MiddleName\"}} <span class=\"text-danger\">*</span></label>\n                              <input type=\"text\" class=\"form-control\"   v-model=\"user.midlename\" placeholder=\"Enter MiddleName\" >\n                          </div>\n\n                           <div class=\"mb-2\">\n                              <label for=\"text\" class=\"form-label\">{{\"t-SurName\"}} <span class=\"text-danger\">*</span></label>\n                              <input type=\"text\" class=\"form-control\"   v-model=\"user.surname\" placeholder=\"Enter SurName\" >\n                          </div>\n\n                          <div class=\"mb-2\">\n                              <label for=\"text\" class=\"form-label\">{{\"t-Email\"}} <span class=\"text-danger\">*</span></label>\n                              <input type=\"text\" class=\"form-control\"   v-model=\"user.email\" placeholder=\"Enter email\" >\n                          </div>\n\n\n\n\n                                            <div class=\"mb-4\">\n                                                <p class=\"mb-0 fs-12 text-muted fst-italic\">By registering you agree to the Velzon <a href=\"#\" class=\"text-primary text-decoration-underline fst-normal fw-medium\">Terms of Use</a></p>\n                                            </div>\n                                            \n                                            <div class=\"mt-4\">\n                                                <button @click=\"PasswordCheck\" class=\"btn btn-success w-100\" type=\"submit\">Sign Up</button>\n                                            </div>\n\n                                            <div class=\"mt-4 text-center\">\n                                                <div class=\"signin-other-title\">\n                                                    <h5 class=\"fs-13 mb-4 title text-muted\">Create account with</h5>\n                                                </div>\n\n                                                <div>\n                                                    <button type=\"button\" class=\"btn btn-primary btn-icon waves-effect waves-light\"><i class=\"ri-facebook-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-danger btn-icon waves-effect waves-light ms-1\"><i class=\"ri-google-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-dark btn-icon waves-effect waves-light ms-1\"><i class=\"ri-github-fill fs-16\"></i></button>\n                                                    <button type=\"button\" class=\"btn btn-info btn-icon waves-effect waves-light ms-1\"><i class=\"ri-twitter-fill fs-16\"></i></button>\n                                                </div>\n                                            </div>\n                                        </form>\n\n                                    </div>\n                                </div>\n                                <!-- end card body -->\n                            </div>\n                            <!-- end card -->\n\n                            <div class=\"mt-4 text-center\">\n                                <p class=\"mb-0\">Already have an account ? <router-link to=\"/login\" class=\"fw-semibold text-primary text-decoration-underline\"> Signin </router-link> </p>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- end row -->\n                </div>\n                <!-- end container -->\n            </div>\n            <!-- end auth page content -->\n\n            <!-- footer -->\n            <footer class=\"footer\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"text-center\">\n                                <p class=\"mb-0 text-muted\">&copy; {{new Date().getFullYear()}} Velzon. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n            <!-- end Footer -->\n    </div>\n    <!-- end auth-page-wrapper -->\n</template>"]},"metadata":{},"sourceType":"module"}