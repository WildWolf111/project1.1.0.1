{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/Max/Desktop/project1.0.0-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport $ from 'jquery';\nimport 'select2/dist/js/select2.full';\nimport 'select2/dist/css/select2.min.css';\nexport default {\n  name: 'Select2',\n  data: function data() {\n    return {\n      select2: null\n    };\n  },\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: [String, Array],\n    // previously was `value: String`\n    id: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    settings: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    options: {\n      handler: function handler(val) {\n        this.setOption(val);\n      },\n      deep: true\n    },\n    modelValue: {\n      handler: function handler(val) {\n        this.setValue(val);\n      },\n      deep: true\n    }\n  },\n  methods: {\n    setOption: function setOption() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.select2.empty();\n      this.select2.select2(_objectSpread(_objectSpread({\n        placeholder: this.placeholder\n      }, this.settings), {}, {\n        data: val\n      }));\n      this.setValue(this.modelValue);\n    },\n    setValue: function setValue(val) {\n      if (val instanceof Array) {\n        this.select2.val(_toConsumableArray(val));\n      } else {\n        this.select2.val([val]);\n      }\n\n      this.select2.trigger('change');\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.select2 = $(this.$el).find('select').select2(_objectSpread(_objectSpread({\n      placeholder: this.placeholder\n    }, this.settings), {}, {\n      data: this.options\n    })).on('select2:select select2:unselect', function (ev) {\n      _this.$emit('update:modelValue', _this.select2.val());\n\n      _this.$emit('select', ev['params']['data']);\n    });\n    this.setValue(this.modelValue);\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.select2.select2('destroy');\n  }\n};","map":{"version":3,"mappings":";;;;AAOA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAO,8BAAP;AACA,OAAO,kCAAP;AAEA,eAAe;AACbC,MAAI,EAAE,SADO;AAEbC,MAFa,kBAEN;AACL,WAAO;AACLC,aAAO,EAAE;AADJ,KAAP;AAGD,GANY;AAObC,OAAK,EAAE,CAAC,mBAAD,CAPM;AAQbC,OAAK,EAAE;AACLC,cAAU,EAAE,CAACC,MAAD,EAASC,KAAT,CADP;AACwB;AAC7BC,MAAE,EAAE;AACFC,UAAI,EAAEH,MADJ;AAEFI,aAAO,EAAE;AAFP,KAFC;AAMLV,QAAI,EAAE;AACJS,UAAI,EAAEH,MADF;AAEJI,aAAO,EAAE;AAFL,KAND;AAULC,eAAW,EAAE;AACXF,UAAI,EAAEH,MADK;AAEXI,aAAO,EAAE;AAFE,KAVR;AAcLE,WAAO,EAAE;AACPH,UAAI,EAAEF,KADC;AAEPG,aAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAFF,KAdJ;AAkBLG,YAAQ,EAAE;AACRJ,UAAI,EAAEK,OADE;AAERJ,aAAO,EAAE;AAFD,KAlBL;AAsBLK,YAAQ,EAAE;AACRN,UAAI,EAAEK,OADE;AAERJ,aAAO,EAAE;AAFD,KAtBL;AA0BLM,YAAQ,EAAE;AACRP,UAAI,EAAEQ,MADE;AAERP,aAAO,EAAE,oBAAM,CAAC;AAFR;AA1BL,GARM;AAuCbQ,OAAK,EAAE;AACLN,WAAO,EAAE;AACPO,aADO,mBACCC,GADD,EACM;AACX,aAAKC,SAAL,CAAeD,GAAf;AACD,OAHM;AAIPE,UAAI,EAAE;AAJC,KADJ;AAOLjB,cAAU,EAAE;AACVc,aADU,mBACFC,GADE,EACG;AACX,aAAKG,QAAL,CAAcH,GAAd;AACD,OAHS;AAIVE,UAAI,EAAE;AAJI;AAPP,GAvCM;AAqDbE,SAAO,EAAE;AACPH,aADO,uBACa;AAAA,UAAVD,GAAU,uEAAJ,EAAI;AAClB,WAAKlB,OAAL,CAAauB,KAAb;AACA,WAAKvB,OAAL,CAAaA,OAAb;AACES,mBAAW,EAAE,KAAKA;AADpB,SAEK,KAAKK,QAFV;AAGEf,YAAI,EAAEmB;AAHR;AAKA,WAAKG,QAAL,CAAc,KAAKlB,UAAnB;AACD,KATM;AAUPkB,YAVO,oBAUEH,GAVF,EAUO;AACZ,UAAIA,GAAE,YAAab,KAAnB,EAA0B;AACxB,aAAKL,OAAL,CAAakB,GAAb,oBAAqBA,GAArB;AACF,OAFA,MAEO;AACL,aAAKlB,OAAL,CAAakB,GAAb,CAAiB,CAACA,GAAD,CAAjB;AACF;;AACA,WAAKlB,OAAL,CAAawB,OAAb,CAAqB,QAArB;AACF;AAjBO,GArDI;AAwEbC,SAxEa,qBAwEH;AAAA;;AACR,SAAKzB,OAAL,GAAeH,CAAC,CAAC,KAAK6B,GAAN,CAAD,CACZC,IADY,CACP,QADO,EAEZ3B,OAFY;AAGXS,iBAAW,EAAE,KAAKA;AAHP,OAIR,KAAKK,QAJG;AAKXf,UAAI,EAAE,KAAKW;AALA,QAOZkB,EAPY,CAOT,iCAPS,EAO0B,YAAC,EAAK;AAC3C,WAAI,CAACC,KAAL,CAAW,mBAAX,EAAgC,KAAI,CAAC7B,OAAL,CAAakB,GAAb,EAAhC;;AACA,WAAI,CAACW,KAAL,CAAW,QAAX,EAAqBC,EAAE,CAAC,QAAD,CAAF,CAAa,MAAb,CAArB;AACD,KAVY,CAAf;AAWA,SAAKT,QAAL,CAAc,KAAKlB,UAAnB;AACD,GArFY;AAsFb4B,eAtFa,2BAsFG;AACd,SAAK/B,OAAL,CAAaA,OAAb,CAAqB,SAArB;AACF;AAxFa,CAAf","names":["$","name","data","select2","emits","props","modelValue","String","Array","id","type","default","placeholder","options","disabled","Boolean","required","settings","Object","watch","handler","val","setOption","deep","setValue","methods","empty","trigger","mounted","$el","find","on","$emit","ev","beforeUnmount"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\node_modules\\vue3-select2-component\\src\\Select2.vue"],"sourcesContent":["<template>\n  <div>\n    <select class=\"form-control\" :id=\"id\" :name=\"name\" :disabled=\"disabled\" :required=\"required\"></select>\n  </div>\n</template>\n\n<script>\nimport $ from 'jquery';\nimport 'select2/dist/js/select2.full';\nimport 'select2/dist/css/select2.min.css'\n\nexport default {\n  name: 'Select2',\n  data() {\n    return {\n      select2: null\n    };\n  },\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: [String, Array], // previously was `value: String`\n    id: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: () => []\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    settings: {\n      type: Object,\n      default: () => {}\n    },\n  },\n  watch: {\n    options: {\n      handler(val) {\n        this.setOption(val);\n      },\n      deep: true\n    },\n    modelValue: {\n      handler(val) {\n        this.setValue(val);\n      },\n      deep: true\n    },\n  },\n  methods: {\n    setOption(val = []) {\n      this.select2.empty();\n      this.select2.select2({\n        placeholder: this.placeholder,\n        ...this.settings,\n        data: val\n      });\n      this.setValue(this.modelValue);\n    },\n    setValue(val) {\n      if (val instanceof Array) {\n        this.select2.val([...val]);\n      } else {\n        this.select2.val([val]);\n      }\n      this.select2.trigger('change');\n    }\n  },\n  mounted() {\n    this.select2 = $(this.$el)\n      .find('select')\n      .select2({\n        placeholder: this.placeholder,\n        ...this.settings,\n        data: this.options\n      })\n      .on('select2:select select2:unselect', ev => {\n        this.$emit('update:modelValue', this.select2.val());\n        this.$emit('select', ev['params']['data']);\n      });\n    this.setValue(this.modelValue);\n  },\n  beforeUnmount() {\n    this.select2.select2('destroy');\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}