{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport DocumentsDataService from \"../../services/DocumentsDataService\";\nimport UniversalDataService from \"../../services/UniversalDataService\";\nimport router from \"../../router\";\nexport default {\n  page: {\n    title: \"Documents\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        PageNumber: 0,\n        PageLenght: 0,\n        TotalRecords: 0,\n        TotalPage: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        PageNumber: 0,\n        TotalRecords: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\",\n      type_list: 'documents/list',\n      main_type: 'documents',\n      list_items: [],\n      title: \"Documents\",\n      items: [{\n        text: \"Главная\",\n        href: \"/\"\n      }, {\n        text: \"Documents\",\n        active: true\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    list: function list() {\n      var _this = this;\n\n      UniversalDataService.setPath(this.type_list);\n      UniversalDataService.list(this.jsonPages).then(function (response) {\n        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n        _this.list_items = response.data.List;\n        console.log(response);\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    HoldDocument: function HoldDocument(id) {\n      var _this2 = this;\n\n      DocumentsDataService.holddocument(id).then(function (response) {\n        if (response.data.status_code == 200) {\n          _this2.list();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    UnholdDocument: function UnholdDocument(id) {\n      var _this3 = this;\n\n      DocumentsDataService.unholddocument(id).then(function (response) {\n        if (response.data.status_code == 200) {\n          _this3.list();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    remove: function remove(id) {\n      var _this4 = this;\n\n      UniversalDataService.setPath(this.main_type);\n      UniversalDataService.delete(id).then(function () {\n        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n        _this4.list();\n      }).catch(function (error) {\n        //dispatch('notification/error', error, { root: true });\n        console.log(error);\n      });\n    },\n    edit: function edit(id) {\n      router.push('/' + this.main_type + '/' + id);\n    },\n    getDocumentByName: function getDocumentByName() {\n      this.retrieveDocuments();\n      this.pages = [];\n    }\n  },\n  computed: {\n    localeDate: function localeDate() {\n      // Конвертируем число в строку. Для этого существуют специальные методы\n      // toLocaleDateString() или toLocaleString() или toLocaleTimeString()\n      // Итоговая строка будет зависеть от локализации системы пользователя. \n      // Для русской локали это будет \"01.02.2020\", \n      // для американской \"2/1/2020\", \n      // для немецкой — \"1.2.2020\"\n      // Вы НЕ должны устанавливать формат даты самостоятельно\n      return new Date(this.creation_date).toLocaleDateString();\n    }\n  },\n  mounted: function mounted() {\n    this.list();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","DocumentsDataService","UniversalDataService","router","page","title","meta","name","content","description","data","PageRequest","Fields","Name","Value","Operation","Order","PageNumber","PageLenght","TotalRecords","TotalPage","perPage","pages","jsonPages","jsonFields","value","search","type_list","main_type","list_items","items","text","href","active","components","methods","list","setPath","then","response","List","console","log","catch","error","HoldDocument","id","holddocument","status_code","e","UnholdDocument","unholddocument","remove","delete","edit","push","getDocumentByName","retrieveDocuments","computed","localeDate","Date","creation_date","toLocaleDateString","mounted"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\documents\\list.vue"],"sourcesContent":["<style>\n   .filter{\n\n    padding: 10px;\n    margin-left: 90px;\n   }\n   .input-group{\n    display: inline-block;\n    padding: 10px;\n\n\n   }\n    </style>\n\n<script>\n    import Layout from \"../../layouts/main.vue\";\n    import PageHeader from \"@/components/page-header\";\n    import appConfig from \"../../../app.config\";\n\n    import \"prismjs\";\n    import \"prismjs/themes/prism.css\";\n\n    import DocumentsDataService from \"../../services/DocumentsDataService\";\n    import UniversalDataService from \"../../services/UniversalDataService\";\n    import router from \"../../router\";\n    \n    export default {\n        page: {\n            title: \"Documents\",\n            meta: [{ name: \"description\", content: appConfig.description }],\n        },\n        data() {\n            return {\n                PageRequest: {\n                        Fields: [{\n                        Name :'',\n                        Value:'',\n                        Operation:'',\n                        Order:'',\n                        }],\n                        PageNumber:0,\n                        PageLenght:0,\n                        TotalRecords:0,\n                        TotalPage:0,\n                    },\n                page: 1,\n                perPage: 7,\n                pages: [],\n                jsonPages: {\n                            PageNumber: 0,\n                            TotalRecords:0,\n                },\n                jsonFields: [{\n                            name:'',\n                            value: ''\n                }],\n\n                search:\"\",\n\n                type_list:'documents/list',\n                main_type:'documents',\n                list_items:[],\n                title: \"Documents\",\n                \n                items: [\n                    {\n                        text: \"Главная\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"Documents\",\n                        active: true,\n                    },\n                    \n                ],\n                \n            };\n        },\n        components: {\n            Layout,\n            PageHeader,\n        },\n\n\n\n        methods:{\n   \n            list(){\n\n                UniversalDataService.setPath(this.type_list);\n                UniversalDataService.list(this.jsonPages)\n                    .then(response => {\n\n                        //dispatch('notification/success', 'Получение списка прошло успешно', { root: true });\n                        this.list_items = response.data.List;\n                        console.log(response)\n                        \n                    })\n                    .catch(error => {\n                        //dispatch('notification/error', error, { root: true });\n                        console.log(error);\n                    });\n\n                    \n            },\n   \n\n  HoldDocument(id){\n\n\n   DocumentsDataService.holddocument(id)\n    \n        \n        .then(response => {\n\n            if (response.data.status_code == 200){\n               this.list();\n             }\n        \n       \n      \n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n\n  },\n\n  UnholdDocument(id){\n\n\n   DocumentsDataService.unholddocument(id)\n    \n        \n        .then(response => {\n\n          \n             if (response.data.status_code == 200){\n               this.list();\n             }\n       \n      \n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n\n  },\n\n\n   remove(id){\n                UniversalDataService.setPath(this.main_type);\n                UniversalDataService.delete(id)\n                    .then(() => {\n                        //dispatch('notification/success', 'Удаление прошло успешно', { root: true });\n                        this.list();\n                    })\n                    .catch(error => {\n                        //dispatch('notification/error', error, { root: true });\n                        console.log(error);\n                    });\n\n            },\n            edit(id){\n                router.push('/'+this.main_type+'/'+id);\n\n            },\n\n  \n\n   \n    \n\n    getDocumentByName(){\n         this.retrieveDocuments();\n         this.pages = [];\n      \n    },\n \n   \n  },\n   computed: {\n        localeDate() {\n            // Конвертируем число в строку. Для этого существуют специальные методы\n            // toLocaleDateString() или toLocaleString() или toLocaleTimeString()\n            // Итоговая строка будет зависеть от локализации системы пользователя. \n            // Для русской локали это будет \"01.02.2020\", \n            // для американской \"2/1/2020\", \n            // для немецкой — \"1.2.2020\"\n            // Вы НЕ должны устанавливать формат даты самостоятельно\n            return (new Date(this.creation_date)).toLocaleDateString() \n        },\n    },\n mounted() {\n            this.list();\n        },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n    <div>\n    <h4>Documents</h4>\n    </div>\n\n<div>\n    <div class=\"col-lg-6\">\n         <div class=\"input-group\">\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getDocumentByName\" key=\"enter\">search</button>   \n        </div>\n    </div>\n       \n</div>\n            <!--++++++++++-->\n            <div class=\"filter\">\n            <b-button-group>\n            <b-dropdown size=\"lg\" variant=\"primary\" text=\"Large button\" >\n            <b-dropdown-item href=\"#\">Action</b-dropdown-item>\n            <b-dropdown-item href=\"#\">Another action</b-dropdown-item>\n            <b-dropdown-item href=\"#\">Something else here</b-dropdown-item>\n            <b-dropdown-divider></b-dropdown-divider>\n            <b-dropdown-item href=\"#\">Separated link</b-dropdown-item>\n            </b-dropdown>\n            </b-button-group>\n            </div>\n<p></p>\n  \n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Дата создания</th>\n            <th scope=\"col\">от кого</th>\n            <th scope=\"col\">кому</th>\n            <th scope=\"col\">тип документа</th>\n            <th scope=\"col\">сумма</th>\n            <th scope=\"col\">статус</th>\n            <th scope=\"col\"></th>\n            \n            \n        \n        </tr>\n    </thead>\n    <tbody>\n         <tr v-for=\"item in list_items\" :key=\"item.id\">\n\n        <td><a href=\"#\" class=\"fw-medium\">{{item.id}}</a></td>\n    \n            \n           <td>{{ item.creation_date }}</td>\n            <td>{{ item.CompanySender.name}}</td>\n            <td>{{ item.CompanyRecipient.name}}</td>\n            <td>{{ item.DocumentType.name}}</td>\n            <td>{{ item.sum}}</td>\n            <td>{{ item.Status.name}}</td>\n           \n            \n            <td>\n                <div class=\"hstack gap-3 flex-wrap\">\n\n                  <template  v-if=\"item.Status.id == 1\">\n                  <a href=\"javascript:void(0);\" class=\"link-warning fs-15\"><i class=\" ri-arrow-right-line\" @click=\"UnholdDocument(item.id)\" ></i></a>\n                  </template>\n                  \n                  <template  v-else>\n                   <a href=\"javascript:void(0);\" class=\" link-warning fs-15\"><i class=\"ri-arrow-left-line\" @click=\"HoldDocument(item.id)\"></i></a>\n                  </template>\n                   \n\n\n                   \n                   \n                   \n                   <template v-if=\"item.Status.id == 1\">\n                    <a @click=\"edit(item.id)\" href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a>\n\n                    <a href=\"javascript:void(0);\" class=\"link-danger fs-15\"><i class=\"ri-delete-bin-line\" @click=\"remove(item.id)\"></i></a>\n\n                    \n                   </template>\n\n                   <template v-else>\n                     </template>\n\n                 \n                  \n                  \n                    \n                   \n                \n                \n                </div>\n            </td>\n        </tr>\n       \n    </tbody>\n    <p></p>\n</table>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}