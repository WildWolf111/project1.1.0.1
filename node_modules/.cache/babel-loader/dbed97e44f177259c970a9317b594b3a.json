{"ast":null,"code":"import _typeof from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\n\nfunction getChildren(originalSlots, slidesRef, oldSlidesRef) {\n  if (originalSlots === void 0) {\n    originalSlots = {};\n  }\n\n  var slides = [];\n  var slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n\n  var getSlidesFromElements = function getSlidesFromElements(els, slotName) {\n    if (!Array.isArray(els)) {\n      return;\n    }\n\n    els.forEach(function (vnode) {\n      var isFragment = _typeof(vnode.type) === 'symbol';\n      if (slotName === 'default') slotName = 'container-end';\n\n      if (isFragment && vnode.children) {\n        getSlidesFromElements(vnode.children, 'default');\n      } else if (vnode.type && (vnode.type.name === 'SwiperSlide' || vnode.type.name === 'AsyncComponentWrapper')) {\n        slides.push(vnode);\n      } else if (slots[slotName]) {\n        slots[slotName].push(vnode);\n      }\n    });\n  };\n\n  Object.keys(originalSlots).forEach(function (slotName) {\n    var els = originalSlots[slotName]();\n    getSlidesFromElements(els, slotName);\n  });\n  oldSlidesRef.value = slidesRef.value;\n  slidesRef.value = slides;\n  return {\n    slides: slides,\n    slots: slots\n  };\n}\n\nexport { getChildren };","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/node_modules/swiper/esm/vue/get-children.js"],"names":["getChildren","originalSlots","slidesRef","oldSlidesRef","slides","slots","getSlidesFromElements","els","slotName","Array","isArray","forEach","vnode","isFragment","type","children","name","push","Object","keys","value"],"mappings":";;;;;;AAAA,SAASA,WAAT,CAAqBC,aAArB,EAAoCC,SAApC,EAA+CC,YAA/C,EAA6D;AAC3D,MAAIF,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAC5BA,IAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,MAAIG,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG;AACV,uBAAmB,EADT;AAEV,qBAAiB,EAFP;AAGV,qBAAiB,EAHP;AAIV,mBAAe;AAJL,GAAZ;;AAOA,MAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,GAA/B,EAAoCC,QAApC,EAA8C;AACxE,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAL,EAAyB;AACvB;AACD;;AAEDA,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAAUC,KAAV,EAAiB;AAC3B,UAAIC,UAAU,GAAG,QAAOD,KAAK,CAACE,IAAb,MAAsB,QAAvC;AACA,UAAIN,QAAQ,KAAK,SAAjB,EAA4BA,QAAQ,GAAG,eAAX;;AAE5B,UAAIK,UAAU,IAAID,KAAK,CAACG,QAAxB,EAAkC;AAChCT,QAAAA,qBAAqB,CAACM,KAAK,CAACG,QAAP,EAAiB,SAAjB,CAArB;AACD,OAFD,MAEO,IAAIH,KAAK,CAACE,IAAN,KAAeF,KAAK,CAACE,IAAN,CAAWE,IAAX,KAAoB,aAApB,IAAqCJ,KAAK,CAACE,IAAN,CAAWE,IAAX,KAAoB,uBAAxE,CAAJ,EAAsG;AAC3GZ,QAAAA,MAAM,CAACa,IAAP,CAAYL,KAAZ;AACD,OAFM,MAEA,IAAIP,KAAK,CAACG,QAAD,CAAT,EAAqB;AAC1BH,QAAAA,KAAK,CAACG,QAAD,CAAL,CAAgBS,IAAhB,CAAqBL,KAArB;AACD;AACF,KAXD;AAYD,GAjBD;;AAmBAM,EAAAA,MAAM,CAACC,IAAP,CAAYlB,aAAZ,EAA2BU,OAA3B,CAAmC,UAAUH,QAAV,EAAoB;AACrD,QAAID,GAAG,GAAGN,aAAa,CAACO,QAAD,CAAb,EAAV;AACAF,IAAAA,qBAAqB,CAACC,GAAD,EAAMC,QAAN,CAArB;AACD,GAHD;AAIAL,EAAAA,YAAY,CAACiB,KAAb,GAAqBlB,SAAS,CAACkB,KAA/B;AACAlB,EAAAA,SAAS,CAACkB,KAAV,GAAkBhB,MAAlB;AACA,SAAO;AACLA,IAAAA,MAAM,EAAEA,MADH;AAELC,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID;;AAED,SAASL,WAAT","sourcesContent":["function getChildren(originalSlots, slidesRef, oldSlidesRef) {\n  if (originalSlots === void 0) {\n    originalSlots = {};\n  }\n\n  var slides = [];\n  var slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n\n  var getSlidesFromElements = function getSlidesFromElements(els, slotName) {\n    if (!Array.isArray(els)) {\n      return;\n    }\n\n    els.forEach(function (vnode) {\n      var isFragment = typeof vnode.type === 'symbol';\n      if (slotName === 'default') slotName = 'container-end';\n\n      if (isFragment && vnode.children) {\n        getSlidesFromElements(vnode.children, 'default');\n      } else if (vnode.type && (vnode.type.name === 'SwiperSlide' || vnode.type.name === 'AsyncComponentWrapper')) {\n        slides.push(vnode);\n      } else if (slots[slotName]) {\n        slots[slotName].push(vnode);\n      }\n    });\n  };\n\n  Object.keys(originalSlots).forEach(function (slotName) {\n    var els = originalSlots[slotName]();\n    getSlidesFromElements(els, slotName);\n  });\n  oldSlidesRef.value = slidesRef.value;\n  slidesRef.value = slides;\n  return {\n    slides: slides,\n    slots: slots\n  };\n}\n\nexport { getChildren };"]},"metadata":{},"sourceType":"module"}