{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductDataService from \"/src/services/ProductDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      title: \"Добавление нового продукта\",\n      Product: {\n        id: '',\n        name: \"\",\n        slug: \"\",\n        brand_id: \"\",\n        SKU: \"\",\n        short_description: \"\",\n        full_description: \"\"\n      },\n      Brands: [{\n        id: -1,\n        text: \"\"\n      }],\n      jsonPages: {\n        currentpage: 1,\n        countsrecordonpage: 100\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }]\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    addedProduct: function addedProduct() {\n      var _this = this;\n\n      var data = {\n        \"name\": this.Product.name,\n        \"slug\": this.Product.slug,\n        \"SKU\": this.Product.SKU,\n        \"short_description\": this.Product.short_description,\n        \"full_description\": this.Product.full_description,\n        \"brand_id\": +this.Product.brand_id\n      };\n      console.log(data);\n      ProductDataService.create(data).then(function (response) {\n        _this.Product.id = response.data.id;\n        console.log(response.data);\n        _this.submitted = true;\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    newCompany: function newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands: function retrieveBrands() {\n      var _this2 = this;\n\n      this.jsonPages = {\n        currentpage: 1,\n        countsrecordonpage: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      BrandsDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        for (var i = 0; i < response.data.Brands.length; i++) {\n          var currentBrand = response.data.Brands[i];\n          _this2.Brands[i] = {\n            id: currentBrand.Id,\n            text: currentBrand.Name\n          };\n        } //this.Brands = response.data.Brands;\n\n\n        console.log(_this2.Brands);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveBrands();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","ProductDataService","BrandsDataService","Select2","page","title","meta","name","content","description","data","Product","id","slug","brand_id","SKU","short_description","full_description","Brands","text","jsonPages","currentpage","countsrecordonpage","jsonFields","value","components","methods","addedProduct","console","log","create","then","response","submitted","catch","e","newCompany","retrieveBrands","search","field","getAll","i","length","currentBrand","Id","Name","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\products\\add.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport ProductDataService from \"/src/services/ProductDataService\";\nimport BrandsDataService from \"/src/services/BrandsDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Добавление нового продукта\",\n        Product:{\n        id: '',\n        name:\"\",\n        slug:\"\",\n        brand_id:\"\",\n        SKU:\"\",\n        short_description:\"\",\n        full_description:\"\",\n        },\n        Brands:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n          jsonPages: {\n                currentpage: 1,\n                countsrecordonpage: 100\n      },\n       jsonFields: [{\n                name:'',\n                value: ''\n      }],\n        \n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    addedProduct() {\n      var data = {\n        \"name\":this.Product.name,\n        \"slug\":this.Product.slug,\n        \"SKU\":this.Product.SKU,\n        \"short_description\":this.Product.short_description,\n        \"full_description\":this.Product.full_description,\n        \"brand_id\": +this.Product.brand_id\n        \n      };\n       console.log(data);\n      ProductDataService.create(data)\n        .then(response => {\n          this.Product.id = response.data.id;\n          console.log(response.data);\n          this.submitted = true;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    \n    newCompany() {\n      this.submitted = false;\n      this.Product = {};\n    },\n    retrieveBrands(){\n      this.jsonPages = {\n                currentpage:1,\n                countsrecordonpage: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       BrandsDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n          \n          for(let i = 0; i < response.data.Brands.length; i++){\n              let currentBrand = response.data.Brands[i];\n         \n              this.Brands[i]={\n                id:currentBrand.Id, \n                text:currentBrand.Name\n              };\n              \n          }\n          //this.Brands = response.data.Brands;\n        \n          console.log(this.Brands);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n  },\n   mounted() {\n    this.retrieveBrands();\n  },\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.Name\" >\n          </div>                     \n     </div> \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">   {{ $t(\"t-slug\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.Slug\" >\n          </div>                     \n     </div>\n\n    \n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-SKU\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.SKU\" >\n          </div>                     \n     </div>\n\n      <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\"> {{ $t(\"t-short_description\") }}</label>\n             <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.short_description\" >\n          </div>                     \n     </div>  \n\n <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">  {{ $t(\"t-full_description\") }}</label>\n              <input type=\"Text\" class=\"form-control\" id=\"labelInput\" required v-model=\"Product.full_description\" >\n          </div>                     \n  </div>\n<p>\n \n    </p>\n\n \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-brands\") }}</label>\n    <Select2 v-model=\"Product.brand_id\" :options=\"this.Brands\" />\n</div>\n\n\n\n    <p>\n \n    </p>\n  \n     <div class=\"row\">\n     <div>\n        <b-button @click=\"addedProduct\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Added\") }}</b-button>       \n        </div>             \n     </div>\n\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}