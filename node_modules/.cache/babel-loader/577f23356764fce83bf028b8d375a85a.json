{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\n//  Simple Pie Charts\nvar simplePieChart = {\n  series: [44, 55, 13, 43, 22],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\"\n    },\n    labels: [\"Team A\", \"Team B\", \"Team C\", \"Team D\", \"Team E\"],\n    legend: {\n      position: \"bottom\"\n    },\n    dataLabels: {\n      dropShadow: {\n        enabled: false\n      }\n    },\n    colors: [\"#25a0e2\", \"rgba(37,160,226,0.85)\", \"rgba(37,160,226,0.70)\", \"rgba(37,160,226,0.55)\", \"rgba(37,160,226,0.40)\"]\n  }\n}; // Simple Donut Charts\n\nvar donutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\"\n    },\n    legend: {\n      position: \"bottom\"\n    },\n    dataLabels: {\n      dropShadow: {\n        enabled: false\n      }\n    },\n    colors: [\"#25a0e2\", \"rgba(37,160,226,0.85)\", \"rgba(37,160,226,0.70)\", \"rgba(37,160,226,0.55)\", \"rgba(37,160,226,0.40)\"]\n  }\n}; // Updating Donut Charts\n\nvar updatingDonutChart = {\n  series: [44, 55, 13, 33],\n  chartOptions: {\n    chart: {\n      height: 280,\n      type: \"donut\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      position: \"bottom\"\n    },\n    colors: [\"#25a0e2\", \"rgba(37,160,226,0.85)\", \"rgba(37,160,226,0.65)\", \"rgba(37,160,226,0.50)\"]\n  }\n}; // Gradient Donut Chart\n\nvar gradientDonutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\"\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: \"gradient\"\n    },\n    legend: {\n      position: \"bottom\",\n      formatter: function formatter(val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      }\n    },\n    title: {\n      text: \"Gradient Donut with custom Start-angle\",\n      style: {\n        fontWeight: 500\n      }\n    },\n    colors: [\"#25a0e2\", \"#00bd9d\", \"#FFBC0A\", \"#878a99\", \"#32ccff\"]\n  }\n}; // Pattern Donut chart\n\nvar patternDonutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\",\n      dropShadow: {\n        enabled: true,\n        color: \"#111\",\n        top: -1,\n        left: 3,\n        blur: 3,\n        opacity: 0.2\n      }\n    },\n    stroke: {\n      width: 0\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          labels: {\n            show: true,\n            total: {\n              showAlways: true,\n              show: true\n            }\n          }\n        }\n      }\n    },\n    labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\n    dataLabels: {\n      dropShadow: {\n        blur: 3,\n        opacity: 0.8\n      }\n    },\n    fill: {\n      type: \"pattern\",\n      opacity: 1,\n      pattern: {\n        enabled: true,\n        style: [\"verticalLines\", \"squares\", \"horizontalLines\", \"circles\", \"slantedLines\"]\n      }\n    },\n    states: {\n      hover: {\n        filter: \"none\"\n      }\n    },\n    theme: {\n      palette: \"palette2\"\n    },\n    title: {\n      text: \"Favourite Movie Type\",\n      style: {\n        fontWeight: 500\n      }\n    },\n    legend: {\n      position: \"bottom\"\n    },\n    colors: [\"#25a0e2\", \"#00bd9d\", \"#FFBC0A\", \"#878a99\", \"#32ccff\"]\n  }\n}; // Pie Chart with Image Fill\n\nvar imagePieChart = {\n  series: [44, 33, 54, 45],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\"\n    },\n    colors: ['#93C3EE', '#E5C6A0', '#669DB5', '#94A74A'],\n    fill: {\n      type: \"image\",\n      opacity: 0.85,\n      image: {\n        src: [// require(\"@/assets/images/auth-bg.jpg\"),\n        require(\"@/assets/images/small/img-3.jpg\"), require(\"@/assets/images/small/img-5.jpg\"), require(\"@/assets/images/small/img-2.jpg\")],\n        width: 25,\n        imagedHeight: 25\n      }\n    },\n    stroke: {\n      width: 4\n    },\n    dataLabels: {\n      enabled: true,\n      style: {\n        colors: [\"#111\"]\n      },\n      background: {\n        enabled: true,\n        foreColor: \"#fff\",\n        borderWidth: 0\n      }\n    },\n    legend: {\n      position: \"bottom\"\n    }\n  }\n}; // monochrome_pie_chart\n\nvar monochromePieChart = {\n  series: [25, 15, 44, 55, 41, 17],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\"\n    },\n    labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#405189\",\n        shadeTo: \"light\",\n        shadeIntensity: 0.6\n      }\n    },\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          offset: -5\n        }\n      }\n    },\n    title: {\n      text: \"Monochrome Pie\",\n      style: {\n        fontWeight: 500\n      }\n    },\n    dataLabels: {\n      formatter: function formatter(val, opts) {\n        var name = opts.w.globals.labels[opts.seriesIndex];\n        return [name, val.toFixed(1) + \"%\"];\n      },\n      dropShadow: {\n        enabled: false\n      }\n    },\n    legend: {\n      show: false\n    }\n  }\n};\nexport { simplePieChart, donutChart, updatingDonutChart, gradientDonutChart, patternDonutChart, imagePieChart, monochromePieChart };","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/src/views/charts/apex/pie/data.js"],"names":["simplePieChart","series","chartOptions","chart","height","type","labels","legend","position","dataLabels","dropShadow","enabled","colors","donutChart","updatingDonutChart","gradientDonutChart","plotOptions","pie","startAngle","endAngle","fill","formatter","val","opts","w","globals","seriesIndex","title","text","style","fontWeight","patternDonutChart","color","top","left","blur","opacity","stroke","width","donut","show","total","showAlways","pattern","states","hover","filter","theme","palette","imagePieChart","image","src","require","imagedHeight","background","foreColor","borderWidth","monochromePieChart","monochrome","shadeTo","shadeIntensity","offset","name","toFixed"],"mappings":"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","sourcesContent":["//  Simple Pie Charts\n\nconst simplePieChart = {\n  series: [44, 55, 13, 43, 22],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\",\n    },\n    labels: [\"Team A\", \"Team B\", \"Team C\", \"Team D\", \"Team E\"],\n    legend: {\n      position: \"bottom\",\n    },\n    dataLabels: {\n      dropShadow: {\n        enabled: false,\n      },\n    },\n    colors: [\"#25a0e2\",\"rgba(37,160,226,0.85)\",\"rgba(37,160,226,0.70)\",\"rgba(37,160,226,0.55)\",\"rgba(37,160,226,0.40)\"],\n  },\n};\n\n// Simple Donut Charts\n\nconst donutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\",\n    },\n    legend: {\n      position: \"bottom\",\n    },\n    dataLabels: {\n      dropShadow: {\n        enabled: false,\n      },\n    },\n    colors: [\"#25a0e2\",\"rgba(37,160,226,0.85)\",\"rgba(37,160,226,0.70)\",\"rgba(37,160,226,0.55)\",\"rgba(37,160,226,0.40)\"],\n  },\n};\n\n// Updating Donut Charts\nconst updatingDonutChart = {\n  series: [44, 55, 13, 33],\n  chartOptions: {\n    chart: {\n      height: 280,\n      type: \"donut\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    legend: {\n      position: \"bottom\",\n    },\n    colors: [\"#25a0e2\",\"rgba(37,160,226,0.85)\",\"rgba(37,160,226,0.65)\",\"rgba(37,160,226,0.50)\"],\n  },\n};\n\n// Gradient Donut Chart\n\nconst gradientDonutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\",\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -90,\n        endAngle: 270,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    fill: {\n      type: \"gradient\",\n    },\n    legend: {\n      position: \"bottom\",\n      formatter: function(val, opts) {\n        return val + \" - \" + opts.w.globals.series[opts.seriesIndex];\n      },\n    },\n    title: {\n      text: \"Gradient Donut with custom Start-angle\",\n      style: {\n        fontWeight: 500,\n      },\n    },\n    colors: [\"#25a0e2\",\"#00bd9d\",\"#FFBC0A\",\"#878a99\",\"#32ccff\"],\n  },\n};\n\n// Pattern Donut chart\n\nconst patternDonutChart = {\n  series: [44, 55, 41, 17, 15],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"donut\",\n      dropShadow: {\n        enabled: true,\n        color: \"#111\",\n        top: -1,\n        left: 3,\n        blur: 3,\n        opacity: 0.2,\n      },\n    },\n    stroke: {\n      width: 0,\n    },\n    plotOptions: {\n      pie: {\n        donut: {\n          labels: {\n            show: true,\n            total: {\n              showAlways: true,\n              show: true,\n            },\n          },\n        },\n      },\n    },\n    labels: [\"Comedy\", \"Action\", \"SciFi\", \"Drama\", \"Horror\"],\n    dataLabels: {\n      dropShadow: {\n        blur: 3,\n        opacity: 0.8,\n      },\n    },\n    fill: {\n      type: \"pattern\",\n      opacity: 1,\n      pattern: {\n        enabled: true,\n        style: [\n          \"verticalLines\",\n          \"squares\",\n          \"horizontalLines\",\n          \"circles\",\n          \"slantedLines\",\n        ],\n      },\n    },\n    states: {\n      hover: {\n        filter: \"none\",\n      },\n    },\n    theme: {\n      palette: \"palette2\",\n    },\n    title: {\n      text: \"Favourite Movie Type\",\n      style: {\n        fontWeight: 500,\n      },\n    },\n    legend: {\n      position: \"bottom\",\n    },\n    colors: [\"#25a0e2\",\"#00bd9d\",\"#FFBC0A\",\"#878a99\",\"#32ccff\"],\n  },\n};\n\n// Pie Chart with Image Fill\n\nconst imagePieChart = {\n  series: [44, 33, 54, 45],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\",\n    },\n    colors: ['#93C3EE', '#E5C6A0', '#669DB5', '#94A74A'],\n    fill: {\n      type: \"image\",\n      opacity: 0.85,\n      image: {\n        src: [\n          // require(\"@/assets/images/auth-bg.jpg\"),\n          require(\"@/assets/images/small/img-3.jpg\"),\n          require(\"@/assets/images/small/img-5.jpg\"),\n          require(\"@/assets/images/small/img-2.jpg\")\n        ],\n        width: 25,\n        imagedHeight: 25,\n      },\n    },\n    stroke: {\n      width: 4,\n    },\n    dataLabels: {\n      enabled: true,\n      style: {\n        colors: [\"#111\"],\n      },\n      background: {\n        enabled: true,\n        foreColor: \"#fff\",\n        borderWidth: 0,\n      },\n    },\n    legend: {\n      position: \"bottom\",\n    },\n  },\n};\n\n// monochrome_pie_chart\nconst monochromePieChart = {\n  series: [25, 15, 44, 55, 41, 17],\n  chartOptions: {\n    chart: {\n      height: 300,\n      type: \"pie\",\n    },\n    labels: [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ],\n    theme: {\n      monochrome: {\n        enabled: true,\n        color: \"#405189\",\n        shadeTo: \"light\",\n        shadeIntensity: 0.6,\n      },\n    },\n\n    plotOptions: {\n      pie: {\n        dataLabels: {\n          offset: -5,\n        },\n      },\n    },\n    title: {\n      text: \"Monochrome Pie\",\n      style: {\n        fontWeight: 500,\n      },\n    },\n    dataLabels: {\n      formatter: function(val, opts) {\n        var name = opts.w.globals.labels[opts.seriesIndex];\n        return [name, val.toFixed(1) + \"%\"];\n      },\n      dropShadow: {\n        enabled: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n  },\n};\n\nexport {\n  simplePieChart,\n  donutChart,\n  updatingDonutChart,\n  gradientDonutChart,\n  patternDonutChart,\n  imagePieChart,\n  monochromePieChart,\n};\n"]},"metadata":{},"sourceType":"module"}