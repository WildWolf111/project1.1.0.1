{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\n// Basic Column Chart\nvar basicColumnChart = {\n  series: [{\n    name: \"Net Profit\",\n    data: [46, 57, 59, 54, 62, 58, 64, 60, 66]\n  }, {\n    name: \"Revenue\",\n    data: [74, 83, 102, 97, 86, 106, 93, 114, 94]\n  }, {\n    name: \"Free Cash Flow\",\n    data: [37, 42, 38, 26, 47, 50, 54, 55, 43]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"45%\",\n        endingShape: \"rounded\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"]\n    },\n    colors: [\"#32ccff\", \"#25a0e2\", \"#0AB39C\"],\n    xaxis: {\n      categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\"]\n    },\n    yaxis: {\n      title: {\n        text: \"$ (thousands)\"\n      }\n    },\n    grid: {\n      borderColor: \"#f1f1f1\"\n    },\n    fill: {\n      opacity: 1\n    },\n    tooltip: {\n      y: {\n        formatter: function formatter(val) {\n          return \"$ \" + val + \" thousands\";\n        }\n      }\n    }\n  }\n}; // Column with Datalabels\n\nvar columnDatalabelChart = {\n  series: [{\n    name: \"Inflation\",\n    data: [2.5, 3.2, 5.0, 10.1, 4.2, 3.8, 3, 2.4, 4.0, 1.2, 3.5, 0.8]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: \"top\" // top, center, bottom\n\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: function formatter(val) {\n        return val + \"%\";\n      },\n      offsetY: -20,\n      style: {\n        fontSize: \"12px\",\n        colors: [\"#adb5bd\"]\n      }\n    },\n    colors: [\"#25a0e2\"],\n    grid: {\n      borderColor: \"#f1f1f1\"\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      position: \"top\",\n      labels: {\n        offsetY: -18\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      crosshairs: {\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            colorFrom: \"#D8E3F0\",\n            colorTo: \"#BED1E6\",\n            stops: [0, 100],\n            opacityFrom: 0.4,\n            opacityTo: 0.5\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        offsetY: -35\n      }\n    },\n    fill: {\n      gradient: {\n        shade: \"light\",\n        type: \"horizontal\",\n        shadeIntensity: 0.25,\n        gradientToColors: undefined,\n        inverseColors: true,\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [50, 0, 100, 100]\n      }\n    },\n    yaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        formatter: function formatter(val) {\n          return val + \"%\";\n        }\n      }\n    },\n    title: {\n      text: \"Monthly Inflation in Argentina, 2002\",\n      floating: true,\n      offsetY: 320,\n      align: \"center\",\n      style: {\n        color: \"#444\",\n        fontWeight: 500\n      }\n    }\n  }\n}; // Stacked Columns Charts\n\nvar stackedColumnsChart = {\n  series: [{\n    name: \"PRODUCT A\",\n    data: [44, 55, 41, 67, 22, 43]\n  }, {\n    name: \"PRODUCT B\",\n    data: [13, 23, 20, 8, 13, 27]\n  }, {\n    name: \"PRODUCT C\",\n    data: [11, 17, 15, 15, 21, 14]\n  }, {\n    name: \"PRODUCT D\",\n    data: [21, 7, 25, 13, 22, 8]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: true\n      }\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        legend: {\n          position: \"bottom\",\n          offsetX: -10,\n          offsetY: 0\n        }\n      }\n    }],\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        borderRadius: 10\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: [\"01/01/2011 GMT\", \"01/02/2011 GMT\", \"01/03/2011 GMT\", \"01/04/2011 GMT\", \"01/05/2011 GMT\", \"01/06/2011 GMT\"]\n    },\n    legend: {\n      position: \"right\",\n      offsetY: 40\n    },\n    fill: {\n      opacity: 1\n    },\n    colors: [\"#25a0e2\", \"#0AB39C\", \"#32ccff\", \"#eff2f7\"]\n  }\n}; // 100% Stacked Column Chart\n\nvar columnStackedChart = {\n  series: [{\n    name: \"PRODUCT A\",\n    data: [44, 55, 41, 67, 22, 43, 21, 49]\n  }, {\n    name: \"PRODUCT B\",\n    data: [13, 23, 20, 8, 13, 27, 33, 12]\n  }, {\n    name: \"PRODUCT C\",\n    data: [11, 17, 15, 15, 21, 14, 15, 13]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      stacked: true,\n      stackType: \"100%\",\n      toolbar: {\n        show: false\n      }\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        legend: {\n          position: \"bottom\",\n          offsetX: -10,\n          offsetY: 0\n        }\n      }\n    }],\n    xaxis: {\n      categories: [\"2011 Q1\", \"2011 Q2\", \"2011 Q3\", \"2011 Q4\", \"2012 Q1\", \"2012 Q2\", \"2012 Q3\", \"2012 Q4\"]\n    },\n    fill: {\n      opacity: 1\n    },\n    legend: {\n      position: \"right\",\n      offsetX: 0,\n      offsetY: 50\n    },\n    colors: [\"#25a0e2\", \"#32ccff\", \"#00BD9D\"]\n  }\n}; // column with Markers\n\nvar columnMarkersChart = {\n  series: [{\n    name: \"Actual\",\n    data: [{\n      x: \"2011\",\n      y: 1292,\n      goals: [{\n        name: \"Expected\",\n        value: 1400,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2012\",\n      y: 4432,\n      goals: [{\n        name: \"Expected\",\n        value: 5400,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2013\",\n      y: 5423,\n      goals: [{\n        name: \"Expected\",\n        value: 5200,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2014\",\n      y: 6653,\n      goals: [{\n        name: \"Expected\",\n        value: 6500,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2015\",\n      y: 8133,\n      goals: [{\n        name: \"Expected\",\n        value: 6600,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2016\",\n      y: 7132,\n      goals: [{\n        name: \"Expected\",\n        value: 7500,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2017\",\n      y: 7332,\n      goals: [{\n        name: \"Expected\",\n        value: 8700,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }, {\n      x: \"2018\",\n      y: 6553,\n      goals: [{\n        name: \"Expected\",\n        value: 7300,\n        strokeWidth: 5,\n        strokeColor: \"#775DD0\"\n      }]\n    }]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"30%\"\n      }\n    },\n    colors: [\"#25A0E2\"],\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: true,\n      showForSingleSeries: true,\n      customLegendItems: [\"Actual\", \"Expected\"],\n      markers: {\n        fillColors: [\"#63ad6f\", \"#564ab1\"]\n      }\n    }\n  }\n}; //  Column with Rotated Labels\n\nvar columnRotatedLabel = {\n  series: [{\n    name: \"Servings\",\n    data: [44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65, 35]\n  }],\n  chartOptions: {\n    annotations: {\n      points: [{\n        x: \"Bananas\",\n        seriesIndex: 0,\n        label: {\n          borderColor: \"#775DD0\",\n          offsetY: 0,\n          style: {\n            color: \"#fff\",\n            background: \"#775DD0\"\n          },\n          text: \"Bananas are good\"\n        }\n      }]\n    },\n    chart: {\n      height: 350,\n      type: \"bar\",\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 10,\n        columnWidth: \"50%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: 2\n    },\n    xaxis: {\n      labels: {\n        rotate: -45\n      },\n      categories: [\"Apples\", \"Oranges\", \"Strawberries\", \"Pineapples\", \"Mangoes\", \"Bananas\", \"Blackberries\", \"Pears\", \"Watermelons\", \"Cherries\", \"Pomegranates\", \"Tangerines\", \"Papayas\"],\n      tickPlacement: \"on\"\n    },\n    yaxis: {\n      title: {\n        text: \"Servings\"\n      }\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"light\",\n        type: \"horizontal\",\n        shadeIntensity: 0.25,\n        gradientToColors: undefined,\n        inverseColors: true,\n        opacityFrom: 0.85,\n        opacityTo: 0.85,\n        stops: [50, 0, 100]\n      }\n    }\n  }\n}; // Column with Negative Values\n\nvar columnNegativeChart = {\n  series: [{\n    name: \"Cash Flow\",\n    data: [1.45, 5.42, 5.9, -0.42, -12.6, -18.1, -18.2, -14.16, -11.1, -6.09, 0.34, 3.88, 13.07, 5.8, 2, 7.37, 8.1, 13.57, 15.75, 17.1, 19.8, -27.03, -54.4, -47.2, -43.3, -18.6, -48.6, -41.1, -39.6, -37.6, -29.4, -21.4, -2.4]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"bar\",\n      height: 350,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        colors: {\n          ranges: [{\n            from: -100,\n            to: -46,\n            color: \"#32ccff\"\n          }, {\n            from: -45,\n            to: 0,\n            color: \"#00BD9D\"\n          }]\n        },\n        columnWidth: \"80%\"\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    yaxis: {\n      title: {\n        text: \"Growth\"\n      },\n      labels: {\n        formatter: function formatter(y) {\n          return y.toFixed(0) + \"%\";\n        }\n      }\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: [\"2011-01-01\", \"2011-02-01\", \"2011-03-01\", \"2011-04-01\", \"2011-05-01\", \"2011-06-01\", \"2011-07-01\", \"2011-08-01\", \"2011-09-01\", \"2011-10-01\", \"2011-11-01\", \"2011-12-01\", \"2012-01-01\", \"2012-02-01\", \"2012-03-01\", \"2012-04-01\", \"2012-05-01\", \"2012-06-01\", \"2012-07-01\", \"2012-08-01\", \"2012-09-01\", \"2012-10-01\", \"2012-11-01\", \"2012-12-01\", \"2013-01-01\", \"2013-02-01\", \"2013-03-01\", \"2013-04-01\", \"2013-05-01\", \"2013-06-01\", \"2013-07-01\", \"2013-08-01\", \"2013-09-01\"],\n      labels: {\n        rotate: -90\n      }\n    }\n  }\n}; // Range Column Chart\n\nvar rangeColumnChart = {\n  series: [{\n    data: [{\n      x: \"Team A\",\n      y: [1, 5]\n    }, {\n      x: \"Team B\",\n      y: [4, 6]\n    }, {\n      x: \"Team C\",\n      y: [5, 8]\n    }, {\n      x: \"Team D\",\n      y: [3, 11]\n    }]\n  }, {\n    data: [{\n      x: \"Team A\",\n      y: [2, 6]\n    }, {\n      x: \"Team B\",\n      y: [1, 3]\n    }, {\n      x: \"Team C\",\n      y: [7, 8]\n    }, {\n      x: \"Team D\",\n      y: [5, 9]\n    }]\n  }],\n  chartOptions: {\n    chart: {\n      type: \"rangeBar\",\n      height: 335,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    legend: {\n      show: false\n    },\n    colors: [\"#25a0e2\", \"#32ccff\"]\n  }\n}; // dynamic series data\n\nfunction makeData() {\n  var dataSet = shuffleArray(arrayData);\n  var dataYearSeries = [{\n    x: \"2011\",\n    y: dataSet[0].y,\n    color: colors[0],\n    quarters: dataSet[0].quarters\n  }, {\n    x: \"2012\",\n    y: dataSet[1].y,\n    color: colors[1],\n    quarters: dataSet[1].quarters\n  }, {\n    x: \"2013\",\n    y: dataSet[2].y,\n    color: colors[2],\n    quarters: dataSet[2].quarters\n  }, {\n    x: \"2014\",\n    y: dataSet[3].y,\n    color: colors[3],\n    quarters: dataSet[3].quarters\n  }, {\n    x: \"2015\",\n    y: dataSet[4].y,\n    color: colors[4],\n    quarters: dataSet[4].quarters\n  }, {\n    x: \"2016\",\n    y: dataSet[5].y,\n    color: colors[5],\n    quarters: dataSet[5].quarters\n  }];\n  return dataYearSeries;\n}\n\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nfunction updateQuarterChart(sourceChart, destChartIDToUpdate) {\n  var series = [];\n  var seriesIndex = 0;\n  var colors = [];\n\n  if (sourceChart.w.globals.selectedDataPoints[0]) {\n    var selectedPoints = sourceChart.w.globals.selectedDataPoints;\n\n    for (var i = 0; i < selectedPoints[seriesIndex].length; i++) {\n      var selectedIndex = selectedPoints[seriesIndex][i];\n      var yearSeries = sourceChart.w.config.series[seriesIndex];\n      series.push({\n        name: yearSeries.data[selectedIndex].x,\n        data: yearSeries.data[selectedIndex].quarters\n      });\n      colors.push(yearSeries.data[selectedIndex].color);\n    }\n\n    if (series.length === 0) series = [{\n      data: []\n    }];\n    return window.ApexCharts.exec(destChartIDToUpdate, \"updateOptions\", {\n      series: series,\n      colors: colors,\n      fill: {\n        colors: colors\n      }\n    });\n  }\n}\n\nvar colors = [\"#45AEE6\", \"#26C7AC\", \"#F1F4F8\", \"#999BA8\", \"#51D4FF\", \"#5fd0f3\"];\nexport var arrayData = [{\n  y: 400,\n  quarters: [{\n    x: \"Q1\",\n    y: 120\n  }, {\n    x: \"Q2\",\n    y: 90\n  }, {\n    x: \"Q3\",\n    y: 100\n  }, {\n    x: \"Q4\",\n    y: 90\n  }]\n}, {\n  y: 430,\n  quarters: [{\n    x: \"Q1\",\n    y: 120\n  }, {\n    x: \"Q2\",\n    y: 110\n  }, {\n    x: \"Q3\",\n    y: 90\n  }, {\n    x: \"Q4\",\n    y: 110\n  }]\n}, {\n  y: 448,\n  quarters: [{\n    x: \"Q1\",\n    y: 70\n  }, {\n    x: \"Q2\",\n    y: 100\n  }, {\n    x: \"Q3\",\n    y: 140\n  }, {\n    x: \"Q4\",\n    y: 138\n  }]\n}, {\n  y: 470,\n  quarters: [{\n    x: \"Q1\",\n    y: 150\n  }, {\n    x: \"Q2\",\n    y: 60\n  }, {\n    x: \"Q3\",\n    y: 190\n  }, {\n    x: \"Q4\",\n    y: 70\n  }]\n}, {\n  y: 540,\n  quarters: [{\n    x: \"Q1\",\n    y: 120\n  }, {\n    x: \"Q2\",\n    y: 120\n  }, {\n    x: \"Q3\",\n    y: 130\n  }, {\n    x: \"Q4\",\n    y: 170\n  }]\n}, {\n  y: 580,\n  quarters: [{\n    x: \"Q1\",\n    y: 170\n  }, {\n    x: \"Q2\",\n    y: 130\n  }, {\n    x: \"Q3\",\n    y: 120\n  }, {\n    x: \"Q4\",\n    y: 160\n  }]\n}];\nvar chartYearOption = {\n  series: [{\n    name: \"year\",\n    data: makeData()\n  }],\n  chartOptions: {\n    chart: {\n      id: \"barYear\",\n      height: 400,\n      width: \"100%\",\n      type: \"bar\",\n      events: {\n        dataPointSelection: function dataPointSelection(e, chart, opts) {\n          var quarterChartEl = document.querySelector(\"#chart-quarter\");\n          var yearChartEl = document.querySelector(\"#chart-year\");\n\n          if (opts.selectedDataPoints[0].length === 1) {\n            if (quarterChartEl.classList.contains(\"active\")) {\n              updateQuarterChart(chart, \"barQuarter\");\n            } else {\n              yearChartEl.classList.add(\"chart-quarter-activated\");\n              quarterChartEl.classList.add(\"active\");\n              updateQuarterChart(chart, \"barQuarter\");\n            }\n          } else {\n            updateQuarterChart(chart, \"barQuarter\");\n          }\n\n          if (opts.selectedDataPoints[0].length === 0) {\n            yearChartEl.classList.remove(\"chart-quarter-activated\");\n            quarterChartEl.classList.remove(\"active\");\n          }\n        },\n        updated: function updated(chart) {\n          updateQuarterChart(chart, \"barQuarter\");\n        }\n      }\n    },\n    plotOptions: {\n      bar: {\n        distributed: true,\n        horizontal: true,\n        barHeight: \"75%\",\n        dataLabels: {\n          position: \"bottom\"\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      textAnchor: \"start\",\n      style: {\n        colors: [\"#fff\"]\n      },\n      formatter: function formatter(val, opt) {\n        return opt.w.globals.labels[opt.dataPointIndex];\n      },\n      offsetX: 0,\n      dropShadow: {\n        enabled: true\n      }\n    },\n    colors: colors,\n    states: {\n      normal: {\n        filter: {\n          type: \"desaturate\"\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: true,\n        filter: {\n          type: \"darken\",\n          value: 1\n        }\n      }\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    },\n    title: {\n      text: \"Yearly Results\",\n      offsetX: 15\n    },\n    subtitle: {\n      text: \"(Click on bar to see details)\",\n      offsetX: 15\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    legend: {\n      show: false\n    }\n  }\n};\nvar quarterChartOption = {\n  series: [{\n    data: []\n  }],\n  chartOptions: {\n    chart: {\n      id: \"barQuarter\",\n      height: 330,\n      width: \"100%\",\n      type: \"bar\",\n      stacked: true\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"50%\",\n        horizontal: false\n      }\n    },\n    legend: {\n      show: false\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    title: {\n      text: \"Quarterly Results\",\n      offsetX: 10,\n      style: {\n        fontWeight: 600\n      }\n    },\n    tooltip: {\n      x: {\n        formatter: function formatter(val, opts) {\n          return opts.w.globals.seriesNames[opts.seriesIndex];\n        }\n      },\n      y: {\n        title: {\n          formatter: function formatter(val, opts) {\n            return opts.w.globals.labels[opts.dataPointIndex];\n          }\n        }\n      }\n    }\n  }\n}; // Distributed Columns Charts\n\nvar distributedColumnchart = {\n  series: [{\n    data: [21, 22, 10, 28, 16, 21, 13, 30]\n  }],\n  chartOptions: {\n    chart: {\n      height: 350,\n      type: \"bar\",\n      events: {\n        click: function click() {// console.log(chart, w, e)\n        }\n      }\n    },\n    colors: colors,\n    plotOptions: {\n      bar: {\n        columnWidth: \"45%\",\n        distributed: true\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: {\n      show: false\n    },\n    xaxis: {\n      categories: [[\"John\", \"Doe\"], [\"Joe\", \"Smith\"], [\"Jake\", \"Williams\"], \"Amber\", [\"Peter\", \"Brown\"], [\"Mary\", \"Evans\"], [\"David\", \"Wilson\"], [\"Lily\", \"Roberts\"]],\n      labels: {\n        style: {\n          colors: [\"#405189\", \"#0AB39C\", \"#F7B84B\", \"#F06548\", \"#212529\", \"#299CDB\"],\n          fontSize: \"12px\"\n        }\n      }\n    }\n  }\n};\nvar dynamicQuarterLoadedChart = {\n  series: [{\n    name: \"quarter\",\n    data: []\n  }],\n  chartOptions: {\n    chart: {\n      id: \"barQuarter\",\n      height: 400,\n      width: \"100%\",\n      type: \"bar\",\n      stacked: true\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: \"50%\",\n        horizontal: false\n      }\n    },\n    legend: {\n      show: false\n    },\n    grid: {\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    title: {\n      text: \"Quarterly Results\",\n      offsetX: 10\n    },\n    tooltip: {\n      x: {\n        formatter: function formatter(val, opts) {\n          return opts.w.globals.seriesNames[opts.seriesIndex];\n        }\n      }\n    }\n  }\n};\nexport { basicColumnChart, columnDatalabelChart, stackedColumnsChart, columnStackedChart, columnMarkersChart, columnRotatedLabel, columnNegativeChart, rangeColumnChart, chartYearOption, quarterChartOption, distributedColumnchart, dynamicQuarterLoadedChart };","map":{"version":3,"sources":["C:/Users/Max/Desktop/project1.0.0-main/src/views/charts/apex/column/data.js"],"names":["basicColumnChart","series","name","data","chartOptions","chart","height","type","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","width","colors","xaxis","categories","yaxis","title","text","grid","borderColor","fill","opacity","tooltip","y","formatter","val","columnDatalabelChart","position","offsetY","style","fontSize","labels","axisBorder","axisTicks","crosshairs","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","shade","shadeIntensity","gradientToColors","undefined","inverseColors","floating","align","color","fontWeight","stackedColumnsChart","stacked","zoom","responsive","breakpoint","options","legend","offsetX","borderRadius","columnStackedChart","stackType","columnMarkersChart","x","goals","value","strokeWidth","strokeColor","showForSingleSeries","customLegendItems","markers","fillColors","columnRotatedLabel","annotations","points","seriesIndex","label","background","rotate","tickPlacement","columnNegativeChart","ranges","from","to","toFixed","rangeColumnChart","makeData","dataSet","shuffleArray","arrayData","dataYearSeries","quarters","array","i","length","j","Math","floor","random","temp","updateQuarterChart","sourceChart","destChartIDToUpdate","w","globals","selectedDataPoints","selectedPoints","selectedIndex","yearSeries","config","push","window","ApexCharts","exec","chartYearOption","id","events","dataPointSelection","e","opts","quarterChartEl","document","querySelector","yearChartEl","classList","contains","add","remove","updated","distributed","barHeight","textAnchor","opt","dataPointIndex","dropShadow","states","normal","filter","active","allowMultipleDataPointsSelection","subtitle","quarterChartOption","lines","seriesNames","distributedColumnchart","click","dynamicQuarterLoadedChart"],"mappings":"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","sourcesContent":["// Basic Column Chart\n\nconst basicColumnChart = {\n    series: [{\n            name: \"Net Profit\",\n            data: [46, 57, 59, 54, 62, 58, 64, 60, 66],\n        },\n        {\n            name: \"Revenue\",\n            data: [74, 83, 102, 97, 86, 106, 93, 114, 94],\n        },\n        {\n            name: \"Free Cash Flow\",\n            data: [37, 42, 38, 26, 47, 50, 54, 55, 43],\n        },\n    ],\n    chartOptions: {\n        chart: {\n            height: 350,\n            type: \"bar\",\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: \"45%\",\n                endingShape: \"rounded\",\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: [\"transparent\"],\n        },\n        colors: [\"#32ccff\", \"#25a0e2\", \"#0AB39C\"],\n        xaxis: {\n            categories: [\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n            ],\n        },\n        yaxis: {\n            title: {\n                text: \"$ (thousands)\",\n            },\n        },\n        grid: {\n            borderColor: \"#f1f1f1\",\n        },\n        fill: {\n            opacity: 1,\n        },\n        tooltip: {\n            y: {\n                formatter: function (val) {\n                    return \"$ \" + val + \" thousands\";\n                },\n            },\n        },\n    },\n};\n\n// Column with Datalabels\n\nconst columnDatalabelChart = {\n    series: [{\n        name: \"Inflation\",\n        data: [2.5, 3.2, 5.0, 10.1, 4.2, 3.8, 3, 2.4, 4.0, 1.2, 3.5, 0.8],\n    }, ],\n    chartOptions: {\n        chart: {\n            height: 350,\n            type: \"bar\",\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                dataLabels: {\n                    position: \"top\", // top, center, bottom\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n                return val + \"%\";\n            },\n            offsetY: -20,\n            style: {\n                fontSize: \"12px\",\n                colors: [\"#adb5bd\"],\n            },\n        },\n        colors: [\"#25a0e2\"],\n        grid: {\n            borderColor: \"#f1f1f1\",\n        },\n        xaxis: {\n            categories: [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\",\n            ],\n            position: \"top\",\n            labels: {\n                offsetY: -18,\n            },\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            crosshairs: {\n                fill: {\n                    type: \"gradient\",\n                    gradient: {\n                        colorFrom: \"#D8E3F0\",\n                        colorTo: \"#BED1E6\",\n                        stops: [0, 100],\n                        opacityFrom: 0.4,\n                        opacityTo: 0.5,\n                    },\n                },\n            },\n            tooltip: {\n                enabled: true,\n                offsetY: -35,\n            },\n        },\n        fill: {\n            gradient: {\n                shade: \"light\",\n                type: \"horizontal\",\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [50, 0, 100, 100],\n            },\n        },\n        yaxis: {\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                show: false,\n                formatter: function (val) {\n                    return val + \"%\";\n                },\n            },\n        },\n        title: {\n            text: \"Monthly Inflation in Argentina, 2002\",\n            floating: true,\n            offsetY: 320,\n            align: \"center\",\n            style: {\n                color: \"#444\",\n                fontWeight: 500,\n            },\n        },\n    },\n};\n\n// Stacked Columns Charts\n\nconst stackedColumnsChart = {\n    series: [{\n            name: \"PRODUCT A\",\n            data: [44, 55, 41, 67, 22, 43],\n        },\n        {\n            name: \"PRODUCT B\",\n            data: [13, 23, 20, 8, 13, 27],\n        },\n        {\n            name: \"PRODUCT C\",\n            data: [11, 17, 15, 15, 21, 14],\n        },\n        {\n            name: \"PRODUCT D\",\n            data: [21, 7, 25, 13, 22, 8],\n        },\n    ],\n    chartOptions: {\n        chart: {\n            type: \"bar\",\n            height: 350,\n            stacked: true,\n            toolbar: {\n                show: false,\n            },\n            zoom: {\n                enabled: true,\n            },\n        },\n        responsive: [{\n            breakpoint: 480,\n            options: {\n                legend: {\n                    position: \"bottom\",\n                    offsetX: -10,\n                    offsetY: 0,\n                },\n            },\n        }, ],\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                borderRadius: 10,\n            },\n        },\n        xaxis: {\n            type: \"datetime\",\n            categories: [\n                \"01/01/2011 GMT\",\n                \"01/02/2011 GMT\",\n                \"01/03/2011 GMT\",\n                \"01/04/2011 GMT\",\n                \"01/05/2011 GMT\",\n                \"01/06/2011 GMT\",\n            ],\n        },\n        legend: {\n            position: \"right\",\n            offsetY: 40,\n        },\n        fill: {\n            opacity: 1,\n        },\n        colors: [\"#25a0e2\", \"#0AB39C\", \"#32ccff\", \"#eff2f7\"],\n    },\n};\n\n// 100% Stacked Column Chart\n\nconst columnStackedChart = {\n    series: [{\n            name: \"PRODUCT A\",\n            data: [44, 55, 41, 67, 22, 43, 21, 49],\n        },\n        {\n            name: \"PRODUCT B\",\n            data: [13, 23, 20, 8, 13, 27, 33, 12],\n        },\n        {\n            name: \"PRODUCT C\",\n            data: [11, 17, 15, 15, 21, 14, 15, 13],\n        },\n    ],\n    chartOptions: {\n        chart: {\n            type: \"bar\",\n            height: 350,\n            stacked: true,\n            stackType: \"100%\",\n            toolbar: {\n                show: false,\n            },\n        },\n        responsive: [{\n            breakpoint: 480,\n            options: {\n                legend: {\n                    position: \"bottom\",\n                    offsetX: -10,\n                    offsetY: 0,\n                },\n            },\n        }, ],\n        xaxis: {\n            categories: [\n                \"2011 Q1\",\n                \"2011 Q2\",\n                \"2011 Q3\",\n                \"2011 Q4\",\n                \"2012 Q1\",\n                \"2012 Q2\",\n                \"2012 Q3\",\n                \"2012 Q4\",\n            ],\n        },\n        fill: {\n            opacity: 1,\n        },\n        legend: {\n            position: \"right\",\n            offsetX: 0,\n            offsetY: 50,\n        },\n        colors: [\"#25a0e2\", \"#32ccff\", \"#00BD9D\"],\n    },\n};\n\n// column with Markers\n\nconst columnMarkersChart = {\n    series: [{\n        name: \"Actual\",\n        data: [{\n                x: \"2011\",\n                y: 1292,\n                goals: [{\n                    name: \"Expected\",\n                    value: 1400,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2012\",\n                y: 4432,\n                goals: [{\n                    name: \"Expected\",\n                    value: 5400,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2013\",\n                y: 5423,\n                goals: [{\n                    name: \"Expected\",\n                    value: 5200,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2014\",\n                y: 6653,\n                goals: [{\n                    name: \"Expected\",\n                    value: 6500,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2015\",\n                y: 8133,\n                goals: [{\n                    name: \"Expected\",\n                    value: 6600,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2016\",\n                y: 7132,\n                goals: [{\n                    name: \"Expected\",\n                    value: 7500,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2017\",\n                y: 7332,\n                goals: [{\n                    name: \"Expected\",\n                    value: 8700,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n            {\n                x: \"2018\",\n                y: 6553,\n                goals: [{\n                    name: \"Expected\",\n                    value: 7300,\n                    strokeWidth: 5,\n                    strokeColor: \"#775DD0\",\n                }, ],\n            },\n        ],\n    }, ],\n    chartOptions: {\n        chart: {\n            height: 350,\n            type: \"bar\",\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: \"30%\",\n            },\n        },\n        colors: [\"#25A0E2\"],\n        dataLabels: {\n            enabled: false,\n        },\n        legend: {\n            show: true,\n            showForSingleSeries: true,\n            customLegendItems: [\"Actual\", \"Expected\"],\n            markers: {\n                fillColors: [\"#63ad6f\", \"#564ab1\"],\n            },\n        },\n    },\n};\n\n//  Column with Rotated Labels\n\nconst columnRotatedLabel = {\n    series: [{\n        name: \"Servings\",\n        data: [44, 55, 41, 67, 22, 43, 21, 33, 45, 31, 87, 65, 35],\n    }, ],\n    chartOptions: {\n        annotations: {\n            points: [{\n                x: \"Bananas\",\n                seriesIndex: 0,\n                label: {\n                    borderColor: \"#775DD0\",\n                    offsetY: 0,\n                    style: {\n                        color: \"#fff\",\n                        background: \"#775DD0\",\n                    },\n                    text: \"Bananas are good\",\n                },\n            }, ],\n        },\n        chart: {\n            height: 350,\n            type: \"bar\",\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                borderRadius: 10,\n                columnWidth: \"50%\",\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 2,\n        },\n        xaxis: {\n            labels: {\n                rotate: -45,\n            },\n            categories: [\n                \"Apples\",\n                \"Oranges\",\n                \"Strawberries\",\n                \"Pineapples\",\n                \"Mangoes\",\n                \"Bananas\",\n                \"Blackberries\",\n                \"Pears\",\n                \"Watermelons\",\n                \"Cherries\",\n                \"Pomegranates\",\n                \"Tangerines\",\n                \"Papayas\",\n            ],\n            tickPlacement: \"on\",\n        },\n        yaxis: {\n            title: {\n                text: \"Servings\",\n            },\n        },\n        fill: {\n            type: \"gradient\",\n            gradient: {\n                shade: \"light\",\n                type: \"horizontal\",\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 0.85,\n                opacityTo: 0.85,\n                stops: [50, 0, 100],\n            },\n        },\n    },\n};\n\n// Column with Negative Values\n\nconst columnNegativeChart = {\n    series: [{\n        name: \"Cash Flow\",\n        data: [\n            1.45,\n            5.42,\n            5.9,\n            -0.42,\n            -12.6,\n            -18.1,\n            -18.2,\n            -14.16,\n            -11.1,\n            -6.09,\n            0.34,\n            3.88,\n            13.07,\n            5.8,\n            2,\n            7.37,\n            8.1,\n            13.57,\n            15.75,\n            17.1,\n            19.8,\n            -27.03,\n            -54.4,\n            -47.2,\n            -43.3,\n            -18.6,\n            -48.6,\n            -41.1,\n            -39.6,\n            -37.6,\n            -29.4,\n            -21.4,\n            -2.4,\n        ],\n    }, ],\n    chartOptions: {\n        chart: {\n            type: \"bar\",\n            height: 350,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                colors: {\n                    ranges: [{\n                            from: -100,\n                            to: -46,\n                            color: \"#32ccff\",\n                        },\n                        {\n                            from: -45,\n                            to: 0,\n                            color: \"#00BD9D\",\n                        },\n                    ],\n                },\n                columnWidth: \"80%\",\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        yaxis: {\n            title: {\n                text: \"Growth\",\n            },\n            labels: {\n                formatter: function (y) {\n                    return y.toFixed(0) + \"%\";\n                },\n            },\n        },\n        xaxis: {\n            type: \"datetime\",\n            categories: [\n                \"2011-01-01\",\n                \"2011-02-01\",\n                \"2011-03-01\",\n                \"2011-04-01\",\n                \"2011-05-01\",\n                \"2011-06-01\",\n                \"2011-07-01\",\n                \"2011-08-01\",\n                \"2011-09-01\",\n                \"2011-10-01\",\n                \"2011-11-01\",\n                \"2011-12-01\",\n                \"2012-01-01\",\n                \"2012-02-01\",\n                \"2012-03-01\",\n                \"2012-04-01\",\n                \"2012-05-01\",\n                \"2012-06-01\",\n                \"2012-07-01\",\n                \"2012-08-01\",\n                \"2012-09-01\",\n                \"2012-10-01\",\n                \"2012-11-01\",\n                \"2012-12-01\",\n                \"2013-01-01\",\n                \"2013-02-01\",\n                \"2013-03-01\",\n                \"2013-04-01\",\n                \"2013-05-01\",\n                \"2013-06-01\",\n                \"2013-07-01\",\n                \"2013-08-01\",\n                \"2013-09-01\",\n            ],\n            labels: {\n                rotate: -90,\n            },\n        },\n    },\n};\n\n// Range Column Chart\n\nconst rangeColumnChart = {\n    series: [{\n            data: [{\n                    x: \"Team A\",\n                    y: [1, 5],\n                },\n                {\n                    x: \"Team B\",\n                    y: [4, 6],\n                },\n                {\n                    x: \"Team C\",\n                    y: [5, 8],\n                },\n                {\n                    x: \"Team D\",\n                    y: [3, 11],\n                },\n            ],\n        },\n        {\n            data: [{\n                    x: \"Team A\",\n                    y: [2, 6],\n                },\n                {\n                    x: \"Team B\",\n                    y: [1, 3],\n                },\n                {\n                    x: \"Team C\",\n                    y: [7, 8],\n                },\n                {\n                    x: \"Team D\",\n                    y: [5, 9],\n                },\n            ],\n        },\n    ],\n    chartOptions: {\n        chart: {\n            type: \"rangeBar\",\n            height: 335,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n            },\n        },\n        dataLabels: {\n            enabled: true,\n        },\n        legend: {\n            show: false,\n        },\n        colors: [\"#25a0e2\", \"#32ccff\"],\n    },\n};\n\n// dynamic series data\nfunction makeData() {\n    var dataSet = shuffleArray(arrayData);\n\n    var dataYearSeries = [{\n            x: \"2011\",\n            y: dataSet[0].y,\n            color: colors[0],\n            quarters: dataSet[0].quarters,\n        },\n        {\n            x: \"2012\",\n            y: dataSet[1].y,\n            color: colors[1],\n            quarters: dataSet[1].quarters,\n        },\n        {\n            x: \"2013\",\n            y: dataSet[2].y,\n            color: colors[2],\n            quarters: dataSet[2].quarters,\n        },\n        {\n            x: \"2014\",\n            y: dataSet[3].y,\n            color: colors[3],\n            quarters: dataSet[3].quarters,\n        },\n        {\n            x: \"2015\",\n            y: dataSet[4].y,\n            color: colors[4],\n            quarters: dataSet[4].quarters,\n        },\n        {\n            x: \"2016\",\n            y: dataSet[5].y,\n            color: colors[5],\n            quarters: dataSet[5].quarters,\n        },\n    ];\n\n    return dataYearSeries;\n}\n\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n\nfunction updateQuarterChart(sourceChart, destChartIDToUpdate) {\n    var series = [];\n    var seriesIndex = 0;\n    var colors = [];\n\n    if (sourceChart.w.globals.selectedDataPoints[0]) {\n        var selectedPoints = sourceChart.w.globals.selectedDataPoints;\n        for (var i = 0; i < selectedPoints[seriesIndex].length; i++) {\n            var selectedIndex = selectedPoints[seriesIndex][i];\n            var yearSeries = sourceChart.w.config.series[seriesIndex];\n            series.push({\n                name: yearSeries.data[selectedIndex].x,\n                data: yearSeries.data[selectedIndex].quarters,\n            });\n            colors.push(yearSeries.data[selectedIndex].color);\n        }\n\n        if (series.length === 0)\n            series = [{\n                data: [],\n            }, ];\n\n        return window.ApexCharts.exec(destChartIDToUpdate, \"updateOptions\", {\n            series: series,\n            colors: colors,\n            fill: {\n                colors: colors,\n            },\n        });\n    }\n}\n\nconst colors = [\n    \"#45AEE6\",\n    \"#26C7AC\",\n    \"#F1F4F8\",\n    \"#999BA8\",\n    \"#51D4FF\",\n    \"#5fd0f3\",\n];\n\nexport const arrayData = [{\n        y: 400,\n        quarters: [{\n                x: \"Q1\",\n                y: 120,\n            },\n            {\n                x: \"Q2\",\n                y: 90,\n            },\n            {\n                x: \"Q3\",\n                y: 100,\n            },\n            {\n                x: \"Q4\",\n                y: 90,\n            },\n        ],\n    },\n    {\n        y: 430,\n        quarters: [{\n                x: \"Q1\",\n                y: 120,\n            },\n            {\n                x: \"Q2\",\n                y: 110,\n            },\n            {\n                x: \"Q3\",\n                y: 90,\n            },\n            {\n                x: \"Q4\",\n                y: 110,\n            },\n        ],\n    },\n    {\n        y: 448,\n        quarters: [{\n                x: \"Q1\",\n                y: 70,\n            },\n            {\n                x: \"Q2\",\n                y: 100,\n            },\n            {\n                x: \"Q3\",\n                y: 140,\n            },\n            {\n                x: \"Q4\",\n                y: 138,\n            },\n        ],\n    },\n    {\n        y: 470,\n        quarters: [{\n                x: \"Q1\",\n                y: 150,\n            },\n            {\n                x: \"Q2\",\n                y: 60,\n            },\n            {\n                x: \"Q3\",\n                y: 190,\n            },\n            {\n                x: \"Q4\",\n                y: 70,\n            },\n        ],\n    },\n    {\n        y: 540,\n        quarters: [{\n                x: \"Q1\",\n                y: 120,\n            },\n            {\n                x: \"Q2\",\n                y: 120,\n            },\n            {\n                x: \"Q3\",\n                y: 130,\n            },\n            {\n                x: \"Q4\",\n                y: 170,\n            },\n        ],\n    },\n    {\n        y: 580,\n        quarters: [{\n                x: \"Q1\",\n                y: 170,\n            },\n            {\n                x: \"Q2\",\n                y: 130,\n            },\n            {\n                x: \"Q3\",\n                y: 120,\n            },\n            {\n                x: \"Q4\",\n                y: 160,\n            },\n        ],\n    },\n];\n\nconst chartYearOption = {\n    series: [{\n        name: \"year\",\n        data: makeData(),\n    }, ],\n    chartOptions: {\n        chart: {\n            id: \"barYear\",\n            height: 400,\n            width: \"100%\",\n            type: \"bar\",\n            events: {\n                dataPointSelection: (e, chart, opts) => {\n                    var quarterChartEl = document.querySelector(\"#chart-quarter\");\n                    var yearChartEl = document.querySelector(\"#chart-year\");\n\n                    if (opts.selectedDataPoints[0].length === 1) {\n                        if (quarterChartEl.classList.contains(\"active\")) {\n                            updateQuarterChart(chart, \"barQuarter\");\n                        } else {\n                            yearChartEl.classList.add(\"chart-quarter-activated\");\n                            quarterChartEl.classList.add(\"active\");\n                            updateQuarterChart(chart, \"barQuarter\");\n                        }\n                    } else {\n                        updateQuarterChart(chart, \"barQuarter\");\n                    }\n\n                    if (opts.selectedDataPoints[0].length === 0) {\n                        yearChartEl.classList.remove(\"chart-quarter-activated\");\n                        quarterChartEl.classList.remove(\"active\");\n                    }\n                },\n                updated: (chart) => {\n                    updateQuarterChart(chart, \"barQuarter\");\n                },\n            },\n        },\n        plotOptions: {\n            bar: {\n                distributed: true,\n                horizontal: true,\n                barHeight: \"75%\",\n                dataLabels: {\n                    position: \"bottom\",\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            textAnchor: \"start\",\n            style: {\n                colors: [\"#fff\"],\n            },\n            formatter: function (val, opt) {\n                return opt.w.globals.labels[opt.dataPointIndex];\n            },\n            offsetX: 0,\n            dropShadow: {\n                enabled: true,\n            },\n        },\n        colors: colors,\n        states: {\n            normal: {\n                filter: {\n                    type: \"desaturate\",\n                },\n            },\n            active: {\n                allowMultipleDataPointsSelection: true,\n                filter: {\n                    type: \"darken\",\n                    value: 1,\n                },\n            },\n        },\n        tooltip: {\n            x: {\n                show: false,\n            },\n        },\n        title: {\n            text: \"Yearly Results\",\n            offsetX: 15,\n        },\n        subtitle: {\n            text: \"(Click on bar to see details)\",\n            offsetX: 15,\n        },\n        yaxis: {\n            labels: {\n                show: false,\n            },\n        },\n        legend: {\n            show: false\n        }\n    },\n};\n\nconst quarterChartOption = {\n    series: [{\n        data: [],\n    }, ],\n    chartOptions: {\n        chart: {\n            id: \"barQuarter\",\n            height: 330,\n            width: \"100%\",\n            type: \"bar\",\n            stacked: true,\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: \"50%\",\n                horizontal: false,\n            },\n        },\n        legend: {\n            show: false,\n        },\n        grid: {\n            yaxis: {\n                lines: {\n                    show: false,\n                },\n            },\n            xaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: \"Quarterly Results\",\n            offsetX: 10,\n            style: {\n                fontWeight: 600,\n            },\n        },\n        tooltip: {\n            x: {\n                formatter: function (val, opts) {\n                    return opts.w.globals.seriesNames[opts.seriesIndex];\n                },\n            },\n            y: {\n                title: {\n                    formatter: function (val, opts) {\n                        return opts.w.globals.labels[opts.dataPointIndex];\n                    },\n                },\n            },\n        },\n    },\n};\n\n// Distributed Columns Charts\n\nconst distributedColumnchart = {\n    series: [{\n        data: [21, 22, 10, 28, 16, 21, 13, 30],\n    }, ],\n    chartOptions: {\n        chart: {\n            height: 350,\n            type: \"bar\",\n            events: {\n                click: function () {\n                    // console.log(chart, w, e)\n                },\n            },\n        },\n        colors: colors,\n        plotOptions: {\n            bar: {\n                columnWidth: \"45%\",\n                distributed: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        xaxis: {\n            categories: [\n                [\"John\", \"Doe\"],\n                [\"Joe\", \"Smith\"],\n                [\"Jake\", \"Williams\"],\n                \"Amber\",\n                [\"Peter\", \"Brown\"],\n                [\"Mary\", \"Evans\"],\n                [\"David\", \"Wilson\"],\n                [\"Lily\", \"Roberts\"],\n            ],\n            labels: {\n                style: {\n                    colors: [\n                        \"#405189\",\n                        \"#0AB39C\",\n                        \"#F7B84B\",\n                        \"#F06548\",\n                        \"#212529\",\n                        \"#299CDB\",\n                    ],\n                    fontSize: \"12px\",\n                },\n            },\n        },\n    },\n};\n\nconst dynamicQuarterLoadedChart = {\n    series: [{\n        name: \"quarter\",\n        data: [],\n    }, ],\n    chartOptions: {\n        chart: {\n            id: \"barQuarter\",\n            height: 400,\n            width: \"100%\",\n            type: \"bar\",\n            stacked: true,\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: \"50%\",\n                horizontal: false,\n            },\n        },\n        legend: {\n            show: false,\n        },\n        grid: {\n            yaxis: {\n                lines: {\n                    show: false,\n                },\n            },\n            xaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n        yaxis: {\n            labels: {\n                show: false,\n            },\n        },\n        title: {\n            text: \"Quarterly Results\",\n            offsetX: 10,\n        },\n        tooltip: {\n            x: {\n                formatter: function (val, opts) {\n                    return opts.w.globals.seriesNames[opts.seriesIndex];\n                },\n            },\n        },\n    },\n};\n\nexport {\n    basicColumnChart,\n    columnDatalabelChart,\n    stackedColumnsChart,\n    columnStackedChart,\n    columnMarkersChart,\n    columnRotatedLabel,\n    columnNegativeChart,\n    rangeColumnChart,\n    chartYearOption,\n    quarterChartOption,\n    distributedColumnchart,\n    dynamicQuarterLoadedChart,\n};"]},"metadata":{},"sourceType":"module"}