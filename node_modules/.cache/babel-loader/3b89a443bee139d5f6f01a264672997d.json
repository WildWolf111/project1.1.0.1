{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nvar lastTime = 0;\nvar prefixes = 'webkit moz ms o'.split(' '); // 各浏览器前缀\n\nvar requestAnimationFrame;\nvar cancelAnimationFrame;\nvar isServer = typeof window === 'undefined';\n\nif (isServer) {\n  requestAnimationFrame = function requestAnimationFrame() {\n    return;\n  };\n\n  cancelAnimationFrame = function cancelAnimationFrame() {\n    return;\n  };\n} else {\n  requestAnimationFrame = window.requestAnimationFrame;\n  cancelAnimationFrame = window.cancelAnimationFrame;\n  var prefix; // 通过遍历各浏览器前缀，来得到requestAnimationFrame和cancelAnimationFrame在当前浏览器的实现形式\n\n  for (var i = 0; i < prefixes.length; i++) {\n    if (requestAnimationFrame && cancelAnimationFrame) {\n      break;\n    }\n\n    prefix = prefixes[i];\n    requestAnimationFrame = requestAnimationFrame || window[prefix + 'RequestAnimationFrame'];\n    cancelAnimationFrame = cancelAnimationFrame || window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame'];\n  } // 如果当前浏览器不支持requestAnimationFrame和cancelAnimationFrame，则会退到setTimeout\n\n\n  if (!requestAnimationFrame || !cancelAnimationFrame) {\n    requestAnimationFrame = function requestAnimationFrame(callback) {\n      var currTime = new Date().getTime(); // 为了使setTimteout的尽可能的接近每秒60帧的效果\n\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n\n    cancelAnimationFrame = function cancelAnimationFrame(id) {\n      window.clearTimeout(id);\n    };\n  }\n}\n\nexport { requestAnimationFrame, cancelAnimationFrame };","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/node_modules/vue-count-to/src/requestAnimationFrame.js"],"names":["lastTime","prefixes","split","requestAnimationFrame","cancelAnimationFrame","isServer","window","prefix","i","length","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout"],"mappings":";;AAAA,IAAIA,QAAQ,GAAG,CAAf;AACA,IAAMC,QAAQ,GAAG,kBAAkBC,KAAlB,CAAwB,GAAxB,CAAjB,C,CAA8C;;AAE9C,IAAIC,qBAAJ;AACA,IAAIC,oBAAJ;AAEA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;;AACA,IAAID,QAAJ,EAAc;AACZF,EAAAA,qBAAqB,GAAG,iCAAW;AACjC;AACD,GAFD;;AAGAC,EAAAA,oBAAoB,GAAG,gCAAW;AAChC;AACD,GAFD;AAGD,CAPD,MAOO;AACLD,EAAAA,qBAAqB,GAAGG,MAAM,CAACH,qBAA/B;AACAC,EAAAA,oBAAoB,GAAGE,MAAM,CAACF,oBAA9B;AACA,MAAIG,MAAJ,CAHK,CAIH;;AACF,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIL,qBAAqB,IAAIC,oBAA7B,EAAmD;AAAE;AAAO;;AAC5DG,IAAAA,MAAM,GAAGN,QAAQ,CAACO,CAAD,CAAjB;AACAL,IAAAA,qBAAqB,GAAGA,qBAAqB,IAAIG,MAAM,CAACC,MAAM,GAAG,uBAAV,CAAvD;AACAH,IAAAA,oBAAoB,GAAGA,oBAAoB,IAAIE,MAAM,CAACC,MAAM,GAAG,sBAAV,CAA9B,IAAmED,MAAM,CAACC,MAAM,GAAG,6BAAV,CAAhG;AACD,GAVI,CAYL;;;AACA,MAAI,CAACJ,qBAAD,IAA0B,CAACC,oBAA/B,EAAqD;AACnDD,IAAAA,qBAAqB,GAAG,+BAASO,QAAT,EAAmB;AACzC,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB,CADyC,CAEzC;;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,MAAML,QAAQ,GAAGX,QAAjB,CAAZ,CAAnB;AACA,UAAMiB,EAAE,GAAGX,MAAM,CAACY,UAAP,CAAkB,YAAM;AACjCR,QAAAA,QAAQ,CAACC,QAAQ,GAAGG,UAAZ,CAAR;AACD,OAFU,EAERA,UAFQ,CAAX;AAGAd,MAAAA,QAAQ,GAAGW,QAAQ,GAAGG,UAAtB;AACA,aAAOG,EAAP;AACD,KATD;;AAWAb,IAAAA,oBAAoB,GAAG,8BAASa,EAAT,EAAa;AAClCX,MAAAA,MAAM,CAACa,YAAP,CAAoBF,EAApB;AACD,KAFD;AAGD;AACF;;AAED,SAASd,qBAAT,EAAgCC,oBAAhC","sourcesContent":["let lastTime = 0\nconst prefixes = 'webkit moz ms o'.split(' ') // 各浏览器前缀\n\nlet requestAnimationFrame\nlet cancelAnimationFrame\n\nconst isServer = typeof window === 'undefined'\nif (isServer) {\n  requestAnimationFrame = function() {\n    return\n  }\n  cancelAnimationFrame = function() {\n    return\n  }\n} else {\n  requestAnimationFrame = window.requestAnimationFrame\n  cancelAnimationFrame = window.cancelAnimationFrame\n  let prefix\n    // 通过遍历各浏览器前缀，来得到requestAnimationFrame和cancelAnimationFrame在当前浏览器的实现形式\n  for (let i = 0; i < prefixes.length; i++) {\n    if (requestAnimationFrame && cancelAnimationFrame) { break }\n    prefix = prefixes[i]\n    requestAnimationFrame = requestAnimationFrame || window[prefix + 'RequestAnimationFrame']\n    cancelAnimationFrame = cancelAnimationFrame || window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame']\n  }\n\n  // 如果当前浏览器不支持requestAnimationFrame和cancelAnimationFrame，则会退到setTimeout\n  if (!requestAnimationFrame || !cancelAnimationFrame) {\n    requestAnimationFrame = function(callback) {\n      const currTime = new Date().getTime()\n      // 为了使setTimteout的尽可能的接近每秒60帧的效果\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall)\n      }, timeToCall)\n      lastTime = currTime + timeToCall\n      return id\n    }\n\n    cancelAnimationFrame = function(id) {\n      window.clearTimeout(id)\n    }\n  }\n}\n\nexport { requestAnimationFrame, cancelAnimationFrame }\n"]},"metadata":{},"sourceType":"module"}