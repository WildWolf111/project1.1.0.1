{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"row\"\n};\nvar _hoisted_2 = {\n  for: \"labelInput\",\n  class: \"form-label\"\n};\nvar _hoisted_3 = {\n  class: \"col-xxl-3 col-md-6\"\n};\nvar _hoisted_4 = {\n  for: \"exampleDataList\",\n  class: \"form-label\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = {\n  class: \"row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _this = this;\n\n  var _component_PageHeader = _resolveComponent(\"PageHeader\");\n\n  var _component_Select2 = _resolveComponent(\"Select2\");\n\n  var _component_b_button = _resolveComponent(\"b-button\");\n\n  var _component_Layout = _resolveComponent(\"Layout\");\n\n  return _openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_PageHeader, {\n        title: _ctx.title,\n        items: _ctx.items\n      }, null, 8\n      /* PROPS */\n      , [\"title\", \"items\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.$t(\"t-name\")), 1\n      /* TEXT */\n      ), _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"labelInput\",\n        required: \"\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $data.GTD.num_id = $event;\n        })\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_vModelText, $data.GTD.num_id, void 0, {\n        number: true\n      }]])])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t(\"t-countries\")), 1\n      /* TEXT */\n      ), _createVNode(_component_Select2, {\n        modelValue: $data.GTD.Country.id,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.GTD.Country.id = $event;\n        }),\n        modelModifiers: {\n          number: true\n        },\n        options: _this.Countries\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\", \"options\"])]), _hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_createVNode(_component_b_button, {\n        onClick: $options.updateGTD,\n        variant: \"success\",\n        class: \"waves-effect waves-light\"\n      }, {\n        default: _withCtx(function () {\n          return [_createTextVNode(_toDisplayString(_ctx.$t(\"t-Save\")), 1\n          /* TEXT */\n          )];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])])])];\n    }),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;AAqLUA,OAAK,EAAC;;;AAEKC,KAAG,EAAC;AAAaD,OAAK,EAAC;;;AAOvBA,OAAK,EAAC;;;AACAC,KAAG,EAAC;AAAkBD,OAAK,EAAC;;;8BAKvDE,oBAEQ,GAFR,EAEQ,IAFR,EAEQ,IAFR,EAEQ;AAAA;AAFR;;;AAKiBF,OAAK,EAAC;;;;;;;;;;;;;uBAvBrBG,aAiCWC,iBAjCX,EAiCW,IAjCX,EAiCW;sBAhCT;AAAA,aAA4C,CAA5CC,aAA4CC,qBAA5C,EAA4C;AAA/BC,aAAK,EAAEC,UAAwB;AAAhBC,aAAK,EAAED;AAAS,OAA5C;;AAAA,2BAA4C,EAE3CN,oBAKM,KALN,cAKM,CAJDA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAAqE,OAArE,cAAqEQ,iBAAvBF,QAAE,QAAF,CAAuB,CAArE,EAAgD;AAAA;AAAhD,OAEE,kBADHN,oBAA+F,OAA/F,EAA+F;AAAxFS,YAAI,EAAC,MAAmF;AAA5EX,aAAK,EAAC,cAAsE;AAAvDY,UAAE,EAAC,YAAoD;AAAvCC,gBAAQ,EAAR,EAAuC;;iBAAbC,UAAIC,SAAMC;;AAAG,OAA/F;;AAAA,wBAAkFF,UAAIC;gBAApB;UAC/D,CAHN,CAIC,CALN,CAF2C,EAWhCb,oBAGM,KAHN,cAGM,CAFFA,oBAA+E,OAA/E,cAA+EQ,iBAA5BF,QAAE,aAAF,CAA4B,CAA/E,EAAqD;AAAA;AAArD,OAEE,EADFH,aAAqEY,kBAArE,EAAqE;oBAA5CH,UAAII,OAAJ,CAAYN,EAAgC;;iBAA5CE,UAAII,OAAJ,CAAYN,KAAEI;UAA8B;wBAA5D;AAAAG;AAAA,SAA4D;AAA3BC,eAAO,QAAOC;AAAa,OAArE;;AAAA,kCACE,CAHN,CAXgC,EAiBhDC,UAjBgD,EAsBpCpB,oBAKM,KALN,cAKM,CAJFA,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFG,aAA8GkB,mBAA9G,EAA8G;AAAnGC,eAAK,EAAEC,kBAA4F;AAAjFC,eAAO,EAAC,SAAyE;AAA/D1B,aAAK,EAAC;AAAyD,OAA9G;0BAAiF;AAAA,iBAAkB,mCAAfQ,QAAE,QAAF,IAAE;AAAA;WAAa,CAAlB;AAAA;;;;OAAjF;;AAAA,oBAEE,CAHN,CAIE,CALN,CAtBoC,CAA5C;AAAA,MAgCS;;;;AAAA,GAjCX","names":["class","for","_createElementVNode","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","_ctx","items","_toDisplayString","type","id","required","$data","num_id","$event","_component_Select2","Country","number","options","Countries","_hoisted_5","_component_b_button","onClick","$options","variant"],"sourceRoot":"","sources":["C:\\Users\\Max\\Desktop\\project1.0.0-main\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n   return {\n    PageRequest: {\n                        Fields: [{\n                        Name :'',\n                        Value:'',\n                        Operation:'',\n                        Order:'',\n                        }],\n                        PageNumber:0,\n                        PageLenght:0,\n                        TotalRecords:0,\n                        TotalPage:0,\n                    },\n                page: 1,\n                perPage: 7,\n                pages: [],\n                jsonPages: {\n                            PageNumber: 0,\n                            TotalRecords:0,\n                },\n                jsonFields: [{\n                            name:'',\n                            value: ''\n                }],\n\n                search:\"\",\n\n\n      GTD:{\n          id:-1,\n          NumId:\"\",\n         Country:{\n            id:-1,\n            name:\"\"\n         },\n      },\n      message: '',\n      Countries:[{\n        id:-1,\n        name:\"\"\n      }]\n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    getGTD(id) {\n       \n       GTDDataService.get(id)\n        .then(response => {\n         \n            console.log(response.data)\n            if (response.status == 200){\n              this.GTD = response.data;\n            }else{\n              this.$router.push({path: \"/GTDs\"});\n              \n            }\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    updateGTD() {\n        \n        this.GTD.Country.Id = parseInt(this.GTD.Country.Id);\n       GTDDataService.update(this.GTD.id, this.GTD)\n       \n        .then(response => {\n         \n          this.message = 'The GTD was updated successfully!';\n        if (response.data.status_code == 200){\n        this.$router.push({path: \"/GTDs\"})}\n        else{\n        return response.data.message}\n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n\n    deleteGTD() {\n      \n      GTDDataService.delete(this.GTD.Id)\n        .then(response => {\n         \n          this.$router.push({ name: \"GTD\" });\n        if (response.status == 202){\n        this.$router.push({path: \"/GTDs\"})}\n        else{\n        return response.data.message}\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n    \n       retrieveCountries(){\n        \n      this. jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       CountryDataService.getAll(this.jsonPages)\n       .then(response => {\n     \n         \n     let i=0;\n      for(i=0; i<response.data.pg_length;i++){\n           let currentCountry = response.data.List[i];\n          \n           this.Countries[i]={\n    \n            id:currentCountry.id,\n            text:currentCountry.name  \n\n          };\n      }\n\nconsole.log(response.data.List)\n     \n    })\n    .catch(e => {\n      console.log(e);\n    });\n},\n\n  },\n  mounted() {\n    this.message = '';\n    \n    this.getGTD(this.$route.params.id);\n     this.retrieveCountries();\n     \n    \n  }\n\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model.number=\"GTD.num_id\" >\n          </div>                     \n     </div> \n\n  \n\n                <div class=\"col-xxl-3 col-md-6\">\n                    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-countries\") }}</label>\n                    <Select2 v-model.number=\"GTD.Country.id\" :options=\"this.Countries\" />\n                </div>\n\n      \n<p>\n \n    </p>\n  \n    \n            <div class=\"row\">\n                <div>\n                    <b-button @click=\"updateGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \n                              \n                </div> \n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}