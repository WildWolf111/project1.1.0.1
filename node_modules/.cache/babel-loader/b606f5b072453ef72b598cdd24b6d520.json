{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      currentGTD: {\n        Id: -1,\n        num_id: \"\",\n        Country: {\n          id: -1\n        }\n      },\n      message: '',\n      Countrys: [{\n        id: -1,\n        text: \"\"\n      }],\n      selectCountry: {\n        id: -1,\n        text: \"\"\n      }\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader,\n    Select2: Select2\n  },\n  methods: {\n    getGTD: function getGTD(id) {\n      var _this = this;\n\n      GTDDataService.get(id).then(function (response) {\n        console.log(\"************************\");\n        console.log(response.data);\n\n        if (response.status == 200) {\n          _this.currentGTD = response.data;\n        } else {\n          _this.$router.push({\n            path: \"/gtd\"\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateGTD: function updateGTD() {\n      var _this2 = this;\n\n      this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.id);\n      GTDDataService.update(this.currentGTD.Id, this.currentGTD).then(function (response) {\n        _this2.message = 'The GTD was updated successfully!';\n\n        if (response.data.status_code == 200) {\n          _this2.$router.push({\n            path: \"/gtd\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deleteGTD: function deleteGTD() {\n      var _this3 = this;\n\n      GTDDataService.delete(this.currentGTD.Id).then(function (response) {\n        _this3.$router.push({\n          name: \"gtd\"\n        });\n\n        if (response.status == 202) {\n          _this3.$router.push({\n            path: \"/gtd\"\n          });\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    retrieveCountrys: function retrieveCountrys() {\n      var _this4 = this;\n\n      this.jsonPages = {\n        pg_number: 1,\n        pg_length: 1000\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CountryDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        console.log(response.data);\n\n        for (var i = 0; i < response.data.List.length; i++) {\n          console.log(\"<<<<<<<<<<>>>>>>>>>>>>\");\n          console.log(response.data.List.length);\n          var currentCountry = response.data.List[i];\n\n          if (currentCountry.id == _this4.currentGTD.Country.id) {\n            _this4.selectCountry.id = currentCountry.id;\n            _this4.selectCountry.text = currentCountry.Name;\n          }\n\n          _this4.Countrys[i] = {\n            id: currentCountry.id,\n            text: currentCountry.name\n          };\n        } //this.Countrys = response.data.Countrys;\n\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    mySelectEvent: function mySelectEvent(_ref) {\n      var id = _ref.id,\n          text = _ref.text;\n      this.currentGTD.Country.id = id;\n      this.currentGTD.Country.name = text;\n    }\n  },\n  mounted: function mounted() {\n    this.message = '';\n    this.getGTD(this.$route.params.id);\n    this.retrieveCountrys();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","GTDDataService","CountryDataService","Select2","page","title","meta","name","content","description","data","currentGTD","Id","num_id","Country","id","message","Countrys","text","selectCountry","components","methods","getGTD","get","then","console","log","response","status","$router","push","path","catch","e","updateGTD","parseInt","update","status_code","deleteGTD","delete","retrieveCountrys","jsonPages","pg_number","pg_length","search","jsonFields","field","value","getAll","i","List","length","currentCountry","Name","mySelectEvent","mounted","$route","params"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\GTDs\\edit.vue"],"sourcesContent":["<script>\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport GTDDataService from \"/src/services/GTDDataService\";\nimport CountryDataService from \"/src/services/CountryDataService\";\nimport Select2 from 'vue3-select2-component';\n\nexport default {\n  \n  page: {\n    title: \"Basic Elements\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n   return {\n      currentGTD:{\n          Id:-1,\n          num_id:\"\",\n       \n          Country:{\n            id:-1,\n          },\n      },\n      message: '',\n        Countrys:[\n          {\n            id:-1,\n            text:\"\"\n          }\n        ],\n        selectCountry:\n          {\n            id:-1,\n            text:\"\"\n          }\n        ,\n    };\n    \n  },\n  components: {\n    Layout,\n    PageHeader,\n    Select2\n  },\n    methods: {\n    getGTD(id) {\n       \n       GTDDataService.get(id)\n        .then(response => {\n             console.log(\"************************\")\n            console.log(response.data)\n            if (response.status == 200){\n              this.currentGTD = response.data;\n            }else{\n              this.$router.push({path: \"/gtd\"});\n              \n            }\n          \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    updateGTD() {\n        \n        this.currentGTD.Country.Id = parseInt(this.currentGTD.Country.id);\n       GTDDataService.update(this.currentGTD.Id, this.currentGTD)\n       \n        .then(response => {\n         \n          this.message = 'The GTD was updated successfully!';\n        if (response.data.status_code == 200){\n        this.$router.push({path: \"/gtd\"})}\n        else{\n        return response.data.message}\n        })\n        \n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n\n    deleteGTD() {\n      \n      GTDDataService.delete(this.currentGTD.Id)\n        .then(response => {\n         \n          this.$router.push({ name: \"gtd\" });\n        if (response.status == 202){\n        this.$router.push({path: \"/gtd\"})}\n        else{\n        return response.data.message}\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n        \n    },\n    \n       retrieveCountrys(){\n        \n      this. jsonPages = {\n               pg_number:1,\n                  pg_length: 1000\n            };\n         \n            if (this.search!=\"\"){\n            this.jsonFields = [{\n                field:\"name\",\n                value: this.search\n            }];\n            }else{\n                this.jsonFields = [];\n            }\n\n\n       CountryDataService.getAll(this.jsonFields,[],this.jsonPages)\n        .then(response => {\n          console.log(response.data);\n          for(let i = 0; i < response.data.List.length; i++){\n            console.log(\"<<<<<<<<<<>>>>>>>>>>>>\")\n            console.log(response.data.List.length)\n              let currentCountry = response.data.List[i];\n            if (currentCountry.id == this.currentGTD.Country.id){\n                this.selectCountry.id = currentCountry.id;\n                this.selectCountry.text = currentCountry.Name;\n            }\n              this.Countrys[i]={\n                id:currentCountry.id, \n                text:currentCountry.name\n              };\n              \n          }\n          //this.Countrys = response.data.Countrys;\n        \n         \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n     mySelectEvent({id, text}){\n            this.currentGTD.Country.id = id;\n            this.currentGTD.Country.name = text;\n     }\n  },\n  mounted() {\n    this.message = '';\n    \n    this.getGTD(this.$route.params.id);\n     this.retrieveCountrys();\n     \n    \n  }\n\n    \n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    \n     <div class=\"row\">\n          <div>\n              <label for=\"labelInput\" class=\"form-label\">{{ $t(\"t-name\") }}</label>\n             <input type=\"text\" class=\"form-control\" id=\"labelInput\" required  v-model=\"currentGTD.num_id\" >\n          </div>                     \n     </div> \n\n     \n       \n\n<div class=\"col-xxl-3 col-md-6\">\n    <label for=\"exampleDataList\" class=\"form-label\">{{ $t(\"t-countrys\") }}</label>\n    <Select2 v-model=\"currentGTD.Country.id\" :options=\"this.Country\" @select=\"mySelectEvent($event)\"/>\n</div>\n\n      \n<p>\n \n    </p>\n  \n    \n            <div class=\"row\">\n                <div>\n                    <b-button @click=\"updateGTD\" variant=\"success\" class=\"waves-effect waves-light\" >{{ $t(\"t-Save\") }}</b-button> \n                              \n                </div> \n            </div>\n\n\n\n\n    </Layout>\n</template>\n"]},"metadata":{},"sourceType":"module"}