{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\nexport default {\n  page: {\n    title: \"Basic Elements\",\n    meta: [{\n      name: \"description\",\n      content: appConfig.description\n    }]\n  },\n  data: function data() {\n    return {\n      Companies: [],\n      currentCompanies: null,\n      currentIndex: -1,\n      title: \"\",\n      PageRequest: {\n        Fields: [{\n          Name: '',\n          Value: '',\n          Operation: '',\n          Order: ''\n        }],\n        pg_number: 0,\n        pg_length: 0,\n        TotalRecords: 0\n      },\n      page: 1,\n      perPage: 7,\n      pages: [],\n      jsonPages: {\n        currentpage: 0,\n        countsrecordonpage: 0\n      },\n      jsonFields: [{\n        name: '',\n        value: ''\n      }],\n      search: \"\"\n    };\n  },\n  components: {\n    Layout: Layout,\n    PageHeader: PageHeader\n  },\n  methods: {\n    setPage: function setPage(numPage) {\n      this.page = numPage;\n      this.retrieveCompanies();\n    },\n    retrieveCompanies: function retrieveCompanies() {\n      var _this = this;\n\n      this.jsonPages = {\n        pg_number: this.page,\n        pg_length: this.perPage\n      };\n\n      if (this.search != \"\") {\n        this.jsonFields = [{\n          field: \"name\",\n          value: this.search\n        }];\n      } else {\n        this.jsonFields = [];\n      }\n\n      CompaniesDataService.getAll(this.jsonFields, [], this.jsonPages).then(function (response) {\n        _this.Companies = response.data.Items;\n        _this.perPage = response.data.PageRequest.pg_length;\n        _this.page = response.data.PageRequest.pg_number;\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    refreshList: function refreshList() {\n      this.retrieveCompanies();\n      this.currentCompanies = null;\n      this.currentIndex = -1;\n    },\n    setActiveCompanies: function setActiveCompanies(companies, index) {\n      this.currentCompanies = companies;\n      this.currentIndex = companies ? index : -1;\n    },\n    removeAllCompanies: function removeAllCompanies() {\n      var _this2 = this;\n\n      CompaniesDataService.deleteAll().then(function (response) {\n        _this2.refreshList();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    getCompanyByName: function getCompanyByName() {\n      this.retrieveCompanies();\n      this.pages = [];\n    },\n    deleteCompany: function deleteCompany(id) {\n      var _this3 = this;\n\n      CompaniesDataService.delete(id).then(function (response) {\n        if (response.data.message = 202) {\n          _this3.retrieveCompanies();\n        } else {\n          return response.data.message;\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveCompanies();\n  }\n};","map":{"version":3,"mappings":"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","names":["Layout","PageHeader","appConfig","CompaniesDataService","page","title","meta","name","content","description","data","Companies","currentCompanies","currentIndex","PageRequest","Fields","Name","Value","Operation","Order","pg_number","pg_length","TotalRecords","perPage","pages","jsonPages","currentpage","countsrecordonpage","jsonFields","value","search","components","methods","setPage","numPage","retrieveCompanies","field","getAll","then","response","Items","catch","console","log","e","refreshList","setActiveCompanies","companies","index","removeAllCompanies","deleteAll","getCompanyByName","deleteCompany","id","delete","message","mounted"],"sourceRoot":"","sources":["C:\\Projects\\success\\project_v.1.0.0\\src\\views\\companies\\list.vue"],"sourcesContent":["<script>\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport CompaniesDataService from \"/src/services/CompaniesDataService\";\r\n\r\nexport default {\r\n  \r\n  page: {\r\n    title: \"Basic Elements\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  \r\n data() {\r\n    return {\r\n       \r\n      Companies: [],\r\n      currentCompanies: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n\r\n \r\n         PageRequest: {\r\n            Fields: [{\r\n               Name :'',\r\n               Value:'',\r\n               Operation:'',\r\n               Order:'',\r\n            }],\r\n            pg_number:0,\r\n            pg_length:0,\r\n            TotalRecords:0,\r\n        },\r\n      page: 1,\r\n      perPage: 7,\r\n      pages: [],\r\n      jsonPages: {\r\n                currentpage: 0,\r\n                countsrecordonpage: 0\r\n      },\r\n       jsonFields: [{\r\n                name:'',\r\n                value: ''\r\n      }],\r\n      search:\"\",\r\n    \r\n    }; \r\n       \r\n  },\r\n\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n  },\r\n   methods: {\r\n    setPage(numPage){\r\n \r\n        this.page = numPage;\r\n         this.retrieveCompanies();\r\n    },\r\n    retrieveCompanies() {\r\n       this.jsonPages = {\r\n          pg_number:this.page,\r\n          pg_length: this.perPage\r\n      \r\n      };\r\n\r\n      if (this.search!=\"\"){\r\n       this.jsonFields = [{\r\n          field:\"name\",\r\n          value: this.search\r\n       }];\r\n       }else{\r\n           this.jsonFields = [];\r\n       }\r\n\r\n\r\n       CompaniesDataService.getAll(this.jsonFields,[],this.jsonPages)\r\n        .then(response => {\r\n       \r\n          this.Companies = response.data.Items;\r\n           \r\n          this.perPage = response.data.PageRequest.pg_length;\r\n          \r\n          this.page = response.data.PageRequest.pg_number;\r\n          \r\n         \r\n\r\n         \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    refreshList() {\r\n      this.retrieveCompanies();\r\n      this.currentCompanies = null;\r\n      this.currentIndex = -1;\r\n    },\r\n\r\n    setActiveCompanies(companies, index) {\r\n      this.currentCompanies = companies;\r\n      this.currentIndex = companies ? index : -1;\r\n    },\r\n\r\n    removeAllCompanies() {\r\n       CompaniesDataService.deleteAll()\r\n        .then(response => {\r\n       \r\n          this.refreshList();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    \r\n\r\n    getCompanyByName(){\r\n         this.retrieveCompanies();\r\n         this.pages = [];\r\n      \r\n    },\r\n\r\n     deleteCompany(id) {\r\n     \r\n      CompaniesDataService.delete(id)\r\n        .then(response => {\r\n        \r\n         \r\n        if (response.data.message = 202){\r\n        this.retrieveCompanies();\r\n        }\r\n        else{\r\n        return response.data.message}\r\n        \r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n        \r\n    }\r\n  },\r\n  mounted() {\r\n    this.retrieveCompanies();\r\n  },\r\n    \r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    \r\n    <div>\r\n    <h4>Companies</h4>\r\n    </div>\r\n\r\n<div>\r\n    <div class=\"col-lg-6\">\r\n         <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" id=\"search\" v-model=\"search\">\r\n                <button class=\"btn btn-outline-success\" type=\"button\" id=\"button-addon2\" @click=\"getCompanyByName\" key=\"enter\">search</button>\r\n        \r\n         </div>\r\n    </div>\r\n</div>\r\n<p></p>\r\n  \r\n     <table class=\"table table-primary table-striped align-middle table-nowrap mb-0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Slug</th>\r\n            <th scope=\"col\">INN</th>\r\n            <th scope=\"col\">KPP</th>\r\n            <th scope=\"col\">IsInternal</th>\r\n            <th scope=\"col\"></th>\r\n            \r\n            \r\n        \r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr v-for=\"(Company, index) in Companies\" :key=\"index\">\r\n    \r\n           \r\n            <td>{{ Company.Id }}</td>\r\n            <td>{{ Company.name }}</td>\r\n            <td>{{ Company.slug }}</td>\r\n            <td>{{ Company.INN }}</td>\r\n            <td>{{ Company.KPP }}</td>\r\n            <td>{{ Company.IsInternal }}</td>\r\n            \r\n            <td>\r\n                <div class=\"hstack gap-3 flex-wrap\">\r\n                   <router-link :to=\"{name: 'Companies List', params: { id: Company.id_companies }}\"> <a href=\"javascript:void(0);\" class=\"link-primary fs-15\"><i class=\"ri-edit-2-line\"></i></a></router-link>\r\n                    <a href=\"javascript:void(0);\" class=\"link-success fs-15\"><i class=\"ri-delete-bin-line\" @click=\"deleteCompany(Company.id_companies)\"></i></a>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n       \r\n    </tbody>\r\n    <p></p>\r\n</table>\r\n\r\n<div class=\"pagination-wrap hstack gap-2\">\r\n              <a\r\n                class=\"page-item pagination-prev disabled\"\r\n                href=\"#\"\r\n                v-if=\"page != 1\"\r\n                @click=\"setPage((--page))\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <ul class=\"pagination listjs-pagination mb-0\">\r\n                <li\r\n                 :class=\"{\r\n                              active: pageNumber == page,\r\n                              disabled: pageNumber == '...',\r\n                            }\"\r\n                  v-for=\"(pageNumber, index) in pages.slice(page - 1, page + 5)\"\r\n                  :key=\"index\"\r\n                  @click=\"setPage(page = pageNumber)\"\r\n                >\r\n                  <a class=\"page\" href=\"#\"  @click=\"setPage(pageNumber)\">{{ pageNumber }}</a>\r\n                </li>\r\n              </ul>\r\n              <a\r\n                class=\"page-item pagination-next\"\r\n                href=\"#\"\r\n                @click=\"setPage(++page)\"\r\n                v-if=\"page < pages.length\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n\r\n\r\n\r\n\r\n    </Layout>\r\n</template>\r\n"]},"metadata":{},"sourceType":"module"}