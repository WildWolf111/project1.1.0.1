{"ast":null,"code":"import { createApp, h } from 'vue';\nimport { createPlugin } from '@fullcalendar/core';\n/*\nwrap it in an object with a `vue` key, which the custom content-type handler system will look for\n*/\n\nexport function wrapVDomGenerator(vDomGenerator) {\n  return function (props) {\n    return {\n      vue: vDomGenerator(props)\n    };\n  };\n}\nexport function createVueContentTypePlugin(appContext) {\n  return createPlugin({\n    contentTypeHandlers: {\n      vue: function vue() {\n        return buildVDomHandler(appContext);\n      } // looks for the `vue` key\n\n    }\n  });\n}\n\nfunction buildVDomHandler(appContext) {\n  var currentEl;\n  var app;\n  var componentInstance;\n\n  function render(el, vDomContent) {\n    if (currentEl !== el) {\n      if (currentEl && app) {\n        // if changing elements, recreate the vue\n        app.unmount();\n      }\n\n      currentEl = el;\n    }\n\n    if (!app) {\n      app = initApp(vDomContent, appContext); // vue's mount method *replaces* the given element. create an artificial inner el\n\n      var innerEl = document.createElement('span');\n      el.appendChild(innerEl);\n      componentInstance = app.mount(innerEl);\n    } else {\n      componentInstance.content = vDomContent;\n    }\n  }\n\n  function destroy() {\n    if (app) {\n      // needed?\n      app.unmount();\n    }\n  }\n\n  return {\n    render: render,\n    destroy: destroy\n  };\n}\n\nfunction initApp(initialContent, appContext) {\n  // TODO: do something with appContext\n  return createApp({\n    data: function data() {\n      return {\n        content: initialContent\n      };\n    },\n    render: function render() {\n      var content = this.content; // the slot result can be an array, but the returned value of a vue component's\n      // render method must be a single node.\n\n      if (content.length === 1) {\n        return content[0];\n      } else {\n        return h('span', {}, content);\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAcA,SAAd,EAA+DC,CAA/D,QAAoF,KAApF;AACA,SAASC,YAAT,QAAwC,oBAAxC;AAOA;;;;AAGA,OAAM,SAAUC,iBAAV,CAA4BC,aAA5B,EAA+C;AACnD,SAAO,UAASC,KAAT,EAAmB;AACxB,WAAO;AAAEC,SAAG,EAAEF,aAAa,CAACC,KAAD;AAApB,KAAP;AACD,GAFD;AAGD;AAED,OAAM,SAAUE,0BAAV,CAAqCC,UAArC,EAA2D;AAC/D,SAAON,YAAY,CAAC;AAClBO,uBAAmB,EAAE;AACnBH,SAAG,EAAE;AAAA,eAAMI,gBAAgB,CAACF,UAAD,CAAtB;AAAA,OADc,CACsB;;AADtB;AADH,GAAD,CAAnB;AAKD;;AAED,SAASE,gBAAT,CAA0BF,UAA1B,EAAgD;AAC9C,MAAIG,SAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,iBAAJ;;AAEA,WAASC,MAAT,CAAgBC,EAAhB,EAAiCC,WAAjC,EAAqD;AACnD,QAAIL,SAAS,KAAKI,EAAlB,EAAsB;AACpB,UAAIJ,SAAS,IAAIC,GAAjB,EAAsB;AAAE;AACtBA,WAAG,CAACK,OAAJ;AACD;;AACDN,eAAS,GAAGI,EAAZ;AACD;;AAED,QAAI,CAACH,GAAL,EAAU;AACRA,SAAG,GAAGM,OAAO,CAACF,WAAD,EAAcR,UAAd,CAAb,CADQ,CAGR;;AACA,UAAIW,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAN,QAAE,CAACO,WAAH,CAAeH,OAAf;AAEAN,uBAAiB,GAAGD,GAAG,CAACW,KAAJ,CAAUJ,OAAV,CAApB;AACD,KARD,MAQO;AACLN,uBAAiB,CAACW,OAAlB,GAA4BR,WAA5B;AACD;AACF;;AAED,WAASS,OAAT,GAAgB;AACd,QAAIb,GAAJ,EAAS;AAAE;AACTA,SAAG,CAACK,OAAJ;AACD;AACF;;AAED,SAAO;AAAEH,UAAM,EAANA,MAAF;AAAUW,WAAO,EAAPA;AAAV,GAAP;AACD;;AAED,SAASP,OAAT,CAAiBQ,cAAjB,EAA0ClB,UAA1C,EAAgE;AAC9D;AACA,SAAOR,SAAS,CAAC;AACf2B,QADe,kBACX;AACF,aAAO;AACLH,eAAO,EAAEE;AADJ,OAAP;AAGD,KALc;AAMfZ,UANe,oBAMT;AACJ,UAAMU,OAAN,GAAkB,IAAlB,CAAMA,OAAN,CADI,CAGJ;AACA;;AACA,UAAIA,OAAO,CAACI,MAAR,KAAmB,CAAvB,EAA0B;AACxB,eAAOJ,OAAO,CAAC,CAAD,CAAd;AACD,OAFD,MAEO;AACL,eAAOvB,CAAC,CAAC,MAAD,EAAS,EAAT,EAAauB,OAAb,CAAR;AACD;AACF;AAhBc,GAAD,CAAhB;AAkBD","names":["createApp","h","createPlugin","wrapVDomGenerator","vDomGenerator","props","vue","createVueContentTypePlugin","appContext","contentTypeHandlers","buildVDomHandler","currentEl","app","componentInstance","render","el","vDomContent","unmount","initApp","innerEl","document","createElement","appendChild","mount","content","destroy","initialContent","data","length"],"sourceRoot":"","sources":["../src/custom-content-type.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}