{"ast":null,"code":"import _objectSpread from \"C:/Projects/success/project_v.1.0.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nexport var authComputed = _objectSpread(_objectSpread({}, mapState('auth', {\n  currentUser: function currentUser(state) {\n    return state.currentUser;\n  }\n})), mapGetters('auth', ['loggedIn']));\nexport var layoutComputed = _objectSpread({}, mapState('layout', {\n  layoutType: function layoutType(state) {\n    return state.layoutType;\n  },\n  sidebarSize: function sidebarSize(state) {\n    return state.sidebarSize;\n  },\n  layoutWidth: function layoutWidth(state) {\n    return state.layoutWidth;\n  },\n  topbar: function topbar(state) {\n    return state.topbar;\n  },\n  mode: function mode(state) {\n    return state.mode;\n  },\n  position: function position(state) {\n    return state.position;\n  },\n  sidebarView: function sidebarView(state) {\n    return state.sidebarView;\n  },\n  sidebarColor: function sidebarColor(state) {\n    return state.sidebarColor;\n  }\n}));\nexport var authMethods = mapActions('auth', ['logIn', 'logOut', 'register', 'resetPassword']);\nexport var layoutMethods = mapActions('layout', ['changeLayoutType', 'changeLayoutWidth', 'changeSidebarSize', 'changeTopbar', 'changeMode', 'changePosition', 'changeSidebarView', 'changeSidebarColor']);\nexport var authFackMethods = mapActions('authfack', ['loginF', 'registeruser', 'logout']);\nexport var notificationMethods = mapActions('notification', ['success', 'error', 'clear']);\nexport var todoComputed = _objectSpread({}, mapState('todo', {\n  todos: function todos(state) {\n    return state.todos;\n  }\n}));\nexport var todoMethods = mapActions('todo', ['fetchTodos']);","map":{"version":3,"sources":["C:/Projects/success/project_v.1.0.0/src/state/helpers.js"],"names":["mapState","mapGetters","mapActions","authComputed","currentUser","state","layoutComputed","layoutType","sidebarSize","layoutWidth","topbar","mode","position","sidebarView","sidebarColor","authMethods","layoutMethods","authFackMethods","notificationMethods","todoComputed","todos","todoMethods"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,MAAjD;AAEA,OAAO,IAAMC,YAAY,mCAClBH,QAAQ,CAAC,MAAD,EAAS;AAChBI,EAAAA,WAAW,EAAE,qBAACC,KAAD;AAAA,WAAWA,KAAK,CAACD,WAAjB;AAAA;AADG,CAAT,CADU,GAIlBH,UAAU,CAAC,MAAD,EAAS,CAAC,UAAD,CAAT,CAJQ,CAAlB;AAOP,OAAO,IAAMK,cAAc,qBACpBN,QAAQ,CAAC,QAAD,EAAW;AAClBO,EAAAA,UAAU,EAAE,oBAACF,KAAD;AAAA,WAAWA,KAAK,CAACE,UAAjB;AAAA,GADM;AAElBC,EAAAA,WAAW,EAAE,qBAACH,KAAD;AAAA,WAAWA,KAAK,CAACG,WAAjB;AAAA,GAFK;AAGlBC,EAAAA,WAAW,EAAE,qBAACJ,KAAD;AAAA,WAAWA,KAAK,CAACI,WAAjB;AAAA,GAHK;AAIlBC,EAAAA,MAAM,EAAE,gBAACL,KAAD;AAAA,WAAWA,KAAK,CAACK,MAAjB;AAAA,GAJU;AAKlBC,EAAAA,IAAI,EAAE,cAACN,KAAD;AAAA,WAAWA,KAAK,CAACM,IAAjB;AAAA,GALY;AAMlBC,EAAAA,QAAQ,EAAE,kBAACP,KAAD;AAAA,WAAWA,KAAK,CAACO,QAAjB;AAAA,GANQ;AAOlBC,EAAAA,WAAW,EAAE,qBAACR,KAAD;AAAA,WAAWA,KAAK,CAACQ,WAAjB;AAAA,GAPK;AAQlBC,EAAAA,YAAY,EAAE,sBAACT,KAAD;AAAA,WAAWA,KAAK,CAACS,YAAjB;AAAA;AARI,CAAX,CADY,CAApB;AAaP,OAAO,IAAMC,WAAW,GAAGb,UAAU,CAAC,MAAD,EAAS,CAAC,OAAD,EAAU,QAAV,EAAoB,UAApB,EAAgC,eAAhC,CAAT,CAA9B;AAEP,OAAO,IAAMc,aAAa,GAAGd,UAAU,CAAC,QAAD,EAAW,CAAC,kBAAD,EAAqB,mBAArB,EAA0C,mBAA1C,EAA+D,cAA/D,EAA+E,YAA/E,EAA6F,gBAA7F,EAA+G,mBAA/G,EAC9C,oBAD8C,CAAX,CAAhC;AAIP,OAAO,IAAMe,eAAe,GAAGf,UAAU,CAAC,UAAD,EAAa,CAAC,QAAD,EAAW,cAAX,EAA2B,QAA3B,CAAb,CAAlC;AAEP,OAAO,IAAMgB,mBAAmB,GAAGhB,UAAU,CAAC,cAAD,EAAiB,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,CAAjB,CAAtC;AAEP,OAAO,IAAMiB,YAAY,qBAClBnB,QAAQ,CAAC,MAAD,EAAS;AAChBoB,EAAAA,KAAK,EAAE,eAACf,KAAD;AAAA,WAAWA,KAAK,CAACe,KAAjB;AAAA;AADS,CAAT,CADU,CAAlB;AAKP,OAAO,IAAMC,WAAW,GAAGnB,UAAU,CAAC,MAAD,EAAS,CAAC,YAAD,CAAT,CAA9B","sourcesContent":["import { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nexport const authComputed = {\r\n    ...mapState('auth', {\r\n        currentUser: (state) => state.currentUser,\r\n    }),\r\n    ...mapGetters('auth', ['loggedIn']),\r\n}\r\n\r\nexport const layoutComputed = {\r\n    ...mapState('layout', {\r\n        layoutType: (state) => state.layoutType,\r\n        sidebarSize: (state) => state.sidebarSize,\r\n        layoutWidth: (state) => state.layoutWidth,\r\n        topbar: (state) => state.topbar,\r\n        mode: (state) => state.mode,\r\n        position: (state) => state.position,\r\n        sidebarView: (state) => state.sidebarView,\r\n        sidebarColor: (state) => state.sidebarColor\r\n    })\r\n}\r\n\r\nexport const authMethods = mapActions('auth', ['logIn', 'logOut', 'register', 'resetPassword'])\r\n\r\nexport const layoutMethods = mapActions('layout', ['changeLayoutType', 'changeLayoutWidth', 'changeSidebarSize', 'changeTopbar', 'changeMode', 'changePosition', 'changeSidebarView',\r\n    'changeSidebarColor'\r\n])\r\n\r\nexport const authFackMethods = mapActions('authfack', ['loginF', 'registeruser', 'logout'])\r\n\r\nexport const notificationMethods = mapActions('notification', ['success', 'error', 'clear'])\r\n\r\nexport const todoComputed = {\r\n    ...mapState('todo', {\r\n        todos: (state) => state.todos\r\n    })\r\n}\r\nexport const todoMethods = mapActions('todo', ['fetchTodos'])"]},"metadata":{},"sourceType":"module"}